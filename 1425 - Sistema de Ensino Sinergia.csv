ds_agrupamento,nm_relatorio,me_relatorio_config,me_relatorio_view,me_relatorio_index,ds_filtro,cd_relatorio,opcao_tipo_impressao,insert_statement,opcoes_impressao,me_config,LENGHT_opcoes_impressao,cd_unicontrole,nome,apelido,nome_tratado
Acadêmico,Relatório de Avaliação de Desempenho (Teste Não Usar),"<?php
$PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..','..','..','')),'SEGURO' => false, 'NO-SESSION' => true);
require_once($PARMS['PASTA'] . 'nucleo.php');
require_once join(DIRECTORY_SEPARATOR, array('..','..','..','vendor','koolreport','core','autoload.php'));
header('Content-type: text/html; charset=UTF-8');

use \koolreport\processes\ColumnMeta;
use \koolreport\processes\Group;
use \koolreport\processes\OnlyColumn;
use \koolreport\processes\Sort;

// classe padrao do relatorio
class Relatorio extends \koolreport\KoolReport
{
 
   use \koolreport\bootstrap4\Theme;
   use \koolreport\inputs\Bindable;
   use \koolreport\inputs\POSTBinding;
   //use \koolreport\export\Exportable;
   use \koolreport\cloudexport\Exportable;
   const C_SN_CLOUD_EXPORT = true;

   
   public $path_include;
   public $arrDadosFiltro;
   public $arrDadosGerais;

   public function __construct()
   {

      try {
         $this->path_include = join(DIRECTORY_SEPARATOR, array('..','..','..','projetos','relatorios',''));
         parent::__construct();
      } catch (Exception $e) {
         echo 'Exceção capturada: ', $e->getMessage(), ""\n"";
         die;
      }

   }

   // inicializacao dos filtros
   function defaultParamValues()
   {
      return array(
         ""filtros"" => '{}',
         ""gerais"" => '{}'
      );
   }

   // resgate do $_POST para vinculo com os parametros
   function bindParamsToInputs()
   {
      return array(
         ""filtros"",
         ""gerais""
      );
   }

   // funcao responsavel por realizar a conexao com o banco de dados
   // e resgate dos dados tratamento dos dados do $_POST
   public function settings()
   {

      Nucleo::import('relatorios.RelatoriosConexao');
      $objRelatoriosConexao = new RelatoriosConexao;
      return $objRelatoriosConexao->settings();

   }

   // funcao responsavel por manter as consultas a serem executadas pelo relatorio
   // e geracao dos array de dados para uso posterior na visualizacao
   public function setup()
   {

      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','formatos.php'));

      if (ctype_xdigit($_POST[""filtros""])) {
         $_POST[""filtros""] = hex2bin($_POST[""filtros""]);
      }

      if (ctype_xdigit($_POST[""gerais""])) {
         $_POST[""gerais""] = hex2bin($_POST[""gerais""]);
      }

      if (isset($_POST['filtros'])) {
         $this->arrDadosFiltro = json_decode($_POST['filtros']);
      } else {
         $this->arrDadosFiltro = json_decode($_POST);
      }

      if (isset($_POST['gerais'])) {
         $this->arrDadosGerais = json_decode($_POST['gerais']);
      }

      $arrParametros = [];

      foreach ($this->arrDadosFiltro as $filtro => $valor) {
         if (!empty($valor->ds_valor)) {
            $arrParametros["":"" . $filtro] = $valor->ds_valor;
         }
      }

      //Data Souce Calcula Media Professores No curso. Todos Juntinhos

      $this->src('unimestre')->query(
         "" 
      SELECT
         #codigos
      
            pes.cd_pessoa AS cd_prof
            , cl.CD_COLIGADA AS cd_coligada
            , t.anosemestre AS nr_anosemestre
            , q.nr_ordem AS ordem
            , t.codigo AS cd_turma
            , cm.CD_CURSO AS cod_curso
            , cm.DS_CURSO AS nm_curso
            , dp.codigo AS cd_departamento
            , pes.nm_pessoa AS nm_prof
            , dp.descricao AS DEP
            , a.cd_avaliacao AS cd_avaliacao
            , q.cd_questao AS cd_questao
            , q.ds_questao as ds_questao
            , round(avg(qa.vl_pontuacao),2) AS calc_coeficiente
            , CASE 
            WHEN round(avg(qa.vl_pontuacao),2) >= 4.5 AND round(avg(qa.vl_pontuacao),2) <= 5 THEN
               'Muito Bom'
               WHEN round(avg(qa.vl_pontuacao),2) >= 3.5 AND round(avg(qa.vl_pontuacao),2) <= 4.49 THEN
               'Bom'
               WHEN round(avg(qa.vl_pontuacao),2) >= 2.5 AND round(avg(qa.vl_pontuacao),2) <= 3.49 THEN
               'Suficiente'
               WHEN round(avg(qa.vl_pontuacao),2) >= 1 AND round(avg(qa.vl_pontuacao),2) <= 2.49 THEN
               'Insuficiente'
            ELSE
               'Fraco'
         END AS classificacao
            
            
      FROM
            avl_pesquisado_respostas pr
            INNER JOIN avl_questoes q ON (pr.cd_questao = q.cd_questao)
            INNER JOIN avl_questoes_grupos qg ON (q.cd_grupo = qg.cd_grupo)
            INNER JOIN avl_avaliacoes a ON (qg.cd_avaliacao = a.cd_avaliacao)
            INNER JOIN avl_questoes_alternativas qa ON (pr.cd_alternativa = qa.cd_alternativa AND qa.sn_estatisticas = 1)
            INNER JOIN avl_pesquisados p ON (pr.cd_pesquisado = p.cd_pesquisado)
            INNER JOIN avl_pesquisados_grupos pg ON (p.cd_grupo = pg.cd_grupo)
            INNER JOIN avl_repeticao_resposta rr ON (pr.cd_repeticao_resposta = rr.cd_repeticao_resposta)
            INNER JOIN turmas t ON (rr.cd_turma = t.codigo AND a.ds_ano_semestre = t.anosemestre AND t.sn_turma_especial != 1)
            INNER JOIN cursos_coligadas ccl ON (ccl.cd_coligada = t.cd_coligada AND t.curso = ccl.CD_CURSO)
            INNER JOIN cursos_mestre cm ON (cm.cd_curso = ccl.cd_curso)
            INNER JOIN coligadas cl ON (cl.cd_coligada = ccl.cd_coligada)
            INNER JOIN departamentos dp ON (dp.codigo = ccl.cd_depto AND dp.cd_coligada = ccl.cd_coligada)
            INNER JOIN pessoas pes ON (pes.cd_pessoa = rr.cd_pessoa)
	   WHERE 
			 
			1 = 1 AND 
         
         p.cd_situ_respondeu = 2  

         
         AND qg.cd_repeticao in (2, 3)


         AND p.cd_situ_respondeu = 2


            "" .
            ((!empty($arrParametros["":cd_coligada""]))
               ? ""AND cl.cd_coligada IN (:cd_coligada)""
               : NULL
            )
            . ""
            "" .
            ((!empty($arrParametros["":nr_anosemestre""]))
               ? ""AND t.anosemestre IN (:nr_anosemestre)""
               : NULL
            )
            . ""
            "" .
            ((!empty($arrParametros["":id_curso""]))
               ? ""AND cm.ID_CURSO IN (:id_curso)""
               : NULL
            )
            . ""
            "" .
            ((!empty($arrParametros["":cd_turma""]))
               ? ""AND t.codigo IN (:cd_turma)""
               : NULL
            )
            . ""
            "" .
            ((!empty($arrParametros["":cd_departamento""]))
               ? ""AND dp.codigo IN (:cd_departamento)""
               : NULL)
            . ""

					"" .
            ((!empty($arrParametros["":cd_avaliacao""]))
               ? ""AND a.cd_avaliacao IN (:cd_avaliacao)""
               : NULL)
            . ""
            
         GROUP BY
            t.curso, t.codigo, pes.cd_pessoa

         ORDER BY  
            pr.cd_questao ASC
					""
      )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_prof"" => $arrFormatoInteiro
               )
            )
         )
         ->saveTo($consulta);

      // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
      $consulta->pipe($this->dataStore(""dados_consulta""));

      $consulta->pipe(new Group(array(
         ""by"" => array(
            ""cod_curso"",
            ""cd_turma"",
            ""nr_anosemestre""
         )
      )))
         ->pipe(new OnlyColumn(array(
            ""cod_curso"",
            ""calc_coeficiente"",
            ""cd_turma"",
            ""cd_questao"",
            ""ds_questao"",
            ""nr_anosemestre"",
            ""cd_prof"",
            ""DEP"",
            ""nm_prof"",
            ""cd_avaliacao"",
            ""nm_curso""
         )))
         ->pipe(new Sort(array(
            ""nm_prof""=>""asc""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));
       

      //Data Souce Calcula Media Professores Geral. Individual

         $this->src('unimestre')->query(
            "" 
            SELECT
            #codigos
              pes.cd_pessoa AS cd_prof
            , cl.CD_COLIGADA AS cd_coligada
            , t.anosemestre AS nr_anosemestre
            , q.nr_ordem AS ordem
            , t.codigo AS cd_turma
            , cm.CD_CURSO AS cod_curso
            , cm.DS_CURSO AS nm_curso
            , dp.codigo AS cd_departamento
            , pes.nm_pessoa AS nm_prof
            , dp.descricao AS DEP
            , a.cd_avaliacao AS cd_avaliacao
            , q.cd_questao AS cd_questao
            , q.ds_questao as ds_questao
            , round(avg(qa.vl_pontuacao),2) AS calc_coeficiente
            , CASE 
            WHEN round(avg(qa.vl_pontuacao),2) >= 4.5 AND round(avg(qa.vl_pontuacao),2) <= 5 THEN
               'Muito Bom'
               WHEN round(avg(qa.vl_pontuacao),2) >= 3.5 AND round(avg(qa.vl_pontuacao),2) <= 4.49 THEN
               'Bom'
               WHEN round(avg(qa.vl_pontuacao),2) >= 2.5 AND round(avg(qa.vl_pontuacao),2) <= 3.49 THEN
               'Suficiente'
               WHEN round(avg(qa.vl_pontuacao),2) >= 1 AND round(avg(qa.vl_pontuacao),2) <= 2.49 THEN
               'Insuficiente'
            ELSE
               'Fraco'
         END AS classificacao
      FROM
          avl_pesquisado_respostas pr
          INNER JOIN avl_questoes q ON (pr.cd_questao = q.cd_questao)
          INNER JOIN avl_questoes_grupos qg ON (q.cd_grupo = qg.cd_grupo)
          INNER JOIN avl_avaliacoes a ON (qg.cd_avaliacao = a.cd_avaliacao)
          INNER JOIN avl_questoes_alternativas qa ON (pr.cd_alternativa = qa.cd_alternativa AND qa.sn_estatisticas = 1)
          INNER JOIN avl_pesquisados p ON (pr.cd_pesquisado = p.cd_pesquisado)
          INNER JOIN avl_pesquisados_grupos pg ON (p.cd_grupo = pg.cd_grupo)
          INNER JOIN avl_repeticao_resposta rr ON (pr.cd_repeticao_resposta = rr.cd_repeticao_resposta)
          INNER JOIN turmas t ON (rr.cd_turma = t.codigo AND a.ds_ano_semestre = t.anosemestre AND t.sn_turma_especial != 1)
          INNER JOIN cursos_coligadas ccl ON (ccl.cd_coligada = t.cd_coligada AND t.curso = ccl.CD_CURSO)
          INNER JOIN cursos_mestre cm ON (cm.cd_curso = ccl.cd_curso)
          INNER JOIN coligadas cl ON (cl.cd_coligada = ccl.cd_coligada)
          INNER JOIN departamentos dp ON (dp.codigo = ccl.cd_depto AND dp.cd_coligada = ccl.cd_coligada)
          INNER JOIN pessoas pes ON (pes.cd_pessoa = rr.cd_pessoa)
      WHERE 
             
            1 = 1 AND 
            
            p.cd_situ_respondeu = 2  
            
            AND qg.cd_repeticao in (2, 3)
   
            AND p.cd_situ_respondeu = 2
               "" .
               ((!empty($arrParametros1["":cd_coligada""]))
                  ? ""AND cl.cd_coligada IN (:cd_coligada)""
                  : NULL
               )
               . ""
               "" .
               ((!empty($arrParametros1["":nr_anosemestre""]))
                  ? ""AND t.anosemestre IN (:nr_anosemestre)""
                  : NULL
               )
               . ""
               "" .
               ((!empty($arrParametros1["":cd_departamento""]))
                  ? ""AND dp.codigo IN (:cd_departamento)""
                  : NULL)
               . ""
   
                  "" .
               ((!empty($arrParametros1["":cd_avaliacao""]))
                  ? ""AND a.cd_avaliacao IN (:cd_avaliacao)""
                  : NULL)
               . ""
               
            GROUP BY
            q.ds_questao, pes.cd_pessoa
   
            ORDER BY  
               pr.cd_questao ASC
                  ""
         )
            // aplicacao de filtro a consulta
            ->params(
               $arrParametros1
            )
            // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
            // para simplificar e melhorar a apresentacao dos dados na visualizacao
            ->pipe(
               new ColumnMeta(
                  array(
                     ""cd_prof"" => $arrFormatoInteiro
                  )
               )
            )
            ->saveTo($consulta_prof_md_geral);
   
         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
         $consulta_prof_md_geral->pipe($this->dataStore(""dados_prof_md_geral""));

   
         $consulta_prof_md_geral->pipe(new Group(array(
            ""by"" => array(
              
            ""cod_curso"",
            ""cd_turma"",
            ""nr_anosemestre""
               
            )
         )))
            ->pipe(new OnlyColumn(array(
               ""cod_curso"",
               ""calc_coeficiente"",
               ""classificacao"",
               ""cd_turma"",
               ""cd_questao"",
               ""ds_questao"",
               ""nr_anosemestre"",
               ""cd_prof"",
               ""DEP"",
               ""nm_prof"",
               ""cd_avaliacao"",
               ""nm_curso""
            )))
            ->pipe(new Sort(array(
               ""cd_questao""=>""asc""
            )))
            ->pipe($this->dataStore(""dados_consulta_prof_md_geral""));

            
      $this->src('unimestre')->query(
         ""
            SELECT
               us.cd_pessoa AS cod_usuario
            ,  us.nm_pessoa AS nm_usuario
            ,  IFNULL(rl.ds_chave,'------') AS ds_chave_rel
            FROM
               pessoas us
            INNER JOIN
               rgo_logs_impressoes rli ON (rli.cd_pessoa = us.cd_pessoa)
            INNER JOIN
               rgo_relatorios rl ON (rl.cd_relatorio = rli.cd_relatorio)
            WHERE
               rli.cd_relatorio = "" . $this->arrDadosGerais->cd_relatorio . ""
            ORDER BY
               rli.dt_impressao DESC
            LIMIT 1
         ""
      )
      ->saveTo($dados_footer);

      $dados_footer->pipe($this->dataStore(""dados_rodape""));

      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));
   }
}","<?php

use \koolreport\widgets\koolphp\Table;
use \koolreport\processes\Filter;

// path pasta
$path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

// margens
$ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
$ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
$ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
$ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

$sn_geracao = $_POST[""pdf""];

//cabecalho
foreach ($this->dataStore(""dados_cabecalhos"") as $cabecalho) {
    if (
        ($cabecalho[""cd_coligada""] == $this->dataStore(""dados_consulta"")[0][""cd_coligada_cabecalho""]
            && $cabecalho[""cd_relatorio""] == $this->arrDadosGerais->cd_relatorio)
        ||
        ($cabecalho[""cd_coligada""] == 0
            && $cabecalho[""cd_relatorio""] == 0)
    ) {

        $logo = $cabecalho[""ds_link_cdn""];
        break;
    }
}

?>

<html>

<head>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
</head>

<body class=""relatorio"">
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

    <?php

foreach ($this->dataStore(""dados_consulta_agrupado"") as $visualizacao) {

    $dados_pagina = $this->dataStore(""dados_consulta"")
        ->filter(
            ""cod_curso"",
            ""="",
            $visualizacao[""cod_curso""]
        )

        ->filter(
            ""cd_turma"",
            ""="",
            $visualizacao[""cd_turma""]
        )

        ->filter(
            ""nr_anosemestre"",
            ""="",
            $visualizacao[""nr_anosemestre""]
        );


    ?>

        <style>
            .custom_size {
                font-size: 11px;
                font-weight: bold;
            }
        </style>

        <style>
            .size {
                font-size: 11px !important;

            }
        </style>

        <style>
            .borda {
                border: 1px solid !important;
                text-align: center !important;

            }

            table,
            tr,
            td {
                border: 3px solid #dee2e6 !important;
                padding: 3px !important;
                margin: 0px !important;
            }

            div,
            h1 {
                font-size: 16px !important;
            }
        </style>


        <div class=""container"">
            <div class=""conteudo"" style=""
                  padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
                  padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
                  padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
                  padding-right: <?= $ds_margem_direita . 'cm' ?>;
               "">

                <div>

                    <div style=""float: left; margin: 0; padding: 0;""><img src=""http://196.29.199.92/arquivo/cliente/imagens/pic_logo_inst2.png"" width=""350"" height=""126"">
                    </div>
                    <div class=""text-right"" style=""line-height: 25px; margin-bottom:30px;"">
                        <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'filtro.php')); ?>

                    </div>

                    <div style=""margin-bottom: 60px !important;""></div>

                    <div>

                        <h1 style=""margin-bottom: 25px; text-align:center; font-size:36px !important; font-weight:bold; color:#A9A9A9"">
                            <?= $this->arrDadosGerais->nm_relatorio ?>
                        </h1>

                    </div>

                    <?php

                    // componente responsavel pela criacao da tabela de dados
                    Table::create(array(
                        ""dataSource"" => $dados_pagina,
                        ""grouping"" => array(
                            ""cd_turma"" => array(
                                ""top"" => ""<td colspan='5' align='center'><b>Média Professores da Turma {cd_turma}</b></td> 
                              <tr>
                                <td align='center'><b>Código Professor</b></td>
                                 <td align='center'><b>Nome do Docente</b></td>
                                 <td align='center'><b>Departamento</b></td>
                                 <td align='center'><b>Coeficiente</b></td>
                                 <td align='center'><b>Classificação</b></td>

                              </tr>   
                                "",
                                ""bottom"" => """",
                            )

                        ),
                        ""showHeader"" => false,

                        ""columns"" => array(
                            ""cd_prof"" => array(
                                ""cssStyle"" => ""text-align:center""
                            ),

                            ""nm_prof"" => array(
                                ""cssStyle"" => ""text-align:center""


                            ),
                            ""DEP"" => array(
                                ""cssStyle"" => ""text-align:center""


                            ),
                            ""calc_coeficiente"" => array(
                                ""cssStyle"" => ""text-align:center""


                            ),
                            ""classificacao"" => array(
                                ""cssStyle"" => ""text-align:center""

                            )

                        ),
                        ""cssClass"" => array(
                            ""table"" => ""table table-striped table-hover"",
                            ""tr"" => """",
                            ""th"" => """",
                            ""td"" => """",
                            ""tf"" => ""darker""
                        ),
                        ""sorting"" => array(
                            ""nm_prof"" => ""asc""
                        )
                    ));

                    ?>

                    <div style=""margin-bottom: 40px;""></div>
 
            </div>

        </div>
        <div class=""page-break"" style=""page-break-after: always;""></div>
    </div>

    <?php

         } // fim do foreach

    ?>

</body>

</html>","<?php

require_once ""Relatorio.php"";	

$relatorio = new Relatorio;

$relatorio->run()->render();
","[
	{
		""tipo"": ""uni-select-coligada-filha"",
		""obrigatorio"": false,
		""label"": ""Unidade"",
		""ds_campo"": ""cd_coligada""
	},
	{
		""tipo"": ""campo-anosemestre"",
		""obrigatorio"": true,
		""label"": ""Ano/Semestre"",
		""ds_campo"": ""nr_anosemestre""
	},
	{
		""tipo"": ""uni-select-departamento"",
		""obrigatorio"": false,
		""label"": ""Departamento"",
		""ds_campo"": ""cd_departamento""
    },
	
	{
		""tipo"": ""uni-select-curso"",
		""obrigatorio"": true,
		""label"": ""Curso"",
		""ds_campo"": ""id_curso""
	},
	
	 {
		""tipo"": ""uni-busca-turma"",
		""obrigatorio"": false,
		""label"": ""Turma"",
		""ds_campo"": ""cd_turma""
	},
	
		{
    ""tipo"": ""campo-dinamico"",
      ""obrigatorio"": true,
      ""label"": ""Selecione a Avaliação"",
      ""ds_chave"": ""busca-avaliacao"",
    ""ds_campo"": ""cd_avaliacao""
   }
]",102,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,6,1,""Relatório de Avaliação de Desempenho (Teste Não Usar)"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,1,""Retornar os Professores do Anosemestre filtrado com seus respectivos coeficientes de avaliação"", NULL,""ava_coeficiente"",""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Acadêmico,Resumo de Matrículas X Vagas,"<?php
$PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
require_once($PARMS['PASTA'] . 'nucleo.php');
require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
header('Content-type: text/html; charset=UTF-8');

use \koolreport\processes\ColumnMeta;
use \koolreport\processes\Group;
use \koolreport\processes\OnlyColumn;

// classe padrao do relatorio
class Relatorio extends \koolreport\KoolReport
{
   use \koolreport\bootstrap4\Theme;
   use \koolreport\inputs\Bindable;
   use \koolreport\inputs\POSTBinding;
   // use \koolreport\export\Exportable;
   use \koolreport\cloudexport\Exportable;

    const C_SN_CLOUD_EXPORT = true;

   public $path_include;
   public $arrDadosFiltro;
   public $arrDadosGerais;

   public function __construct()
   {
      try {
         $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
         parent::__construct();
      } catch (Exception $e) {
         echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
         die;
      }
   }

   // inicializacao dos filtros
   function defaultParamValues()
   {
      return array(
         ""filtros"" => '{}',
         ""gerais"" => '{}'
      );
   }

   // resgate do $_POST para vinculo com os parametros
   function bindParamsToInputs()
   {
      return array(
         ""filtros"",
         ""gerais""
      );
   }

   // funcao responsavel por realizar a conexao com o banco de dados
   // e resgate dos dados tratamento dos dados do $_POST
   public function settings()
   {
      Nucleo::import('relatorios.RelatoriosConexao');
      $objRelatoriosConexao = new RelatoriosConexao;

      return $objRelatoriosConexao->settings();
   }

   // funcao responsavel por manter as consultas a serem executadas pelo relatorio
   // e geracao dos array de dados para uso posterior na visualizacao
   public function setup()
   {
      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

      if (ctype_xdigit($_POST[""filtros""])) {
         $_POST[""filtros""] = hex2bin($_POST[""filtros""]);
      }

      if (ctype_xdigit($_POST[""gerais""])) {
         $_POST[""gerais""] = hex2bin($_POST[""gerais""]);
      }

      if (isset($_POST['filtros'])) {
         $this->arrDadosFiltro = json_decode($_POST['filtros']);
      } else {
         $this->arrDadosFiltro = json_decode($_POST);
      }

      if (isset($_POST['gerais'])) {
         $this->arrDadosGerais = json_decode($_POST['gerais']);
      }

      $arrParametros = [];

      foreach ($this->arrDadosFiltro as $filtro => $valor) {
         if (!empty($valor->ds_valor)) {
            $arrParametros["":"" . $filtro] = $valor->ds_valor;
         }
      }
         $this->src('unimestre')->query(
         ""
         SELECT 
            z.*, 
            z.vg_turma - z.nr_matriculados AS sl_vagas,
            z.vg_turma - z.nr_remat AS sl_vagas_remat
         FROM 
            (
            SELECT 
               c.*, 
               (
               c.matriculas + c.rematriculas - c.tranf_ext
               ) AS nr_matriculados,
            c.rematriculas AS nr_remat, 
               c.nr_vg_turma AS vg_turma 
         FROM 
               (
               SELECT
                  ma.codigoaluno AS cd_aluno,
                  ma.anosemestre AS nr_anosemestre,
                  CONCAT(LEFT(ma.anosemestre,4), '/', RIGHT(ma.anosemestre,1)) AS ano_cab,
                  ma.curso AS cd_curso,  
                  cm.DS_CURSO AS nm_curso,
                  ma.turma AS cd_turma, 
                  GET_MATRICULAS_INGRESSO(
                     ma.anosemestre, ma.curso, ma.turma, 
                     tu.cd_coligada, dp.codigo,:dt_inicio,:dt_fim
                  ) AS matriculas, 
                  GET_REMATRICULAS_INGRESSO(
                     ma.anosemestre, ma.curso, ma.turma, 
                     tu.cd_coligada, dp.codigo,:dt_inicio,:dt_fim
                  ) AS rematriculas, 
                  GET_TRANF_EXTERN_INGRESSO(
                     ma.anosemestre, ma.curso, ma.turma, 
                     tu.cd_coligada, dp.codigo,:dt_inicio,:dt_fim
                  ) AS tranf_ext, 
                  GET_RESERVADOS_INGRESSO(
                     ma.anosemestre, ma.curso, ma.turma, 
                     tu.cd_coligada, dp.codigo, :dt_inicio,:dt_fim
                  ) AS reservados,
               
               GET_NAO_REMATRICULADOS_INGRESSO(
                     ma.curso, ma.turma, 
                     tu.cd_coligada, dp.codigo, :dt_inicio,:dt_fim
                  ) AS nao_rem,
               
               GET_MATRICULAS_ANO_ANTERIOR(
                     ma.curso, ma.turma, 
                     tu.cd_coligada, dp.codigo
                  ) AS rem_ano_ant,
               
                  tu.vagas AS nr_vg_turma 
               
             FROM 
                  matriculas ma 
                  INNER JOIN turmas tu ON (
                     ma.turma = tu.codigo 
                     AND ma.anosemestre = tu.anosemestre
                  ) 
                  INNER JOIN cursos_coligadas ccl ON (
                     ccl.cd_curso = ma.curso 
                     AND ccl.cd_coligada = tu.cd_coligada
                  ) 
                  INNER JOIN cursos_mestre cm ON (cm.cd_curso = ccl.cd_curso) 
                  INNER JOIN coligadas cl ON (cl.cd_coligada = ccl.cd_coligada) 
                  INNER JOIN departamentos dp ON (
                     dp.codigo = ccl.cd_depto 
                     AND dp.cd_coligada = ccl.cd_coligada
                  ) 
                  INNER JOIN turnos ON (tu.turno = turnos.codigo) 
                  INNER JOIN situacao ON (
                     situacao.cd_situacao = ma.situacao
                  ) 
                  INNER JOIN matriculas_curso mc ON (
                     ma.cd_matricula_curso = mc.cd_matricula_curso
                  ) 
                  INNER JOIN pessoas pe ON (ma.codigoaluno = pe.cd_pessoa) 
               WHERE 
               1 = 1

                 "" .
                  ((!empty($arrParametros["":dt_inicio""]))
                     ? ""AND ma.dataemissao >= :dt_inicio""
                     : NULL
                  )
               . ""
   
                 "" .
                  ((!empty($arrParametros["":dt_fim""]))
                     ? ""AND ma.dataemissao <= :dt_fim""
                     : NULL
                  )
               . ""

               "" .
                  ((!empty($arrParametros["":cd_coligada""]))
                     ? ""AND tu.cd_coligada IN (:cd_coligada)""
                     : NULL
                  )
               . ""
            
               "" .
                  ((!empty($arrParametros["":nr_anosemestre""]))
                     ? ""AND ma.anosemestre IN (:nr_anosemestre)""
                     : NULL
                  )
               . ""

               "" .
                  ((!empty($arrParametros["":cd_departamento""]))
                     ? ""AND dp.codigo IN (:cd_departamento)""
                     : NULL
                  )
               . ""
           
               "" .
                  ((!empty($arrParametros["":id_curso""]))
                     ? ""AND cm.id_curso IN (:id_curso)""
                     : NULL
                  )
               . ""
            
               "" .
                  ((!empty($arrParametros["":cd_turma""]))
                     ? ""AND ma.turma IN (:cd_turma)""
                     : NULL
                  )
               . ""
               
               GROUP BY 
                  ma.anosemestre,
                  ma.curso, 
                  ma.turma
               ) AS c
         ) AS z

         "")
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""nr_anosemestre"" => $arrFormatoInteiro,
                  ""id_curso"" => $arrFormatoInteiro,
               )
            )
         )
         ->saveTo($consulta);

      // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
      $consulta
         ->pipe($this->dataStore(""dados_consulta""));

      $consulta
         ->pipe(new Group(array(
            ""by"" => array(
               ""nr_anosemestre"",
               ""cd_curso""
            )
         )))
         ->pipe(new OnlyColumn(array(
               ""nr_anosemestre"",
               ""cd_curso""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));

      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									
									
   }
}
","<?php

   use \koolreport\widgets\koolphp\Table;
   use \koolreport\processes\Filter;

   // path pasta
   $path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

   // margens
   $ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
   $ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
   $ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
   $ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

   $sn_geracao = $_POST[""pdf""];

?>

<html>
   <head>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
      <style>
         tr, td, th, tbody, thead, tfoot {
         font-size: 10px !important;
         }

         @page {
            size:landscape !important;
         }

         .borda {
            border: 1px solid #dee2e6;
         }         
         .totalizador {
         min-height: 0cm !important;
         }
         .fonte {
            font-size: 10px !important;
         }
         .b {
            font-weight: bold !important;
         }
         ul li {
            font-size: 11px !important;
         }
         .rodape {
            font-size: 9px !important;
         }
      </style>
   </head>

   <body class=""relatorio"">
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); 

      $tot_matriculados = $this->dataStore('dados_consulta')->sum(""matriculas"");
      $tot_rematriculados = $this->dataStore('dados_consulta')->sum(""rematriculas"");
      $tot_tranf_ext = $this->dataStore('dados_consulta')->sum(""tranf_ext"");
      $tot_reservados = $this->dataStore('dados_consulta')->sum(""reservados"");
      $tot_nao_rem = $this->dataStore('dados_consulta')->sum(""nao_rem"");
      $tot_rem_ano_ant  = $this->dataStore('dados_consulta')->sum(""rem_ano_ant"");
      $tot_vagas_turma  = $this->dataStore('dados_consulta')->sum(""nr_vg_turma"");
      $tot_nr_matriculados = $this->dataStore('dados_consulta')->sum(""nr_matriculados"");
      $tot_sl_vagas = $this->dataStore('dados_consulta')->sum(""sl_vagas"");
      $tot_sl_vagas_rem = $this->dataStore('dados_consulta')->sum(""sl_vagas_remat"");

      $count = $this->dataStore('dados_consulta_agrupado')->count();
      $count = $count - 1;
      ?>

      <?php foreach($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao) { ?>
         <?php
            $dados_pagina = $this->dataStore(""dados_consulta"")
               ->filter(
                  ""cd_curso"",""="",$visualizacao[""cd_curso""]
               )
               ->filter(
                  ""nr_anosemestre"",""="",$visualizacao[""nr_anosemestre""]
               )
         ?>

         <div class=""container"">
            <div
               class=""conteudo""
               style=""
                  padding-top: <?=((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm'?>;
                  padding-bottom: <?=((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm'?>;
                  padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                  padding-right: <?=$ds_margem_direita . 'cm'?>;
                  "">
               <div style=""vertical-align: top; min-height: 100;"">
                  <table style=""width: 100%;"">
                     <tr>
                        <td style=""text-align: left; width: 55%;"">
                           <?php
                              require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','cabecalho.php'));
                           ?>
                        </td>
                        <td style=""text-align: right; max-width: 45%;"">
                           <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','filtro.php')); ?>
                        </td>
                     </tr>
                  </table>
               </div>

                  <h5 class=""text-center"" style=""margin: 0.25rem;"">
                    Resumo de Matrículas X Vagas
                  </h5>

                  <h5 class=""text-left"" style=""margin: 0.25rem;"">
                    Período: <?= $dados_pagina[0]['ano_cab'] ?>
                  </h5>

                <div style=""display: flex; justify-content:center"">

                  <?php
                    // componente responsavel pela criacao da tabela de dados
                    Table::create(array(
                        ""dataSource"" => $dados_pagina,
                        ""grouping"" => array(
                            ""nm_curso"" => array(
                              ""calculate"" => array(      
                                 ""{somaMatriculados}"" => array(""sum"", ""matriculas""),
                                 ""{somaRematriculas}"" => array(""sum"", ""rematriculas""),
                                 ""{somaTransfExterna}"" => array(""sum"", ""tranf_ext""),
                                 ""{somaReservados}"" => array(""sum"", ""reservados""),
                                 ""{somaNaoRematriculados}"" => array(""sum"", ""nao_rem""),
                                 ""{somaRematAnoAnt}"" => array(""sum"", ""rem_ano_ant""),
                                 ""{somaVgTurma}"" => array(""sum"", ""nr_vg_turma""),
                                 ""{somaNrMatriculados}"" => array(""sum"", ""nr_matriculados""),
                                 ""{somaSaldoVagas}"" => array(""sum"", ""sl_vagas""),
                                 ""{somaSaldoVagasRemat}"" => array(""sum"", ""sl_vagas_remat""),
                                ),

                                ""top"" => ""<td colspan='11' align='center'><b>Curso {nm_curso} </b></td> 
                              <tr>
                                <td style='font-size:10px !important' align='center'>Turma</td>
                                <td style='font-size:10px !important' align='center'>Matriculas</td>
                                 <td style='font-size:10px !important' align='center'>Rematrículas</td>
                                 <td style='font-size:10px !important' align='center'>Transferência Externa</td>
                                 <td style='font-size:10px !important' align='center'>Reservados</td>
                                 <td style='font-size:10px !important' align='center'>Não Rematriculados</td>
                                 <td style='font-size:10px !important' align='center'>Rematriculados Ano Anterior</td>
                                 <td style='font-size:10px !important' align='center'>Nr.Vagas Turma</td>
                                 <td style='font-size:10px !important' align='center'>Numero de Matriculados</td>
                                 <td style='font-size:10px !important' align='center'>Saldo de Vagas</td>
                                 <td style='font-size:10px !important' align='center'>Saldo de Vagas Rematrícula</td>
                              </tr>   
                                "",
                                ""bottom"" => ""<td align='center' class='fonte p-2 b font-weight-bold'>Total Turma:</td>
                                    <td align='center' class='fonte p-2 b'>{somaMatriculados}</td>
                                    <td align='center' class='fonte p-2 b'>{somaRematriculas}</td>
                                    <td align='center' class='fonte p-2 b'>{somaTransfExterna}</td>
                                    <td align='center' class='fonte p-2 b'>{somaReservados}</td>
                                    <td align='center' class='fonte p-2 b'>{somaNaoRematriculados}</td>
                                    <td align='center' class='fonte p-2 b'>{somaRematAnoAnt}</td>
                                    <td align='center' class='fonte p-2 b'>{somaVgTurma}</td>
                                    <td align='center' class='fonte p-2 b'>{somaNrMatriculados}</td>
                                    <td align='center' class='fonte p-2 b'>{somaSaldoVagas}</td>
                                    <td align='center' class='fonte p-2 b'>{somaSaldoVagasRemat}</td>
                                 
                                "",
                            )

                        ),
                        ""showHeader"" => false,

                        ""columns"" => array(
                           ""cd_turma"" => array(
                               ""cssStyle"" => ""text-align:center""
                            ),
                            ""matriculas"" => array(
                                ""cssStyle"" => ""text-align:center""
                            ),
                            ""rematriculas"" => array(
                                ""cssStyle"" => ""text-align:center""
                            ),
                            ""tranf_ext"" => array(
                                ""cssStyle"" => ""text-align:center""
                            ),
                            ""reservados"" => array(
                                ""cssStyle"" => ""text-align:center""
                            ),
                            ""nao_rem"" => array(
                                ""cssStyle"" => ""text-align:center""
                            ),
                            ""rem_ano_ant"" => array(
                                ""cssStyle"" => ""text-align:center""
                            ),
                            ""nr_vg_turma"" => array(
                                ""cssStyle"" => ""text-align:center""
                            ),
                            ""nr_matriculados"" => array(
                                ""cssStyle"" => ""text-align:center""
                            ),
                            ""sl_vagas"" => array(
                                ""cssStyle"" => ""text-align:center""
                            ),
                            ""sl_vagas_remat"" => array(
                                ""cssStyle"" => ""text-align:center""
                            )
                        ),
                        ""cssClass"" => array(
                            ""table"" => ""table table-bordered"",
                            ""tr"" => ""fonte, border-0 "",
                            ""th"" => ""fonte, border-0 "",
                            ""td"" => ""fonte, border-0 "",
                            ""tf"" => ""fonte, border-0 ""
                        ),
                        ""sorting"" => array(
                            ""cd_turma"" => ""asc""
                        )
                    ));

                    ?>
               </div>

                  <div>

                   <?php

                    if ($key == $count) {

                    ?>

                        <hr>

                        <div style=""text-align: center; font-size:25px; font-weight:bold; padding-top:20px; padding-bottom:20px; color:#A9A9A9""> TOTAL GERAL </div>

                        <table class=""table table-striped table-hover"">
                            <tbody>
                                <tr>
                                    <td style=""text-align:center; font-weight:bold"">Total Matriculados</td>
                                    <td style=""text-align:center; font-weight:bold"">Total Rematrículas</td>
                                    <td style=""text-align:center; font-weight:bold"">Total Tranf.Externa</td>
                                    <td style=""text-align:center; font-weight:bold"">Total Reservados</td>
                                    <td style=""text-align:center; font-weight:bold"">Total N.Rematriculados</td>
                                    <td style=""text-align:center; font-weight:bold"">Total Rematriculados Ano Anterior</td>
                                    <td style=""text-align:center; font-weight:bold"">Total Vagas Turma</td>
                                    <td style=""text-align:center; font-weight:bold"">Total Nr. Matriculados</td>
                                    <td style=""text-align:center; font-weight:bold"">Total Saldo de Vagas</td>
                                    <td style=""text-align:center; font-weight:bold"">Total Saldo de Vagas Rematrículas</td>
                                </tr>
                                <tr>
                                    <td style=""text-align:center;""><?php echo $tot_matriculados ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_rematriculados ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_tranf_ext ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_reservados ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_nao_rem ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_rem_ano_ant ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_vagas_turma ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_nr_matriculados ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_sl_vagas ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_sl_vagas_rem ?></td>

                                </tr>
                            </tbody>
                        </table>

                    <?php

                        }
                    ?>
 
                    </div>
            </div>

                 <div class=""page-break"" style=""page-break-after: always;""></div>

         </div>
         
      <?php } ?>
   </body>
</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[
	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data inicial"",
		""ds_campo"": ""dt_inicio""
	},
	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data final"",
		""ds_campo"": ""dt_fim""
	},
	{
		""tipo"": ""uni-select-coligada-filha"",
		""obrigatorio"": false,
		""label"": ""Unidade"",
		""ds_campo"": ""cd_coligada""
	},
	{
		""tipo"": ""campo-anosemestre"",
		""obrigatorio"": true,
		""label"": ""Anosemestre"",
		""ds_campo"": ""nr_anosemestre""
	},
	{
		""tipo"": ""uni-select-departamento"",
		""obrigatorio"": false,
		""label"": ""Departamento"",
		""ds_campo"": ""cd_departamento""
	},
	{
		""tipo"": ""uni-select-curso"",
		""obrigatorio"": false,
		""label"": ""Curso"",
		""ds_campo"": ""id_curso""
	},
	{
		""tipo"": ""uni-busca-turma"",
		""obrigatorio"": false,
		""label"": ""Turma"",
		""ds_campo"": ""cd_turma""
	}
]",131,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,6,1,""Resumo de Matrículas X Vagas"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,2,""O relatório de Boletim apresenta informações referentes ao histórico de disciplinas dos alunos com base em um ano/semestre e turma de referência.  Serão listadas as médias e faltas do aluno conforme a periodicidade informada no parâmetro de avaliação da turma correspondente. O relatório também apresentará as notas de exame final e segunda época para as instituições que utilizam essa estrutura de avaliação."", NULL, NULL,""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Acadêmico,Relatório do Acervo Acadêmico,"<?php
$PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
require_once($PARMS['PASTA'] . 'nucleo.php');
require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
header('Content-type: text/html; charset=UTF-8');

use \koolreport\processes\ColumnMeta;
use \koolreport\processes\Group;
use \koolreport\processes\OnlyColumn;

// classe padrao do relatorio
class Relatorio extends \koolreport\KoolReport
{
   use \koolreport\bootstrap4\Theme;
   use \koolreport\inputs\Bindable;
   use \koolreport\inputs\POSTBinding;
   use \koolreport\export\Exportable;
   //use \koolreport\cloudexport\Exportable;

   //const C_SN_CLOUD_EXPORT = !(PHP_MAJOR_VERSION >= 7);
	 const C_SN_CLOUD_EXPORT = false;

   public $path_include;
   public $arrDadosFiltro;
   public $arrDadosGerais;
   public $sn_autenticado = true;

   public function __construct()
   {
      try {
         $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
         parent::__construct();
      } catch (Exception $e) {
         echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
         die;
      }
   }

   // inicializacao dos filtros
   function defaultParamValues()
   {
      return array(
         ""filtros"" => '{}',
         ""gerais"" => '{}'
      );
   }

   // resgate do $_POST para vinculo com os parametros
   function bindParamsToInputs()
   {
      return array(
         ""filtros"",
         ""gerais""
      );
   }

   // funcao responsavel por realizar a conexao com o banco de dados
   // e resgate dos dados tratamento dos dados do $_POST
   public function settings()
   {
      Nucleo::import('relatorios.RelatoriosConexao');
      $objRelatoriosConexao = new RelatoriosConexao;

      return $objRelatoriosConexao->settings();
   }

   // funcao responsavel por manter as consultas a serem executadas pelo relatorio
   // e geracao dos array de dados para uso posterior na visualizacao
   public function setup()
   {
      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

      if (ctype_xdigit($_POST[""filtros""])) {
         $_POST[""filtros""] = hex2bin($_POST[""filtros""]);
      }

      if (ctype_xdigit($_POST[""gerais""])) {
         $_POST[""gerais""] = hex2bin($_POST[""gerais""]);
      }

      if (isset($_POST['filtros'])) {
         $this->arrDadosFiltro = json_decode($_POST['filtros']);
      } else {
         $this->arrDadosFiltro = json_decode($_POST);
      }

      if (isset($_POST['gerais'])) {
         $this->arrDadosGerais = json_decode($_POST['gerais']);
      }

      $arrParametros = [];

      foreach ($this->arrDadosFiltro as $filtro => $valor) {
         if (!empty($valor->ds_valor)) {
            $arrParametros["":"" . $filtro] = $valor->ds_valor;
         }
      }

      $sql = ""SELECT
    (SELECT COUNT(*) FROM acrv_documento_pessoa acrv_dp WHERE acrv_dp.sn_excluido = 0
	                "" .
                   ((!empty($arrParametros["":dt_fim""]))
                     ? ""AND (acrv_dp.dt_cadastro <= DATE_ADD(:dt_fim, INTERVAL 1 DAY) )""
                     : NULL)
               . "" 
               "" .
                   ((!empty($arrParametros["":dt_inicio""]))
                     ? ""AND (acrv_dp.dt_cadastro >= :dt_inicio) ""
                     : NULL)
               . "" 
	 ) AS ArquivosInseridos,
    (SELECT COUNT(*) FROM acrv_documento_pessoa acrv_dp INNER JOIN acrv_documento_assinado acrv_da ON (acrv_da.cd_documento_pessoa = acrv_dp.cd_documento_pessoa) WHERE acrv_dp.sn_excluido = 0
	                "" .
                   ((!empty($arrParametros["":dt_fim""]))
                     ? ""AND (acrv_dp.dt_cadastro <= DATE_ADD(:dt_fim, INTERVAL 1 DAY) )""
                     : NULL)
               . "" 
               "" .
                   ((!empty($arrParametros["":dt_inicio""]))
                     ? ""AND (acrv_dp.dt_cadastro >= :dt_inicio) ""
                     : NULL)
               . "" 
	 ) AS ArquivosAssinados,
    (SELECT COUNT(*) FROM acrv_documento_pessoa acrv_dp WHERE acrv_dp.sn_excluido = 1
    	        "" .
                   ((!empty($arrParametros["":dt_fim""]))
                     ? ""AND (acrv_dp.dt_cadastro <= DATE_ADD(:dt_fim, INTERVAL 1 DAY) )""
                     : NULL)
               . "" 
               "" .
                   ((!empty($arrParametros["":dt_inicio""]))
                     ? ""AND (acrv_dp.dt_cadastro >= :dt_inicio) ""
                     : NULL)
               . "" 
    
    ) AS ArquivosExcluidos,
    (SELECT COUNT(*) FROM acrv_documento_pessoa acrv_dp LEFT JOIN acrv_classificacao acrv_class ON (acrv_class.cd_documento_pessoa = acrv_dp.cd_documento_pessoa) WHERE acrv_dp.sn_excluido = 0 AND acrv_class.cd_documento_classificacao IS NULL
	       "" .
                   ((!empty($arrParametros["":dt_fim""]))
                     ? ""AND (acrv_dp.dt_cadastro <= DATE_ADD(:dt_fim, INTERVAL 1 DAY) )""
                     : NULL)
               . "" 
               "" .
                   ((!empty($arrParametros["":dt_inicio""]))
                     ? ""AND (acrv_dp.dt_cadastro >= :dt_inicio) ""
                     : NULL)
               . "" 
	 ) AS ArquivosPendentes,
    (SELECT COUNT(*) FROM acrv_documento_pessoa acrv_dp LEFT JOIN acrv_documento_assinado acrv_da ON (acrv_da.cd_documento_pessoa = acrv_dp.cd_documento_pessoa) WHERE acrv_dp.sn_excluido = 0 AND acrv_da.cd_documento_pessoa IS NULL
	                "" .
                   ((!empty($arrParametros["":dt_fim""]))
                     ? ""AND (acrv_dp.dt_cadastro <= DATE_ADD(:dt_fim, INTERVAL 1 DAY) )""
                     : NULL)
               . "" 
               "" .
                   ((!empty($arrParametros["":dt_inicio""]))
                     ? ""AND (acrv_dp.dt_cadastro >= :dt_inicio) ""
                     : NULL)
               . "" 
	 ) AS ArquivosAguardandoAssinatura,
    (SELECT COUNT(*) FROM acrv_documento_pessoa acrv_dp WHERE 1=1 
	                "" .
                   ((!empty($arrParametros["":dt_fim""]))
                     ? ""AND (acrv_dp.dt_cadastro <= DATE_ADD(:dt_fim, INTERVAL 1 DAY) )""
                     : NULL)
               . "" 
               "" .
                   ((!empty($arrParametros["":dt_inicio""]))
                     ? ""AND (acrv_dp.dt_cadastro >= :dt_inicio) ""
                     : NULL)
               . "" ) AS TotaldeArquivos,
               
    DATE_FORMAT(
"" .
   ((!empty($arrParametros["":dt_inicio""]))
     ? "":dt_inicio""
     : NULL)
. "" 

,'%d/%m/%Y') AS dt_inicio,

DATE_FORMAT(
"" .
   ((!empty($arrParametros["":dt_fim""]))
     ? "":dt_fim""
     : NULL)
. "" 

,'%d/%m/%Y') AS dt_fim
            
             FROM acrv_documento_pessoa acrv_dp


             WHERE
               1=1
                "" .
                   ((!empty($arrParametros["":dt_fim""]))
                     ? ""AND (acrv_dp.dt_cadastro <= DATE_ADD(:dt_fim, INTERVAL 1 DAY) )""
                     : NULL)
               . "" 
               "" .
                   ((!empty($arrParametros["":dt_inicio""]))
                     ? ""AND (acrv_dp.dt_cadastro >= :dt_inicio) ""
                     : NULL)
               . "" 
               LIMIT 1;"";

      $this
         ->src('unimestre')
         ->query($sql)
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""nr_arquivos"" => $arrFormatoInteiro
                  
               )
            )
         )
         ->saveTo($consulta);

      // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
      $consulta
         ->pipe($this->dataStore(""dados_consulta""));

      
      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));
   }
}","<?php

use \koolreport\widgets\koolphp\Table;
use \koolreport\processes\Filter;

// path pasta
$path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

// margens
$ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
$ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
$ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
$ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

$sn_geracao = $_POST[""pdf""];

$sn_possui_cabecalho = !empty($this->dataStore(""dados_cabecalhos"")->data());

?>

<html>
 
<head>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
    
    <style type=""text/css"">
        .text-label {
            font-size: 7pt !important;
        }

        .tabela-cabecalho td {
            padding: 0.2rem !important;
            vertical-align: middle !important;
        }

        .b {
            font-weight: bold;
        }

        .legenda {
            font-size: 8pt !important;
        }

        .borda {
            border: 1px solid #dee2e6 !important;
        }
        
        .tabela {
                    padding-top: 20%;
                    margin-right: 25%;
                    padding-bottom: 5%;
                    margin-left: 25%;
                    position: relative;
                    width: 50%;
                  
                    
        }
        
        @media screen {
                    thead > tr {
                        background-color: #700008 !important;
                        color: white !important;
                    }
                }

        @media print {
                    thead > tr {
                        background-color: #700008 !important;
                        color: white !important;
                    }
                    
                    body {
                        -webkit-print-color-adjust: exact !important;
                        print-color-adjust: exact !important;
                    }
                }
        

    </style>
</head>

<body class=""relatorio"">
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'valida_consulta_registros.php')); ?>

     <?php $dados_consulta = $this->dataStore(""dados_consulta"")->data(); ?>        
       
          
           

          <div class=""container"">
            <div
               class=""conteudo""
               style=""
                  padding-top: <?=((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm'?>;
                  padding-bottom: <?=((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm'?>;
                  padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                  padding-right: <?=$ds_margem_direita . 'cm'?>;
                  ""
            >
            
            <div>
                  <div
                     style=""
                        height: 100;
                        <?php echo !$sn_possui_cabecalho ? 'display:none;' : '' ?>
                        "">
                        <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'cabecalho.php')); ?>
                    </div>
                </div>

               <div class=""text-center"">
                    <span class=""b"">FACULDADE SINERGIA</span><br>
                    Portaria Recredenciamento MEC nº. 261, D.O.U de 23/03/2018.  
               </div>
                            
               <div style = ""padding: 15px;"">
                </div>    

               
               <div class=""text-center mt-3 mb-3"" style=""padding-right: 8%; padding-left: 8%;"" >
                    <h5>RELATÓRIO DE DOCUMENTOS INSERIDOS NO ACERVO ACADÊMICO DIGITAL</h5> </ BR>
               </div>

               <div class=""text-center"">
                Período de <?= $dados_consulta[0]['dt_inicio'] ?> a <?= $dados_consulta[0]['dt_fim'] ?>
                </div>
                
                <div style = ""padding: 10px;"">
                </div>    

                <table class=""table-bordered table-sm tabela text-center"">
                    <tr style =""bold text-center"">
                        <th>REFERÊNCIA</th>
                        <th>QUANTIDADE</th>
                    </tr>
                    <tr>
                        <td>Arquivos inseridos:</td>
                        <td><?= $dados_consulta[0]['ArquivosInseridos'] ?></td>
                    </tr>
                    <tr>
                        <td>Arquivos assinados:</td>
                        <td><?= $dados_consulta[0]['ArquivosAssinados'] ?></td>
                    </tr>
                    <tr>
                        <td>Arquivos excluídos:</td>
                        <td><?= $dados_consulta[0]['ArquivosExcluidos'] ?></td>
                    </tr>
                    <tr>
                        <td>Arquivos que estão pendentes:</td>
                        <td><?= $dados_consulta[0]['ArquivosPendentes'] ?></td>
                    </tr>
                    <tr>
                        <td>Arquivos que estão aguardando assinatura:</td>
                        <td><?= $dados_consulta[0]['ArquivosAguardandoAssinatura'] ?></td>
                    </tr>
                    <tr>
                        <td>Total de arquivos já digitalizados no Acervo Acadêmico Digital:</td>
                        <td><?= $dados_consulta[0]['TotaldeArquivos'] ?></td>
                    </tr>
                </table>
                
                
	
                     
                <div class=""page-footer "" style=""overflow: hidden;"">
                         <div style=""
                                    text-align: center;
                                    font-size: 8px !important;												 
                                    padding-right: 15%;
                                    padding-left: 15%;
                                    color: gray;
                                    "">
                                <hr>
                                Av. Pref. Cirino Adolfo Cabral, 199 - Bairro São Pedro - Cx. Postal 53 - Cep. 88370-053 - Navegantes - SC
                                Fone: (47)3342-9700  - Site: http://www.sinergia.edu.br /E-mail: sinergia@sinergia.edu.br
                     </div>
             </div>
        </div>
    
    
</body>

</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[
        {
                ""tipo"": ""campo-data"",
                ""obrigatorio"": true,
                ""label"": ""Data inicial"",
                ""ds_campo"": ""dt_inicio""    
        },
        {
                ""tipo"": ""campo-data"",
                ""obrigatorio"": true,
                ""label"": ""Data final"",
                ""ds_campo"": ""dt_fim""    
        }
]",142,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,6,1,""Relatório do Acervo Acadêmico"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL, NULL, NULL, NULL, NULL,""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Homologação,6. Relação de Notas Pendentes,"<?php

   $PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
   require_once( $PARMS['PASTA'] . 'nucleo.php' );
   require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
   header ('Content-type: text/html; charset=UTF-8');

   use \koolreport\processes\ColumnMeta;
   use \koolreport\processes\Group;
   use \koolreport\processes\OnlyColumn;

   // classe padrao do relatorio
   class Relatorio extends \koolreport\KoolReport {
      use \koolreport\bootstrap4\Theme;
      use \koolreport\inputs\Bindable;
      use \koolreport\inputs\POSTBinding;
      use \koolreport\export\Exportable;

      public $path_include;
      public $arrDadosFiltro;
      public $arrDadosGerais;

      public function __construct() {

         try {

            $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
            parent::__construct();

         } catch (Exception $e) {

            echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
            die;

         }

      }

      // inicializacao dos filtros
      function defaultParamValues() {
         return array(
            ""filtros""=>'{}',
            ""gerais""=>'{}'
         );
      }

      // resgate do $_POST para vinculo com os parametros
      function bindParamsToInputs() {
         return array(
            ""filtros"",
            ""gerais""
         );
      }

      // funcao responsavel por realizar a conexao com o banco de dados
      // e resgate dos dados tratamento dos dados do $_POST
      public function settings() {

         Nucleo::import( 'relatorios.RelatoriosConexao' );
         $objRelatoriosConexao = new RelatoriosConexao;

         return $objRelatoriosConexao->settings();

      }

      // funcao responsavel por manter as consultas a serem executadas pelo relatorio
      // e geracao dos array de dados para uso posterior na visualizacao
      public function setup() {

         require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

         if (isset($_POST['filtros'])) {
            $this->arrDadosFiltro = json_decode($_POST['filtros']);
         } else {
            $this->arrDadosFiltro = json_decode($_POST);
         }

         if (isset($_POST['gerais'])) {
            $this->arrDadosGerais = json_decode($_POST['gerais']);
         }

         $arrParametros = [];

         foreach ($this->arrDadosFiltro as $filtro => $valor) {
            if (!empty($valor->ds_valor)) {
                $arrParametros["":"" . $filtro] = $valor->ds_valor;
            }
         }

         $this->src('unimestre')->query(
            ""
            SELECT
               dpa.cd_bimestre AS ds_etapa,
               professor.nm_pessoa AS nm_professor,
               cm.DS_CURSO AS nm_curso,
               m.turma AS turma,
               m.anosemestre AS ano,
               CONCAT(LEFT(m.anosemestre,4),'/',RIGHT(m.anosemestre,1)) AS nr_ano_sem,
               d.codigo AS cod_disciplina,
               d.descricao AS ds_disciplina,
               avt.ds_avaliacao AS ds_tipo_avl,
               dp.nro_nota AS nr_prova,
               m.nr_aluno,
               m.codigoaluno AS cd_matricula,
               aluno.nm_pessoa AS nm_aluno,
               aluno.cd_pessoa AS cod_aluno,
               IF(dpa.vl_nota IS NULL,'',dpa.vl_nota) AS vl_nota,
               tp.professor AS professor
            FROM
               matriculas AS m
            INNER JOIN
               turmas AS t ON (
                  m.anosemestre = t.anosemestre AND
                  m.turma = t.codigo AND
                  m.curso = t.curso
               )
            INNER JOIN
               fichaindividual AS fi ON (
                  fi.anosemestre = m.anosemestre AND
                  fi.turma = m.turma AND
                  fi.codigoaluno = m.codigoaluno AND
                  fi.curso = m.curso
               )
            INNER JOIN
               diario_provas_alunos AS dpa ON (
                  fi.anosemestre = dpa.nr_anosem AND
                  fi.turma = dpa.cd_turma AND
                  fi.codigoaluno = dpa.cd_pessoa AND
                  fi.disciplina = dpa.cd_disciplina
               )
            INNER JOIN
               diario_provas AS dp ON (
                  dp.turma = dpa.cd_turma AND
                  dp.anosemestre = dpa.nr_anosem AND
                  dp.disciplina = dpa.cd_disciplina AND
                  dp.bimestre = dpa.cd_bimestre AND
                  dp.nro_nota = dpa.nr_prova
               )
            INNER JOIN
               avaliacoes_tipos AS avt ON (
                  dp.cd_avaliacao_tipo = avt.cd_avaliacao_tipo
               )
            INNER JOIN
               pessoas AS aluno ON (m.codigoaluno = aluno.cd_pessoa)
            INNER JOIN
               disciplinas AS d ON (
                  fi.curso = d.curso AND
                  fi.disciplina = d.codigo
               )
            INNER JOIN
               turmasprofessores AS tp ON (
                  dp.anosemestre = tp.anosemestre AND
                  dp.turma = tp.turma AND
                  dp.disciplina = tp.disciplina AND
                  dp.cd_professor = tp.professor
               )
            INNER JOIN
               pessoas AS professor ON (tp.professor = professor.cd_pessoa)
            INNER JOIN
               cursos_coligadas AS cc ON (t.curso = cc.CD_CURSO)
            INNER JOIN
               cursos_mestre AS cm ON (t.curso = cm.CD_CURSO)
            INNER JOIN
               coligadas AS c ON (t.cd_coligada = c.cd_coligada)
            WHERE
               1 = 1 AND
               dpa.vl_nota IS NULL         
            "" .
               ((!empty($arrParametros["":ano""]))
                  ? ""AND t.anosemestre IN (:ano)""
                  : NULL
               )
            . ""
            "" .
               ((!empty($arrParametros["":cd_polo""]))
                  ? ""AND m.cd_polo IN (:cd_polo)""
                  : NULL
               )
            . ""
            "" .
            ((!empty($arrParametros["":cd_curso""]))
               ? ""AND cm.id_curso IN (:cd_curso)""
               : NULL
            )
            . ""
            "" .
            ((!empty($arrParametros["":cd_turma""]))
               ? ""AND t.codigo IN (:cd_turma)""
               : NULL
            )
            . ""
            "" .
            ((!empty($arrParametros["":cd_situacao_mat""]))
               ? ""AND m.situacao IN (:cd_situacao_mat)""
               : NULL
            )
            . ""
            "" .
            ((!empty($arrParametros["":cd_coligada""]))
               ? ""AND c.cd_coligada IN (:cd_coligada)""
               : NULL
            )
            . ""
            "" .
            ((!empty($arrParametros["":cd_depto""]))
               ? ""AND cc.CD_DEPTO IN (:cd_depto)""
               : NULL
            )
            . ""
            "" .
            ((!empty($arrParametros["":nr_etapa""]))
               ? ""AND dp.bimestre IN (:nr_etapa)""
               : NULL
            )
            . "" 
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_matricula"" => $arrFormatoInteiro                  
               )
            )
         )
         ->saveTo($consulta);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
         $consulta->pipe($this->dataStore(""dados_consulta""));

         $consulta->pipe(new Group(array(
            ""by""=>array(
               ""ano"",
               ""turma"",
               ""professor""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""ano"",
            ""turma"",
            ""professor""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));

         $consulta->pipe(new Group(array(
            ""by""=>array(
               ""professor"",
               ""ds_etapa""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""professor"",
            ""ds_etapa"",
            ""nm_professor""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado_professor""));

         $this->dataStore('dados_consulta_agrupado_professor')->sort(""ds_etapa"",""nm_professor"");
         
         $consulta->pipe(new Group(array(
            ""by""=>array(
               ""professor"",
               ""ds_etapa"",
               ""turma"",
               ""cod_disciplina""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""professor"",
            ""ds_etapa"",
            ""nm_professor"",
            ""nm_curso"",
            ""cod_disciplina"",
            ""turma"",
            ""nr_ano_sem"",
            ""ds_disciplina""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado_turma_disciplina""));

         $consulta->pipe(new Group(array(
            ""by""=>array(
               ""professor"",
               ""ds_etapa"",
               ""turma"",
               ""cod_disciplina"",
               ""nr_prova""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""professor"",
            ""ds_etapa"",
            ""nm_professor"",
            ""nm_curso"",
            ""turma"",
            ""nr_prova"",
            ""cod_disciplina"",
            ""nr_ano_sem"",
            ""ds_disciplina"",
            ""ds_tipo_avl""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado_provas""));

         $consulta->pipe(new Group(array(
            ""by""=>array(
               ""professor"",
               ""ds_etapa"",
               ""turma"",
               ""cod_disciplina"",
               ""cod_aluno""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""professor"",
            ""ds_etapa"",
            ""nm_professor"",
            ""nm_curso"",
            ""turma"",
            ""cod_disciplina"",
            ""nr_ano_sem"",
            ""ds_disciplina"",
            ""ds_tipo_avl"",
            ""cod_aluno"",
            ""nr_prova"",
            ""nm_aluno"",
            ""nr_aluno""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado_alunos""));

         $this->src('unimestre')->query(
            ""
            SELECT
               dpa.cd_bimestre AS ds_etapa,
               professor.nm_pessoa AS nm_professor,
               cm.DS_CURSO AS nm_curso,
               m.turma AS turma,
               m.anosemestre AS ano,
               CONCAT(LEFT(m.anosemestre,4),'/',RIGHT(m.anosemestre,1)) AS nr_ano_sem,
               d.codigo AS cod_disciplina,
               d.descricao AS ds_disciplina,
               avt.ds_avaliacao AS ds_tipo_avl,
               dp.nro_nota AS nr_prova,
               m.nr_aluno,
               m.codigoaluno AS cd_matricula,
               aluno.nm_pessoa AS nm_aluno,
               aluno.cd_pessoa AS cod_aluno,
               dpa.vl_nota AS vl_nota,
               tp.professor AS professor
            FROM
               matriculas AS m
            INNER JOIN
               turmas AS t ON (
                  m.anosemestre = t.anosemestre AND
                  m.turma = t.codigo AND
                  m.curso = t.curso
               )
            INNER JOIN
               fichaindividual AS fi ON (
                  fi.anosemestre = m.anosemestre AND
                  fi.turma = m.turma AND
                  fi.codigoaluno = m.codigoaluno AND
                  fi.curso = m.curso
               )
            INNER JOIN
               diario_provas_alunos AS dpa ON (
                  fi.anosemestre = dpa.nr_anosem AND
                  fi.turma = dpa.cd_turma AND
                  fi.codigoaluno = dpa.cd_pessoa AND
                  fi.disciplina = dpa.cd_disciplina
               )
            INNER JOIN
               diario_provas AS dp ON (
                  dp.turma = dpa.cd_turma AND
                  dp.anosemestre = dpa.nr_anosem AND
                  dp.disciplina = dpa.cd_disciplina AND
                  dp.bimestre = dpa.cd_bimestre AND
                  dp.nro_nota = dpa.nr_prova
               )
            INNER JOIN
               avaliacoes_tipos AS avt ON (
                  dp.cd_avaliacao_tipo = avt.cd_avaliacao_tipo
               )
            INNER JOIN
               pessoas AS aluno ON (m.codigoaluno = aluno.cd_pessoa)
            INNER JOIN
               disciplinas AS d ON (
                  fi.curso = d.curso AND
                  fi.disciplina = d.codigo
               )
            INNER JOIN
               turmasprofessores AS tp ON (
                  dp.anosemestre = tp.anosemestre AND
                  dp.turma = tp.turma AND
                  dp.disciplina = tp.disciplina AND
                  dp.cd_professor = tp.professor
               )
            INNER JOIN
               pessoas AS professor ON (tp.professor = professor.cd_pessoa)
            INNER JOIN
               cursos_coligadas AS cc ON (t.curso = cc.CD_CURSO)
            INNER JOIN
               cursos_mestre AS cm ON (t.curso = cm.CD_CURSO)
            INNER JOIN
               coligadas AS c ON (t.cd_coligada = c.cd_coligada)
            WHERE
               1 = 1 AND
               dpa.vl_nota IS NOT NULL         
            "" .
               ((!empty($arrParametros["":ano""]))
                  ? ""AND t.anosemestre IN (:ano)""
                  : NULL
               )
            . ""
            "" .
            ((!empty($arrParametros["":cd_curso""]))
               ? ""AND cm.id_curso IN (:cd_curso)""
               : NULL
            )
            . ""
            "" .
            ((!empty($arrParametros["":cd_turma""]))
               ? ""AND t.codigo IN (:cd_turma)""
               : NULL
            )
            . ""
    "" .
            ((!empty($arrParametros["":cd_coligada""]))
               ? ""AND c.cd_coligada IN (:cd_coligada)""
               : NULL
            )
            . ""
            "" .
            ((!empty($arrParametros["":cd_depto""]))
               ? ""AND cc.CD_DEPTO IN (:cd_depto)""
               : NULL
            )
            . ""
            "" .
            ((!empty($arrParametros["":cd_polo""]))
               ? ""AND m.cd_polo IN (:cd_polo)""
               : NULL
            )
            . ""
            "" .
            ((!empty($arrParametros["":cd_situacao_mat""]))
               ? ""AND m.situacao IN (:cd_situacao_mat)""
               : NULL
            )
            . ""
            "" .
            ((!empty($arrParametros["":nr_etapa""]))
               ? ""AND dp.bimestre IN (:nr_etapa)""
               : NULL
            )
            . ""           
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_matricula"" => $arrFormatoInteiro                  
               )
            )
         )
         ->saveTo($consulta2);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
         $consulta2->pipe($this->dataStore(""dados_consulta_notas""));

         $consulta2->pipe(new Group(array(
            ""by""=>array(
               ""professor"",
               ""ds_etapa"",
               ""turma"",
               ""cod_disciplina"",
               ""nr_prova"",
               ""cod_aluno""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""professor"",
            ""ds_etapa"",
            ""nm_professor"",
            ""nm_curso"",
            ""turma"",
            ""nr_prova"",
            ""cod_aluno"",
            ""vl_nota"",
            ""cod_disciplina"",
            ""nr_ano_sem"",
            ""ds_disciplina"",
            ""ds_tipo_avl""
         )))
         ->pipe($this->dataStore(""dados_consulta_notas_prova""));

					require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									

      }

   }
","<?php
   use \koolreport\widgets\koolphp\Table;
   use \koolreport\processes\Filter;
   // path pasta
   $path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
   // margens
   $ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
   $ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
   $ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
   $ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;
   $sn_geracao = $_POST[""pdf""];
?>
<html>
   <head>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
   </head>

   <style>  
      .totalizador {
         min-height: 0cm !important;
      }
   </style>

   <body class=""relatorio"">
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>
      <?php

      $count = $this->dataStore('dados_consulta_agrupado')->count();
      $count = $count-1;

         foreach($this->dataStore(""dados_consulta_agrupado_professor"") as $key => $visualizacao){

            $dados_turma_disciplina = $this->dataStore(""dados_consulta_agrupado_turma_disciplina"")
               ->filter(
                  ""professor"", ""="", $visualizacao[""professor""]
               )
               ->filter(
                  ""ds_etapa"",""="",$visualizacao[""ds_etapa""]
               );

            $dados_provas = $this->dataStore(""dados_consulta_agrupado_provas"")
               ->filter(
                  ""professor"", ""="", $visualizacao[""professor""]
               )
               ->filter(
                  ""ds_etapa"",""="",$visualizacao[""ds_etapa""]
               );

            $dados_alunos = $this->dataStore(""dados_consulta_agrupado_alunos"")
               ->filter(
                  ""professor"",""="",$visualizacao[""professor""]
               )
               ->filter(
                  ""ds_etapa"",""="",$visualizacao[""ds_etapa""]
               );

            $dados_notas = $this->dataStore(""dados_consulta_notas_prova"")
               ->filter(
                  ""professor"",""="",$visualizacao[""professor""]
               )
               ->filter(
                  ""ds_etapa"",""="",$visualizacao[""ds_etapa""]
               );
   
            ?>

            <style>
                ul li{
                    font-size: 11px !important;
                }
                .tabela{
                    font-size: 11px !important;
                }
            </style>

            <div class=""container"">
               <div
                  class=""conteudo""
                  style=""
                     padding-top: <?=((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm'?>;
                     padding-bottom: <?=((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm'?>;
                     padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                     padding-right: <?=$ds_margem_direita . 'cm'?>;
                     ""
               >
                  <div>
                     <div
                        style=""
                           height: 140;
                           ""
                     >
                        <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'cabecalho.php')); ?>
                     </div>
                  </div>

                <div>
                    <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'filtro.php')); ?>
                </div>

                  <div>
                     <h3 class=""text-center"" style=""margin: 1rem; font-size: 16px; !important;"">
                        <?=$this->arrDadosGerais->nm_relatorio?>
                     </h3>

                     <hr style=""border: 1px solid black;"">

                     <b style=""font-size: 11px !important;""><?= $visualizacao[""ds_etapa""] ?>º Bimestre</b>

                     <hr style=""border: 0,5px solid black;"">

                     <b style=""font-size: 11px !important;"">Professor: <?= $visualizacao[""nm_professor""] ?></b>

                    <table style=""width: 100%; margin-top: 15px;"">
                        <tr>
                            <th style=""font-size: 11px !important; width: 33px; text-align: center;"">Matricula</th>
                            <th style=""font-size: 11px !important; width: 115px; text-align: center;"">Cód</th>
                            <th style=""font-size: 11px !important; width: 265px; text-align: left;"">Aluno</th>
                            <th style=""font-size: 11px !important; text-align: center;"">Composições</th>
                        </tr>
                    </table>

                    <hr style=""border: 0,5px solid black;"">

                     <?php
                        foreach($dados_turma_disciplina as $key => $turma_disc) {
                     ?>
                        <table class=""table"">
                           <tr class=""row-group"">
                              <td colspan=""3"" class=""p-2 text-left tabela"" style=""font-weight: bold !important;"">
                                 <?php echo $turma_disc[""nm_curso""] ?> / <?php echo $turma_disc[""turma""] ?> / <?php echo $turma_disc[""nr_ano_sem""] ?>
                              </td>
                              <?php
                                 foreach($dados_provas as $key => $prova) {
                                    if($prova[""cod_disciplina""] == $turma_disc[""cod_disciplina""] && $prova[""turma""] == $turma_disc[""turma""] && $prova[""ds_etapa""] == $visualizacao[""ds_etapa""]) {
                              ?>
                                 <td class=""p-2 text-center tabela"" style=""font-weight: bold !important;"">
                                    <?php echo $prova[""ds_tipo_avl""] ?>
                                 </td>
                              <?php
                                    }
                                 }
                              ?>
                           </tr>
                           <tr class=""row-group"">
                              <td colspan=""200"" class=""p-2 tabela"" style=""font-weight: bold !important;"">
                                 Disciplina: <?php echo $turma_disc[""ds_disciplina""] ?>
                              </td>
                           </tr>

                           <?php
                              $cont = 0;

                              foreach($dados_alunos as $key => $aluno) {
                                 if($aluno[""cod_disciplina""] == $turma_disc[""cod_disciplina""] && $aluno[""turma""] == $turma_disc[""turma""] && $aluno[""ds_etapa""] == $visualizacao[""ds_etapa""]) {
                                 $cont = $cont + 1;
                           ?>
                           <tr>
                              <td class=""p-2 text-center tabela"">
                                 <?php echo $aluno[""nr_aluno""] ?>
                              </td>
                              <td class=""p-2 text-center tabela"">
                                 <?php echo $aluno[""cod_aluno""] ?>
                              </td>
                              <td class=""p-2 text-left tabela"">
                                 <?php echo $aluno[""nm_aluno""] ?>
                              </td>
                              <?php
                                 foreach($dados_provas as $key => $prova) {
                                    if($prova[""cod_disciplina""] == $turma_disc[""cod_disciplina""] && $prova[""turma""] == $turma_disc[""turma""] && $prova[""ds_etapa""] == $visualizacao[""ds_etapa""]) {
                              ?>
                                       <td class=""p-2 text-center tabela"">
                                          <?php
                                             foreach($dados_notas as $key => $nota) {
                                                if($nota[""cod_aluno""] == $aluno[""cod_aluno""] && $nota[""cod_disciplina""] == $aluno[""cod_disciplina""] && $nota[""turma""] == $turma_disc[""turma""] && $nota[""ds_etapa""] == $visualizacao[""ds_etapa""] && $nota[""nr_prova""] == $prova[""nr_prova""]){
                                                   echo $nota[""vl_nota""];
                                                }
                                             }
                                          ?>
                                       </td>
                              <?php
                                    }
                                 }
                              ?>
                           </tr>
                           <?php
                                 }
                              }
                           ?>
                           <tr>
                              <td colspan=""200"" style=""font-size: 11px !important;"">
                                 Total de alunos: <?php echo $cont ?>
                              </td>
                           </tr>
                        </table>
                     <?php
                        }
                     ?>

                  </div>

                  <div
                     class=""page-footer no-screen""
                     style=""overflow: hidden;""
                  >
                     <div
                        style=""
                           text-align: right;
                           padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                           padding-right: <?=$ds_margem_direita . 'cm'?>;
                           ""
                     >

                     </div>
                  </div>
                  <div class=""page-break"" style=""page-break-after: always;""></div>
               </div>
            </div>         
         <?php
         }
      ?>

   </body>
</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();
","[
	{
		""tipo"": ""uni-select-polo"",
		""obrigatorio"": false,
		""label"": ""Polo"",
		""ds_campo"": ""cd_polo""
	},
   {
      ""tipo"": ""uni-select-coligada-filha"",
      ""obrigatorio"": false,
      ""label"": ""Unidade de Ensino"",
      ""ds_campo"": ""cd_coligada""
   },
   {
      ""tipo"": ""uni-select-departamento"",
      ""obrigatorio"": false,
      ""label"": ""Departamento"",
      ""ds_campo"": ""cd_depto""
   },
   {
      ""tipo"": ""campo-anosemestre"",
      ""obrigatorio"": true,
      ""label"": ""Ano/Semestre"",
      ""ds_campo"": ""ano""
   },
   {
      ""tipo"": ""uni-select-curso"",
      ""obrigatorio"": false,
      ""label"": ""Curso"",
      ""ds_campo"": ""cd_curso""
   },
   {
      ""tipo"": ""uni-busca-turma"",
      ""obrigatorio"": false,
      ""label"": ""Turma"",
      ""ds_campo"": ""cd_turma""
   },
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Etapa"",
		""ds_campo"": ""nr_etapa""
	},
	{
		""tipo"": ""campo-dinamico"",
		""obrigatorio"": false,
		""label"": ""Situação"",
		""ds_chave"": ""busca-situacao-matricula"",
		""ds_campo"": ""cd_situacao_mat""
	}
]",49,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,10,1,""6. Relação de Notas Pendentes"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,2, NULL, NULL, NULL,""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Homologação,7. Relação de Alunos para Cálculo de Nota Necessária,"<?php

   $PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
   require_once( $PARMS['PASTA'] . 'nucleo.php' );
   require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
   header ('Content-type: text/html; charset=UTF-8');

   use \koolreport\processes\ColumnMeta;
   use \koolreport\processes\Group;
   use \koolreport\processes\OnlyColumn;

   // classe padrao do relatorio
   class Relatorio extends \koolreport\KoolReport {
      use \koolreport\bootstrap4\Theme;
      use \koolreport\inputs\Bindable;
      use \koolreport\inputs\POSTBinding;
      use \koolreport\export\Exportable;

      public $path_include;
      public $arrDadosFiltro;
      public $arrDadosGerais;

      public function __construct() {

         try {

            $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
            parent::__construct();

         } catch (Exception $e) {

            echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
            die;

         }

      }

      // inicializacao dos filtros
      function defaultParamValues() {
         return array(
            ""filtros""=>'{}',
            ""gerais""=>'{}'
         );
      }

      // resgate do $_POST para vinculo com os parametros
      function bindParamsToInputs() {
         return array(
            ""filtros"",
            ""gerais""
         );
      }

      // funcao responsavel por realizar a conexao com o banco de dados
      // e resgate dos dados tratamento dos dados do $_POST
      public function settings() {

         Nucleo::import( 'relatorios.RelatoriosConexao' );
         $objRelatoriosConexao = new RelatoriosConexao;

         return $objRelatoriosConexao->settings();

      }

      // funcao responsavel por manter as consultas a serem executadas pelo relatorio
      // e geracao dos array de dados para uso posterior na visualizacao
      public function setup() {

         require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

         if (isset($_POST['filtros'])) {
            $this->arrDadosFiltro = json_decode($_POST['filtros']);
         } else {
            $this->arrDadosFiltro = json_decode($_POST);
         }

         if (isset($_POST['gerais'])) {
            $this->arrDadosGerais = json_decode($_POST['gerais']);
         }

         $arrParametros = [];

         foreach ($this->arrDadosFiltro as $filtro => $valor) {
            if (!empty($valor->ds_valor)) {
                $arrParametros["":"" . $filtro] = $valor->ds_valor;
            }
         }

         $this->src('unimestre')->query(
            ""
               SELECT
                  avl.ds_avaliacao AS nm_avaliacao,
                  CONCAT(cm.DS_CURSO, ' / ' ,t.codigo, ' / ' ,t.anosemestre) AS descricao,
                  d.descricao AS disciplina,
                  m.nr_aluno,
                  m.codigoaluno AS nr_matricula,
                  aluno.nm_pessoa AS nm_aluno,
                  FORMAT(IFNULL(fi.nota1,0),1) AS media1,
                  FORMAT(IFNULL(fi.nota2,0),1) AS media2,
                  FORMAT(IFNULL(fi.nota3,0),1) AS media3,
                  FORMAT(IFNULL(fi.nota4,0),1) AS media4,
                  FORMAT(IFNULL(fi.mediaanual,0),1) AS mediaanual,
                  '' AS nota_necessaria,
                  fi.anosemestre,
                  fi.turma,
                  fi.disciplina AS cd_disciplina
               FROM
                  matriculas AS m
               INNER JOIN
                  turmas AS t ON (
                     m.anosemestre = t.anosemestre AND
                     m.turma = t.codigo AND
                     m.curso = t.curso
                  )
               INNER JOIN
                  fichaindividual AS fi ON (
                     m.anosemestre = fi.anosemestre AND
                     m.turma = fi.turma AND
                     m.curso = fi.curso AND
                     m.codigoaluno = fi.codigoaluno
                  )
               INNER JOIN
                  cursos_coligadas AS cc ON (
                     t.cd_coligada = cc.CD_COLIGADA AND
                     t.curso = cc.CD_CURSO
                  )
               INNER JOIN
                  cursos_mestre AS cm ON (t.curso = cm.CD_CURSO)
               INNER JOIN
                  coligadas AS c ON (t.cd_coligada = c.cd_coligada)
               INNER JOIN
                  disciplinas AS d ON (
                     fi.disciplina = d.codigo AND 
                     fi.curso = d.curso
                  )
               INNER JOIN
                  pessoas AS aluno ON (m.codigoaluno = aluno.cd_pessoa)
               INNER JOIN
                  avaliacoes_parametros_matriz AS avl ON (t.cd_avaliacao = avl.cd_avaliacao)
               WHERE
                  1=1
                  "" .
                     ((!empty($arrParametros["":ano""]))
                        ? ""AND t.anosemestre IN (:ano)""
                        : NULL
                     )
                  . ""
                  "" .
                  ((!empty($arrParametros["":cd_curso""]))
                     ? ""AND cm.id_curso IN (:cd_curso)""
                     : NULL
                  )
                  . ""
                  "" .
                  ((!empty($arrParametros["":cd_turma""]))
                     ? ""AND t.codigo IN (:cd_turma)""
                     : NULL
                  )
                  . ""
                  "" .
                  ((!empty($arrParametros["":cd_coligada""]))
                     ? ""AND c.cd_coligada IN (:cd_coligada)""
                     : NULL
                  )
                  . ""
                  "" .
                  ((!empty($arrParametros["":cd_depto""]))
                     ? ""AND cc.CD_DEPTO IN (:cd_depto)""
                     : NULL
                  )
                  . ""
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""nr_matricula"" => $arrFormatoInteiro        
               )
            )
         )
         ->saveTo($consulta);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
         $consulta->pipe($this->dataStore(""dados_consulta""));

         $consulta->pipe(new Group(array(
            ""by""=>array(
               ""ano"",
               ""turma"",
               ""cd_disciplina""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""ano"",
            ""turma"",
            ""cd_disciplina""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));

					require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									

      }

   }
","<?php
   use \koolreport\widgets\koolphp\Table;
   use \koolreport\processes\Filter;
   // path pasta
   $path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
   // margens
   $ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
   $ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
   $ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
   $ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;
   $sn_geracao = $_POST[""pdf""];
?>
<html>
   <head>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
   </head>

   <style>  
      .totalizador {
         min-height: 0cm !important;
      }
      ul li{
        font-size: 11px !important;
      }
      .tabela{
        font-size: 11px !important;
      }
   </style>

   <body class=""relatorio"">
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>
      <?php

      $count = $this->dataStore('dados_consulta_agrupado')->count();
      $count = $count-1;

         foreach($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao){
            $dados_pagina = $this->dataStore(""dados_consulta"")
               ->filter(
                  ""ano"",""="",$visualizacao[""ano""]
               )
               ->filter(
                  ""turma"",""="",$visualizacao[""turma""]
               )
               ->filter(
                  ""cd_disciplina"",""="",$visualizacao[""cd_disciplina""]
               );
            ?>

            <div class=""container"">
               <div
                  class=""conteudo""
                  style=""
                     padding-top: <?=((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm'?>;
                     padding-bottom: <?=((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm'?>;
                     padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                     padding-right: <?=$ds_margem_direita . 'cm'?>;
                     ""
               >
                  <div>
                     <div
                        style=""
                           height: 140;
                           ""
                     >
                        <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'cabecalho.php')); ?>
                     </div>
                  </div>

                    <div>
                        <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'filtro.php')); ?>
                    </div>

                  <div>
                     <h4 class=""text-center"" style=""margin: 1rem;"">
                        <?=$this->arrDadosGerais->nm_relatorio?>
                     </h4>

                  <hr>

                  <p style=""font-size: 11px !important;""> Fórmula para cálculo: <?= $dados_pagina[0][""nm_avaliacao""] ?></p>

                  <hr>

                  <p style=""font-size: 11px !important; font-weight: bold !important;""> <?= $dados_pagina[0][""descricao""] ?> <br>
                  Disciplina: <?= $dados_pagina[0][""disciplina""] ?></p>

                  <hr>

                  <?php

                  if ($this->arrDadosGerais->arrOpcoes->etapa->me_configuracao == 'trimestre') {
                  
                  Table::create(array(
                     ""dataStore""=>$dados_pagina,
                     ""grouping""=>array(                        
                        ""turma""=>array(
                           ""calculate""=>array(
                              ""{qtd_alunos}""=>array(""count"",""nr_matricula"")
                           ),
                           ""top""=>""<td style='text-align: center; font-size: 11px !important;'><b>Nº</b></td>
                                    <td style='text-align: center; font-size: 11px !important;'><b>Matrícula</b></td>
                                    <td style='text-align: left; font-size: 11px !important;'><b>Aluno</b></td>
                                    <td style='text-align: center; font-size: 11px !important;'><b>Media 1º</b></td>
                                    <td style='text-align: center; font-size: 11px !important;'><b>Media 2º</b></td>
                                    <td style='text-align: center; font-size: 11px !important;'><b>Media 3º</b></td>
                                    <td style='text-align: center; font-size: 11px !important;'><b>M.A</b></td>
                                    <td style='text-align: center; font-size: 11px !important;'><b>Nota necessária</b></td>
                                    "",
                           ""bottom""=>""<td colspan='3' style='background-color: white !important;'><b>Total de alunos:</b> {qtd_alunos}</td>
                           ""   
                        )
                              
                  ),
                     ""showHeader""=>false,
                     ""columns""=>array(
                        ""nr_aluno""=>array(
                           ""cssStyle""=>""text-align: center;""
                        ),
                        ""nr_matricula""=>array(
                           ""cssStyle""=>""text-align: center;""
                        ),
                        ""nm_aluno""=>array(
                           ""cssStyle""=>""text-align: left !important;""
                        ),
                        ""media1""=>array(
                           ""cssStyle""=>""text-align: center;""
                        ),
                        ""media2""=>array(
                           ""cssStyle""=>""text-align: center;""
                        ),
                        ""media3""=>array(
                           ""cssStyle""=>""text-align: center;""
                        ),
                        ""mediaanual""=>array(
                           ""cssStyle""=>""text-align: center;""
                        ),
                        ""nota_necessaria""=>array(
                           ""cssStyle""=>""text-align: center;""
                        )
                     ),
                  ""cssClass""=>array(
                     ""table""=>""table table-striped table-hover"",
                     ""tr""=>""tabela"",
                     ""th""=>""tabela"",
                     ""td""=>""tabela"",
                     ""tf""=>""tabela"",
                  )
                  ));

               } else {

                  Table::create(array(
                     ""dataStore""=>$dados_pagina,
                     ""grouping""=>array(                        
                        ""turma""=>array(
                           ""calculate""=>array(
                              ""{qtd_alunos}""=>array(""count"",""nr_matricula"")
                           ),
                           ""top""=>""<td style='text-align: center; font-size: 11px !important;'><b>Nº</b></td>
                                    <td style='text-align: center; font-size: 11px !important;'><b>Matrícula</b></td>
                                    <td style='text-align: left; font-size: 11px !important;'><b>Aluno</b></td>
                                    <td style='text-align: center; font-size: 11px !important;'><b>Media 1º</b></td>
                                    <td style='text-align: center; font-size: 11px !important;'><b>Media 2º</b></td>
                                    <td style='text-align: center; font-size: 11px !important;'><b>Media 3º</b></td>
                                    <td style='text-align: center; font-size: 11px !important;'><b>Media 4º</b></td>
                                    <td style='text-align: center; font-size: 11px !important;'><b>M.A</b></td>
                                    <td style='text-align: center; font-size: 11px !important;'><b>Nota necessária</b></td>
                                    "",
                           ""bottom""=>""<td colspan='3' style='background-color: white !important;'><b>Total de alunos:</b> {qtd_alunos}</td>
                           ""   
                        )
                              
                  ),
                     ""showHeader""=>false,
                     ""columns""=>array(
                        ""nr_aluno""=>array(
                           ""cssStyle""=>""text-align: center;""
                        ),
                        ""nr_matricula""=>array(
                           ""cssStyle""=>""text-align: center;""
                        ),
                        ""nm_aluno""=>array(
                           ""cssStyle""=>""text-align: left !important;""
                        ),
                        ""media1""=>array(
                           ""cssStyle""=>""text-align: center;""
                        ),
                        ""media2""=>array(
                           ""cssStyle""=>""text-align: center;""
                        ),
                        ""media3""=>array(
                           ""cssStyle""=>""text-align: center;""
                        ),
                        ""media4""=>array(
                           ""cssStyle""=>""text-align: center;""
                        ),
                        ""mediaanual""=>array(
                           ""cssStyle""=>""text-align: center;""
                        ),
                        ""nota_necessaria""=>array(
                           ""cssStyle""=>""text-align: center;""
                        )
                     ),
                  ""cssClass""=>array(
                     ""table""=>""table table-striped table-hover"",
                     ""tr""=>""tabela"",
                     ""th""=>""tabela"",
                     ""td""=>""tabela"",
                     ""tf""=>""tabela"",
                  )
                  ));

               }

                  ?>

                  </div>
                  <?php

                     if($key == $count){

                  ?>

                  <table class=""table"">
                     <tr>
                        <td style=""font-size: 9px !important;"">
                           <b>Total geral de alunos:</b> <?php echo $this->dataStore('dados_consulta')->count(); ?>
                        </td>
                     </tr>
                  </table>  

                  <?php

                     }

                  ?>
                  <div
                     class=""page-footer no-screen""
                     style=""overflow: hidden;""
                  >
                     <div
                        style=""
                           text-align: right;
                           padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                           padding-right: <?=$ds_margem_direita . 'cm'?>;
                           ""
                     >

                     </div>
                  </div>
                  <div class=""page-break"" style=""page-break-after: always;""></div>
               </div>
            </div>         
         <?php
         }
      ?>

   </body>
</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();
","[
   {
      ""tipo"": ""uni-select-coligada-filha"",
      ""obrigatorio"": false,
      ""label"": ""Unidade de Ensino"",
      ""ds_campo"": ""cd_coligada""
   },
   {
      ""tipo"": ""uni-select-departamento"",
      ""obrigatorio"": false,
      ""label"": ""Departamento"",
      ""ds_campo"": ""cd_depto""
   },
   {
      ""tipo"": ""campo-anosemestre"",
      ""obrigatorio"": false,
      ""label"": ""Ano/Semestre"",
      ""ds_campo"": ""ano""
   },
   {
      ""tipo"": ""uni-select-curso"",
      ""obrigatorio"": false,
      ""label"": ""Curso"",
      ""ds_campo"": ""cd_curso""
   },
   {
      ""tipo"": ""uni-busca-turma"",
      ""obrigatorio"": false,
      ""label"": ""Turma"",
      ""ds_campo"": ""cd_turma""
   }
]",50,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,10,1,""7. Relação de Alunos para Cálculo de Nota Necessária"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,2, NULL, NULL, NULL,""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Homologação,13. Relação de Alunos Simples,"<?php

   $PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
   require_once( $PARMS['PASTA'] . 'nucleo.php' );
   require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
   header ('Content-type: text/html; charset=UTF-8');

   use \koolreport\processes\ColumnMeta;
   use \koolreport\processes\Group;
   use \koolreport\processes\OnlyColumn;

   // classe padrao do relatorio
   class Relatorio extends \koolreport\KoolReport {
      use \koolreport\bootstrap4\Theme;
      use \koolreport\inputs\Bindable;
      use \koolreport\inputs\POSTBinding;
      use \koolreport\export\Exportable;

      public $path_include;
      public $arrDadosFiltro;
      public $arrDadosGerais;

      public function __construct() {

         try {

            $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
            parent::__construct();

         } catch (Exception $e) {

            echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
            die;

         }

      }

      // inicializacao dos filtros
      function defaultParamValues() {
         return array(
            ""filtros""=>'{}',
            ""gerais""=>'{}'
         );
      }

      // resgate do $_POST para vinculo com os parametros
      function bindParamsToInputs() {
         return array(
            ""filtros"",
            ""gerais""
         );
      }

      // funcao responsavel por realizar a conexao com o banco de dados
      // e resgate dos dados tratamento dos dados do $_POST
      public function settings() {

         Nucleo::import( 'relatorios.RelatoriosConexao' );
         $objRelatoriosConexao = new RelatoriosConexao;

         return $objRelatoriosConexao->settings();

      }

      // funcao responsavel por manter as consultas a serem executadas pelo relatorio
      // e geracao dos array de dados para uso posterior na visualizacao
      public function setup() {

         require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

         if (isset($_POST['filtros'])) {
            $this->arrDadosFiltro = json_decode($_POST['filtros']);
         } else {
            $this->arrDadosFiltro = json_decode($_POST);
         }

         if (isset($_POST['gerais'])) {
            $this->arrDadosGerais = json_decode($_POST['gerais']);
         }

         $arrParametros = [];

         foreach ($this->arrDadosFiltro as $filtro => $valor) {
            if (!empty($valor->ds_valor)) {
                $arrParametros["":"" . $filtro] = $valor->ds_valor;
            }
         }

         $this->src('unimestre')->query(
            ""
                  SELECT
                     IF(IFNULL(m.nr_aluno,'-') = 0,'-', IFNULL(m.nr_aluno,'-')) AS nr_aluno,
                     m.codigoaluno AS matricula,
                     p.nm_pessoa AS nome_aluno,
                     t.curso AS curso,
                     t.codigo AS turma,
                     cm.DS_APELIDO AS descricao_curso,
                     CONCAT(MID(m.anosemestre,1,4),'/',MID(m.anosemestre,5,1)) AS ano
                  FROM
                     matriculas AS m
                  INNER JOIN
                     turmas AS t ON (
                        m.anosemestre = t.anosemestre AND
                        m.turma = t.codigo AND
                        m.curso = t.curso
                     )
                  INNER JOIN
                     pessoas AS p ON (m.codigoaluno = p.cd_pessoa)
                  INNER JOIN
                     cursos_coligadas AS cc ON (t.curso = cc.CD_CURSO)
                  INNER JOIN
                     cursos_mestre AS cm ON (t.curso = cm.CD_CURSO)
                  INNER JOIN
                     coligadas AS c ON (t.cd_coligada = c.cd_coligada)
                  WHERE
                     1=1
                  "" .
                     ((!empty($arrParametros["":ano""]))
                        ? ""AND t.anosemestre IN (:ano)""
                        : NULL
                     )
                  . ""
                  "" .
                  ((!empty($arrParametros["":cd_curso""]))
                     ? ""AND cm.id_curso IN (:cd_curso)""
                     : NULL
                  )
                  . ""
                  "" .
                  ((!empty($arrParametros["":cd_turma""]))
                     ? ""AND t.codigo IN (:cd_turma)""
                     : NULL
                  )
                  . ""
                  "" .
                  ((!empty($arrParametros["":cd_coligada""]))
                     ? ""AND c.cd_coligada IN (:cd_coligada)""
                     : NULL
                  )
                  . ""
                  "" .
                  ((!empty($arrParametros["":cd_depto""]))
                     ? ""AND cc.CD_DEPTO IN (:cd_depto)""
                     : NULL
                  )
                  . ""
                  "" .
                  ((!empty($arrParametros["":cd_situacao_mat""]))
                     ? ""AND m.situacao IN (:cd_situacao_mat)""
                     : NULL
                  )
                  . ""
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""matricula"" => $arrFormatoInteiro                  
               )
            )
         )
         ->saveTo($consulta);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
         $consulta->pipe($this->dataStore(""dados_consulta""));

         $consulta->pipe(new Group(array(
            ""by""=>array(
               ""ano"",
               ""turma""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""ano"",
            ""turma""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));

				require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									

      }

   }
","<?php
   use \koolreport\widgets\koolphp\Table;
   use \koolreport\processes\Filter;
   // path pasta
   $path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
   // margens
   $ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
   $ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
   $ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
   $ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;
   $sn_geracao = $_POST[""pdf""];
?>
<html>
   <head>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
   </head>

   <style>  
      .totalizador {
         min-height: 0cm !important;
      }
   </style>

   <body class=""relatorio"">
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>
      <?php

      $count = $this->dataStore('dados_consulta_agrupado')->count();
      $count = $count-1;

         foreach($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao){
            $dados_pagina = $this->dataStore(""dados_consulta"")
               ->filter(
                  ""ano"",""="",$visualizacao[""ano""]
               )
               ->filter(
                  ""turma"",""="",$visualizacao[""turma""]
               );
            ?>

            <style>
                .tabela{
                    font-size: 11px !important;
                }
                ul li{
                    font-size: 11px !important;
                }
            </style>

            <div class=""container"">
               <div
                  class=""conteudo""
                  style=""
                     padding-top: <?=((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm'?>;
                     padding-bottom: <?=((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm'?>;
                     padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                     padding-right: <?=$ds_margem_direita . 'cm'?>;
                     ""
               >
                  <div>
                     <div
                        style=""
                           height: 140;
                           ""
                     >
                        <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'cabecalho.php')); ?>
                     </div>
                  </div>

                    <div>
                        <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'filtro.php')); ?>
                    </div>

                  <div>
                     <h3 class=""text-center"" style=""margin: 1rem;"">
                        <?=$this->arrDadosGerais->nm_relatorio?>
                     </h3>

                  <hr>

                  <b class=""tabela""> Curso: <?= $dados_pagina[0][""descricao_curso""] ?> / Turma: <?= $dados_pagina[0][""turma""] ?> / Ano/Semestre: <?= $dados_pagina[0][""ano""] ?> </b>

                  <hr>

                  <?php 

                  Table::create(array(
                     ""dataStore""=>$dados_pagina,
                     ""grouping""=>array(                        
                        ""turma""=>array(
                           ""calculate""=>array(
                              ""{qtd_alunos}""=>array(""count"",""matricula"")
                           ),
                           ""top""=>""<td style='text-align: center; width: 10%; font-size: 11px !important; font-weight: bold;'>Matrícula</td>
                                    <td style='text-align: center; width: 10%; font-size: 11px !important; font-weight: bold;'>Cód</td>
                                    <td style='text-align: left; width: 80%; font-size: 11px !important; font-weight: bold;'>Aluno</td>
                                    "",
                           ""bottom""=>""<td colspan='3' style='background-color: white !important; font-size: 11px !important; font-weight: bold;'>Total de alunos: {qtd_alunos}</td>
                        ""   
                        )
                  ),
                     ""showHeader""=>false,
                     ""columns""=>array(
                           ""nr_aluno""=>array(
                           ""cssStyle""=>""text-align: center; font-size: 11px !important;""
                        ),
                           ""matricula""=>array(
                           ""cssStyle""=>""text-align: center; font-size: 11px !important;""
                        ),
                           ""nome_aluno""=>array(
                           ""cssStyle""=>""text-align: left !important; font-size: 11px !important;""
                        )
                  ),
                  ""cssClass""=>array(
                     ""table""=>""table table-striped table-hover"",
                     ""tr""=>"""",
                     ""th""=>"""",
                     ""td""=>"""",
                     ""tf""=>"""",
                  )
                  ));

                  ?>

                  </div>
                  <?php

                     if($key == $count){

                  ?>

                  <table>
                     <tr>
                        <td style='font-weight: bold; font-size: 11px !important;'>
                           Total geral de alunos: <?php echo $this->dataStore('dados_consulta')->count(); ?>
                        </td>
                     </tr>
                  </table>  

                  <?php

                     }

                  ?>
                  <div
                     class=""page-footer no-screen""
                     style=""overflow: hidden;""
                  >
                     <div
                        style=""
                           text-align: right;
                           padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                           padding-right: <?=$ds_margem_direita . 'cm'?>;
                           ""
                     >

                     </div>
                  </div>
                  <div class=""page-break"" style=""page-break-after: always;""></div>
               </div>
            </div>         
         <?php
         }
      ?>

   </body>
</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();
","[
   {
      ""tipo"": ""uni-select-coligada-filha"",
      ""obrigatorio"": false,
      ""label"": ""Unidade de Ensino"",
      ""ds_campo"": ""cd_coligada""
   },
   {
      ""tipo"": ""uni-select-departamento"",
      ""obrigatorio"": false,
      ""label"": ""Departamento"",
      ""ds_campo"": ""cd_depto""
   },
   {
      ""tipo"": ""campo-anosemestre"",
      ""obrigatorio"": false,
      ""label"": ""Ano/Semestre"",
      ""ds_campo"": ""ano""
   },
   {
      ""tipo"": ""uni-select-curso"",
      ""obrigatorio"": false,
      ""label"": ""Curso"",
      ""ds_campo"": ""cd_curso""
   },
   {
      ""tipo"": ""uni-busca-turma"",
      ""obrigatorio"": false,
      ""label"": ""Turma"",
      ""ds_campo"": ""cd_turma""
   },
	{
		""tipo"": ""campo-dinamico"",
		""obrigatorio"": false,
		""label"": ""Situação"",
		""ds_chave"": ""busca-situacao-matricula"",
		""ds_campo"": ""cd_situacao_mat""
	}
]",56,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,10,1,""13. Relação de Alunos Simples"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL, NULL, NULL, NULL, NULL,""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Homologação,Relação de Alunos Aniversariantes,"<?php

$PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
require_once( $PARMS['PASTA'] . 'nucleo.php' );
require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
header ('Content-type: text/html; charset=UTF-8');

use \koolreport\processes\ColumnMeta;
use \koolreport\processes\Group;
use \koolreport\processes\OnlyColumn;

   // classe padrao do relatorio
class Relatorio extends \koolreport\KoolReport {
   use \koolreport\bootstrap4\Theme;
   use \koolreport\inputs\Bindable;
   use \koolreport\inputs\POSTBinding;
   use \koolreport\export\Exportable;

   public $path_include;
   public $arrDadosFiltro;
   public $arrDadosGerais;

   public function __construct() {

      try {

         $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
         parent::__construct();

      } catch (Exception $e) {

         echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
         die;

      }

   }

      // inicializacao dos filtros
   function defaultParamValues() {
      return array(
         ""filtros""=>'{}',
         ""gerais""=>'{}'
      );
   }

      // resgate do $_POST para vinculo com os parametros
   function bindParamsToInputs() {
      return array(
         ""filtros"",
         ""gerais""
      );
   }

      // funcao responsavel por realizar a conexao com o banco de dados
      // e resgate dos dados tratamento dos dados do $_POST
   public function settings() {

      Nucleo::import( 'relatorios.RelatoriosConexao' );
      $objRelatoriosConexao = new RelatoriosConexao;

      return $objRelatoriosConexao->settings();

   }

      // funcao responsavel por manter as consultas a serem executadas pelo relatorio
      // e geracao dos array de dados para uso posterior na visualizacao
   public function setup() {

      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

      if (ctype_xdigit($_POST[""filtros""])) {
         $_POST[""filtros""] = hex2bin($_POST[""filtros""]);
      }

      if (ctype_xdigit($_POST[""gerais""])) {
         $_POST[""gerais""] = hex2bin($_POST[""gerais""]);
      }

      if (isset($_POST['filtros'])) {
         $this->arrDadosFiltro = json_decode($_POST['filtros']);
      } else {
         $this->arrDadosFiltro = json_decode($_POST);
      }

      if (isset($_POST['gerais'])) {
         $this->arrDadosGerais = json_decode($_POST['gerais']);
      }

      $arrParametros = [];

      foreach ($this->arrDadosFiltro as $filtro => $valor) {
         if (!empty($valor->ds_valor)) {
           $arrParametros["":"" . $filtro] = $valor->ds_valor;
        }
     }

     $this->src('unimestre')->query(
      ""
      SELECT
	      p.cd_pessoa AS cod_aluno,
	      1 AS grupo,
	      p.nm_pessoa AS nm_aluno,
	      t.codigo AS cod_turma,
	      t.descricao AS ds_turma,
	      col.nm_coligada AS nm_coligada,
         t.cd_coligada AS cd_coligada_cabecalho,
	      (SELECT IFNULL(cp.ds_contato,'(N/I)')  FROM contatos_pessoas cp WHERE cp.cd_pessoa = resp.cd_pessoa AND cd_contato = 3 LIMIT 1 ) AS Telefone,
	      DATE_FORMAT( p.dt_nascimento, '%d/%m/%Y' ) AS data_nascimento,
	      DAY(p.dt_nascimento) AS dia_nascimento,
         CONCAT(LEFT(m.anosemestre,4),'/',RIGHT(m.anosemestre,1)) AS nr_ano_sem,
         m.anosemestre AS nr_anosemestre,
         cm.CD_CURSO AS cod_curso,
         cm.DS_CURSO AS ds_curso,
         p.dt_nascimento AS dt_nasc_ordem,
         MONTH(p.dt_nascimento) AS nr_mes_nascimento,
		   (CASE MONTH(CURDATE())
   			WHEN 01 THEN 'Janeiro'
			   WHEN 02 THEN 'Fevereiro'
            WHEN 03 THEN 'Março'
            WHEN 04 THEN 'Abril'
            WHEN 05 THEN 'Maio'
            WHEN 06 THEN 'Junho'
            WHEN 07 THEN 'Julho'
            WHEN 08 THEN 'Agosto'
            WHEN 09 THEN 'Setembro'
            WHEN 10 THEN 'Outubro'
            WHEN 11 THEN 'Novembro'
            WHEN 12 THEN 'Dezembro'
            END
         ) AS mes_nasc,
	      YEAR(CURDATE()) AS ano_atual,
	      TIMESTAMPDIFF(YEAR, p.dt_nascimento, CURDATE()) AS idade_atual
      FROM
	      pessoas AS p
	   INNER JOIN matriculas m ON(p.cd_pessoa = m.codigoaluno)
      INNER JOIN turmas t ON (t.anosemestre = m.anosemestre AND t.curso = m.curso AND t.codigo = m.turma)
      INNER JOIN (
         SELECT DISTINCT
            codigoaluno AS cd_pessoa
         FROM
            matriculas mat 
         WHERE
            LEFT(anosemestre, 4) = YEAR (CURRENT_DATE()) AND mat.situacao IN (1, 10) 
      ) AS pessoas_envio ON (pessoas_envio.cd_pessoa = p.cd_pessoa)
      INNER JOIN 
         cursos_mestre cm ON (m.curso = cm.CD_CURSO)
      INNER JOIN 
         coligadas col ON (t.cd_coligada = col.cd_coligada)  
      LEFT JOIN 
         pessoas resp ON(p.cd_resp_finan = resp.cd_pessoa)      
      WHERE 
         1 = 1
         "" .
            ((!empty($arrParametros["":cd_coligada""]))
               ? ""AND t.cd_coligada IN (:cd_coligada)""
               : NULL
            )
         . ""
         "" .
            ((!empty($arrParametros["":nr_anosemestre""]))
               ? ""AND m.anosemestre IN (:nr_anosemestre)""
               : NULL
            )
         . ""
         "" .
            ((!empty($arrParametros["":id_curso""]))
               ? ""AND cm.ID_CURSO IN (:id_curso)""
               : NULL
            )
         . ""
         "" .
            ((!empty($arrParametros["":cd_turma""]))
               ? ""AND m.turma IN (:cd_turma)""
               : NULL
            )
         . ""
         "" .
            ((!empty($arrParametros["":cd_aluno""]))
               ? ""AND m.codigoaluno IN (:cd_aluno)""
               : NULL
            )
         . ""
         "" .
            ((!empty($arrParametros["":dt_inicio""]))
               ? ""AND DATE_FORMAT(p.dt_nascimento,'%m-%d') >= DATE_FORMAT(:dt_inicio,'%m-%d')""
               : NULL
            )
         . ""
         "" .
            ((!empty($arrParametros["":dt_final""]))
               ? ""AND DATE_FORMAT(p.dt_nascimento,'%m-%d') <= DATE_FORMAT(:dt_final,'%m-%d')""
               : NULL
            )
         . ""
		GROUP BY 
         m.codigoaluno,
         m.turma,
         m.anosemestre
      ;
      ""
      )
         // aplicacao de filtro a consulta
     ->params(
      $arrParametros
   )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
     ->pipe(
      new ColumnMeta(
         array(
            ""cod_aluno"" => $arrFormatoInteiro
         )
      )
   )
     ->saveTo($consulta);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
     $consulta->pipe($this->dataStore(""dados_consulta""));

      $consulta->pipe(new Group(array(
         ""by""=>array(
            ""cod_turma"",
            ""cod_curso"",
            ""nr_anosemestre""
         )
      )))
      ->pipe(new OnlyColumn(array(
         ""cod_turma"",
         ""cod_curso"",
         ""nr_anosemestre"",
         ""cd_coligada_cabecalho""
      )))
      ->pipe($this->dataStore(""dados_consulta_agrupado""));

     $this->src('unimestre')->query(
      ""
         SELECT
            us.cd_pessoa AS cod_usuario
         ,  us.nm_pessoa AS nm_usuario
         ,  IFNULL(rl.ds_chave,'------') AS ds_chave_rel
         FROM
            pessoas us
         INNER JOIN
            rgo_logs_impressoes rli ON (rli.cd_pessoa = us.cd_pessoa)
         INNER JOIN
            rgo_relatorios rl ON (rl.cd_relatorio = rli.cd_relatorio)
         WHERE
            rli.cd_relatorio = "" . $this->arrDadosGerais->cd_relatorio . ""
         ORDER BY
            rli.dt_impressao DESC
         LIMIT 1
      ""
   )
   ->saveTo($dados_footer);

   $dados_footer->pipe($this->dataStore(""dados_rodape""));

	require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));															

  }

}","<?php

use \koolreport\widgets\koolphp\Table;
use \koolreport\processes\Filter;

// path pasta
$path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

// margens
$ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
$ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
$ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
$ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

$sn_geracao = $_POST[""pdf""];

//usuario impressao
$usuario = $this->dataStore(""dados_rodape"")[0][""nm_usuario""];

//chave relatorio
$chave_relatorio = $this->dataStore(""dados_rodape"")[0][""ds_chave_rel""];

?>

<html>

<head>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
</head>

<style>
      .totalizador {
         min-height: 0cm !important;
      }
      .fonte {
         font-size: 11px !important;
      }
      .b {
         font-weight: bold !important;
      }
      ul li {
         font-size: 11px !important;
      }
      .rodape {
         font-size: 9px !important;
      }
   </style>

<body class=""relatorio"">
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

    <?php

    foreach ($this->dataStore(""dados_consulta_agrupado"") as $visualizacao) {
        $dados_pagina = $this->dataStore(""dados_consulta"")
            ->filter(
                ""cod_turma"",
                ""="",
                $visualizacao[""cod_turma""]
            )
            ->filter(
                ""cod_curso"",
                ""="",
                $visualizacao[""cod_curso""]
            )
            ->filter(
               ""nr_anosemestre"",
               ""="",
               $visualizacao[""nr_anosemestre""]
            );
    ?>

        <div class=""container"">
            <div class=""conteudo"" style=""
               padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
               padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
               padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
               padding-right: <?= $ds_margem_direita . 'cm' ?>;
               min-height: 28.1cm;
            "">

               <div style=""vertical-align: top; min-height: 100;"">

                  <table style=""width: 100%;"">
                     <tr>
                        <td style=""text-align: left; width: 55%;"">
                           <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','cabecalho.php')); ?>
                        </td>
                        <td style=""text-align: right; max-width: 45%;"">
                           <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','filtro.php')); ?>
                        </td>
                     </tr>
                  </table>

               </div>

               <div>

                  <h5 class=""text-center"" style=""margin: 0.25rem;"">
                     <?= $this->arrDadosGerais->nm_relatorio ?>
                  </h5>

                  <table class=""table mb-2"">
                     <tr>
                        <td class=""fonte p-1"" style=""width: 33%; border-bottom: 1px solid #dee2e6;"">
                           <b>Curso:</b> <?= $dados_pagina[0]['ds_curso'] ?>
                        </td>
                        <td class=""fonte p-1"" style=""width: 33%; border-bottom: 1px solid #dee2e6;"">
                           <b>Turma:</b> <?= $dados_pagina[0]['ds_turma'] ?>
                        </td>
                        <td class=""fonte p-1"" style=""width: 33%; border-bottom: 1px solid #dee2e6;"">
                           <b>Ano/Semestre:</b> <?= $dados_pagina[0]['nr_ano_sem'] ?>
                        </td>
                     </tr>
                  </table>

                    <?php

                    // componente responsavel pela criacao da tabela de dados
                    Table::create(array(
                        ""dataSource"" => $dados_pagina,
                        ""grouping"" => array(
                            ""grupo"" => array(
                               ""calculate""=>array(
                                  ""{countAlunos}""=>array(""sum"",""grupo"")
                               ),
                                ""top"" => ""<td class='b fonte p-1 text-center'>Matrícula</td>
                                <td class='b fonte p-1 text-left'>Aluno</td>
                                <td class='b fonte p-1 text-center'>Telefone</td>
                                <td class='b fonte p-1 text-center'>Data de Nascimento</td>
                                <td class='b fonte p-1 text-center'>Idade atual</td>
                                "",
                                ""bottom"" => ""<td colspan='6' class='align-middle p-1 b'>Total de Alunos: {countAlunos}</td>
                                ""
                            )

                        ),

                        ""showHeader"" => false,
                        ""columns"" => array(
                            ""cod_aluno"" => array(
                                ""cssStyle"" => ""text-align: center;""
                            ),
                            ""nm_aluno"" => array(
                                ""cssStyle"" => ""text-align: left;""
                            ),
                            ""Telefone"" => array(
                                ""cssStyle"" => ""text-align: center;""
                            ),
                            ""data_nascimento"" => array(
                                ""cssStyle"" => ""text-align: center;""
                            ),
                            ""idade_atual"" => array(
                                ""cssStyle"" => ""text-align: center;""
                            )
                        ),
                        ""cssClass"" => array(
                            ""table"" => ""table table-striped table-hover"",
                            ""tr"" => """",
                            ""th"" => """",
                            ""td"" => ""fonte p-1"",
                            ""tf"" => ""darker"",
                        ),
                        ""sorting"" => array(
                            ""dt_nasc_ordem"" => ""asc"",
                            ""nm_aluno"" => ""asc""
                        )
                    ));

                    ?>

               </div>

            </div>
            <div style=""text-align: right; padding-bottom: <?= $ds_margem_inferior . 'cm' ?>;padding-left: <?= $ds_margem_esquerda . 'cm' ?>;padding-right: <?= $ds_margem_direita . 'cm' ?>;"">
               <hr>
               <div class=""float-left rodape text-left"" style=""width: 80%; vertical-align: middle !important;"">
                  <img class=""float-left"" src=""https://sinergia.unimestre.com/arquivo/cliente/imagens/logo_rodape_unimestre_v3"" alt="""">
                  <div class=""ml-3 float-left rodape"">Impresso por: <?= $usuario ?> - <?= $chave_relatorio ?></div>
               </div>
               <div class=""float-right rodape text-right"" style=""width: 20%;"">
               
               </div>
            </div>
        </div>

    <?php

    }

    ?>

</body>

</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[
	{
		""tipo"": ""uni-select-coligada-filha"",
		""obrigatorio"": false,
		""label"": ""Unidade"",
		""ds_campo"": ""cd_coligada""
	},
	{
		""tipo"": ""campo-anosemestre"",
		""obrigatorio"": true,
		""label"": ""Anosemestre"",
		""ds_campo"": ""nr_anosemestre""
	},
	{
		""tipo"": ""uni-select-curso"",
		""obrigatorio"": false,
		""label"": ""Curso"",
		""ds_campo"": ""id_curso""
	},
	{
		""tipo"": ""uni-busca-turma"",
		""obrigatorio"": false,
		""label"": ""Turma"",
		""ds_campo"": ""cd_turma""
	},
	{
		""tipo"": ""campo-data"",
		""obrigatorio"": false,
		""label"": ""Data inicial"",
		""ds_campo"": ""dt_inicio""
	},
	{
		""tipo"": ""campo-data"",
		""obrigatorio"": false,
		""label"": ""Data final"",
		""ds_campo"": ""dt_final""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Aluno"",
		""ds_campo"": ""cd_aluno""
	}
]",58,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,10,1,""Relação de Alunos Aniversariantes"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,1,""Relatório Lista as equivalências de disciplinas por aluno	"", NULL, NULL,""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Homologação,15. Dados Cadastrais,"<?php
$PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
require_once($PARMS['PASTA'] . 'nucleo.php');
require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
header('Content-type: text/html; charset=UTF-8');

use \koolreport\processes\ColumnMeta;
use \koolreport\processes\Group;
use \koolreport\processes\OnlyColumn;

// classe padrao do relatorio
class Relatorio extends \koolreport\KoolReport
{
   use \koolreport\bootstrap4\Theme;
   use \koolreport\inputs\Bindable;
   use \koolreport\inputs\POSTBinding;
   use \koolreport\export\Exportable;

   public $path_include;
   public $arrDadosFiltro;
   public $arrDadosGerais;

   public function __construct()
   {
      try {
         $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
         parent::__construct();
      } catch (Exception $e) {
         echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
         die;
      }
   }

   // inicializacao dos filtros
   function defaultParamValues()
   {
      return array(
         ""filtros"" => '{}',
         ""gerais"" => '{}'
      );
   }

   // resgate do $_POST para vinculo com os parametros
   function bindParamsToInputs()
   {
      return array(
         ""filtros"",
         ""gerais""
      );
   }

   // funcao responsavel por realizar a conexao com o banco de dados
   // e resgate dos dados tratamento dos dados do $_POST
   public function settings()
   {
      Nucleo::import('relatorios.RelatoriosConexao');
      $objRelatoriosConexao = new RelatoriosConexao;

      return $objRelatoriosConexao->settings();
   }

   // funcao responsavel por manter as consultas a serem executadas pelo relatorio
   // e geracao dos array de dados para uso posterior na visualizacao
   public function setup()
   {
      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

      if (ctype_xdigit($_POST[""filtros""])) {
         $_POST[""filtros""] = hex2bin($_POST[""filtros""]);
      }

      if (ctype_xdigit($_POST[""gerais""])) {
         $_POST[""gerais""] = hex2bin($_POST[""gerais""]);
      }

      if (isset($_POST['filtros'])) {
         $this->arrDadosFiltro = json_decode($_POST['filtros']);
      } else {
         $this->arrDadosFiltro = json_decode($_POST);
      }

      if (isset($_POST['gerais'])) {
         $this->arrDadosGerais = json_decode($_POST['gerais']);
      }

      $arrParametros = [];

      foreach ($this->arrDadosFiltro as $filtro => $valor) {
         if (!empty($valor->ds_valor)) {
            $arrParametros["":"" . $filtro] = $valor->ds_valor;
         }
      }

      $this
         ->src('unimestre')
         ->query(""
            SELECT

               tu.cd_coligada AS cd_coligada_cabecalho
            ,  al.cd_pessoa AS cod_aluno
            ,	al.nm_pessoa AS nm_aluno
            ,	DATE_FORMAT(al.dt_nascimento, '%d/%m/%Y') AS dt_nasc_aluno
            ,	al.ds_logradouro AS ds_end_aluno
            ,	al.ds_bairro AS ds_bairro_aluno
            ,	al.ds_cep AS ds_cep_aluno
            ,	al.ds_identidade AS ds_rg
            ,	al.ds_cpf AS ds_cpf
            
            ,	GET_CONTATO_PESSOA(al.cd_pessoa, 1) AS res_aluno
            ,	GET_CONTATO_PESSOA(al.cd_pessoa, 3) AS cel_aluno
            ,	GET_CONTATO_PESSOA(al.cd_pessoa, 4) AS email_aluno
            
            ,	cm.CD_CURSO AS cod_curso
            ,	cm.DS_CURSO AS ds_curso
            ,	tu.codigo AS cod_turma
            ,	tu.descricao AS ds_turma
            ,  LEFT(ma.anosemestre,4) AS nr_ano
            ,  CONCAT(LEFT(ma.anosemestre,4),'/',RIGHT(ma.anosemestre,1)) AS nr_anosem
            ,	col.nm_coligada AS nm_coligada
            ,  IFNULL(ma.nr_aluno,1) AS nr_aluno
            
            ,	sit.ds_situacao AS ds_sit
            ,	IFNULL(sits.ds_valor,'-') AS ds_raca

            ,	IFNULL(GROUP_CONCAT( DISTINCT sitdef.ds_valor ORDER BY sitdef.ds_valor SEPARATOR ', '),' ') AS ds_deficiencias
            
            FROM
               pessoas al
            INNER JOIN
               matriculas ma ON (ma.codigoaluno = al.cd_pessoa)
            INNER JOIN
               situacao sit ON (sit.cd_situacao = ma.situacao)
            INNER JOIN
               turmas tu ON (
                  tu.anosemestre = ma.anosemestre AND
                  tu.codigo = ma.turma AND
                  tu.curso = ma.curso
               )
            INNER JOIN
               cursos_coligadas cc ON (
                  cc.CD_CURSO = tu.curso AND
                  cc.CD_COLIGADA = tu.cd_coligada
               )
            INNER JOIN
               cursos_mestre cm ON (cm.CD_CURSO = cc.CD_CURSO)
            INNER JOIN
               coligadas col ON (col.cd_coligada = cc.CD_COLIGADA)
            INNER JOIN
               pessoas rf ON (rf.cd_pessoa = al.cd_resp_finan)
            LEFT JOIN
               pessoas ra ON (ra.cd_pessoa = al.cd_resp_acad)
            LEFT JOIN
               uni_salas us ON (us.cd_sala = tu.cd_sala)
            LEFT JOIN
               situacoes sits ON (
                  sits.cd_situacao = IFNULL(al.cd_raca, 0) AND 
                  sits.cd_modulo = 1021
               )
            LEFT JOIN
               pessoas_deficiencias pd ON (pd.cd_pessoa = al.cd_pessoa)
            LEFT JOIN
               situacoes sitdef ON (
                  sitdef.cd_situacao = pd.cd_deficiencia AND
                  sitdef.cd_modulo = 1056
               )
            WHERE
               1 = 1
               "" .
                  ((!empty($arrParametros["":cd_coligada""]))
                     ? ""AND tu.cd_coligada IN (:cd_coligada)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_polo""]))
                     ? ""AND ma.cd_polo IN (:cd_polo)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_departamento""]))
                     ? ""AND cc.CD_DEPTO IN (:cd_departamento)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_departamento""]))
                     ? ""AND cc.CD_DEPTO IN (:cd_departamento)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":dt_inicio""]))
                     ? ""AND ma."" . $this->arrDadosGerais->arrOpcoes->tp_filtro_data->me_configuracao . "" >= :dt_inicio""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":dt_fim""]))
                     ? ""AND ma."" . $this->arrDadosGerais->arrOpcoes->tp_filtro_data->me_configuracao . "" < DATE_ADD(:dt_fim, INTERVAL 1 DAY)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":nr_anosemestre""]))
                     ? ""AND ma.anosemestre IN (:nr_anosemestre)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":id_curso""]))
                     ? ""AND cm.ID_CURSO IN (:id_curso)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_turma""]))
                     ? ""AND ma.turma IN (:cd_turma)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_aluno""]))
                     ? ""AND al.cd_pessoa IN (:cd_aluno)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_acad""]))
                     ? ""AND ra.cd_pessoa IN (:cd_acad)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_finan""]))
                     ? ""AND rf.cd_pessoa IN (:cd_finan)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_situacao_mat""]))
                     ? ""AND ma.cd_situacao IN (:cd_situacao_mat)""
                     : NULL
                  )
               . ""
            GROUP BY
               ma.codigoaluno
            ORDER BY
               cm.DS_CURSO,
               tu.descricao,
               al.nm_pessoa
         "")
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cod_aluno"" => $arrFormatoInteiro,
                  ""cod_rf"" => $arrFormatoInteiro,
                  ""cod_ra"" => $arrFormatoInteiro,
                  ""nr_ano"" => $arrFormatoInteiro
               )
            )
         )
         ->saveTo($consulta);

      // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
      $consulta
         ->pipe($this->dataStore(""dados_consulta""));

      $consulta
         ->pipe(new Group(array(
            ""by"" => array(
               ""nr_ano"",
               ""cod_curso"",
               ""cod_turma""
            )
         )))
         ->pipe(new OnlyColumn(array(
               ""nr_ano"",
               ""cod_curso"",
               ""cod_turma""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));

					require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									
															
   }
}","<?php

   use \koolreport\widgets\koolphp\Table;
   use \koolreport\processes\Filter;

   // path pasta
   $path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

   // margens
   $ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
   $ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
   $ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
   $ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

   $sn_geracao = $_POST[""pdf""];
?>

<html>
   <head>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>

      <style>
         .borda {
            border: 1px solid #dee2e6;
         }
         .fonte {
            font-size: 11px !important;
         }
         .b {
            font-weight: bold !important;
         }
         ul li {
            font-size: 11px !important;
         }
      </style>

   </head>

   <body class=""relatorio"">
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

      <?php

         foreach($this->dataStore(""dados_consulta_agrupado"") as $visualizacao)
         {
            $dados_pagina = $this->dataStore(""dados_consulta"")
               ->filter(
                  ""nr_ano"",""="",$visualizacao[""nr_ano""]
               )
               ->filter(
                  ""cod_curso"",""="",$visualizacao[""cod_curso""]
               )
               ->filter(
                  ""cod_turma"",""="",$visualizacao[""cod_turma""]
               );

            ?>

            <div class=""container"" style=""width: 49cm !important; max-width: 49cm !important;"">
               <div
                  class=""conteudo""
                  style=""
                     padding-top: <?=((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm'?>;
                     padding-bottom: <?=((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm'?>;
                     padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                     padding-right: <?=$ds_margem_direita . 'cm'?>;
                     ""
               >

                  <div>
                     <div
                        style=""
                           height: 140;
                           ""
                     >
                        <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'cabecalho.php')); ?>
                     </div>
                  </div>

                  <div class=""text-right"">
                     <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'filtro.php')); ?>
                  </div>

                  <div>

                     <h3 class=""text-center"" style=""margin: 0.5rem;"">
                        <?=$this->arrDadosGerais->nm_relatorio?>
                     </h3>

                     <table class=""table"">
                        <tr>
                           <td class=""fonte"" style=""width: 33%;"">
                              <b>Curso:</b> <?= $dados_pagina[0]['ds_curso'] ?>
                           </td>
                           <td class=""fonte"" style=""width: 33%;"">
                              <b>Turma:</b> <?= $dados_pagina[0]['ds_turma'] ?>
                           </td>
                           <td class=""fonte"" style=""width: 33%;"">
                              <b>Ano/Semestre:</b> <?= $dados_pagina[0]['nr_anosem'] ?>
                           </td>
                        </tr>
                     </table>

                     <?php

                           // componente responsavel pela criacao da tabela de dados
                           Table::create(array(
                              ""dataSource""=> $dados_pagina,
                              ""grouping"" => array(
                                 ""cod_turma"" => array(
                                    ""top"" => ""<td align='center' class='fonte p-2 b'>Cód.</td>
                                    <td align='left' class='fonte p-2 b'>Nome</td>
                                    <td align='center' class='fonte p-2 b'>Dt. Nasc.</td>
                                    <td align='left' class='fonte p-2 b'>Endereço</td>
                                    <td align='left' class='fonte p-2 b'>Bairro</td>
                                    <td align='center' class='fonte p-2 b'>CEP</td>
                                    <td align='center' class='fonte p-2 b'>RG</td>
                                    <td align='center' class='fonte p-2 b'>CPF</td>
                                    <td align='center' class='fonte p-2 b'>Tel. Res.</td>
                                    <td align='center' class='fonte p-2 b'>Celular</td>
                                    <td align='left' class='fonte p-2 b'>E-mail</td>
                                    <td align='center' class='fonte p-2 b'>Situação</td>
                                    <td align='center' class='fonte p-2 b'>Cor/Etnia</td>
                                    <td align='left' class='fonte p-2 b'>Nec. Especiais</td>
                                    ""
                                 )
                              ),
                              ""showHeader""=>false,
                              ""showFooter""=>false,
                              ""columns""=> array(
                                 ""cod_aluno"" => array(
                                    ""cssStyle""=> ""text-align: center; font-size: 11px !important;""
                                 ),
                                 ""nm_aluno"" => array(
                                    ""cssStyle""=> ""text-align: left; font-size: 11px !important;""
                                 ),
                                 ""dt_nasc_aluno"" => array(
                                    ""cssStyle""=> ""text-align: center; font-size: 11px !important;""
                                 ),
                                 ""ds_end_aluno"" => array(
                                    ""cssStyle""=> ""text-align: left; font-size: 11px !important;""
                                 ),
                                 ""ds_bairro_aluno"" => array(
                                    ""cssStyle""=> ""text-align: left; font-size: 11px !important;""
                                 ),
                                 ""ds_cep_aluno"" => array(
                                    ""cssStyle""=> ""text-align: center; font-size: 11px !important;""
                                 ),
                                 ""ds_rg"" => array(
                                    ""cssStyle""=> ""text-align: center; font-size: 11px !important;""
                                 ),
                                 ""ds_cpf"" => array(
                                    ""cssStyle""=> ""text-align: center; font-size: 11px !important;""
                                 ),
                                 ""res_aluno"" => array(
                                    ""cssStyle""=> ""text-align: center; font-size: 11px !important;""
                                 ),
                                 ""cel_aluno"" => array(
                                    ""cssStyle""=> ""text-align: center; font-size: 11px !important;""
                                 ),
                                 ""email_aluno"" => array(
                                    ""cssStyle""=> ""text-align: left; font-size: 11px !important;""
                                 ),
                                 ""ds_sit"" => array(
                                    ""cssStyle""=> ""text-align: center; font-size: 11px !important;""
                                 ),
                                 ""ds_raca"" => array(
                                    ""cssStyle""=> ""text-align: center; font-size: 11px !important;""
                                 ),
                                 ""ds_deficiencias"" => array(
                                    ""cssStyle""=> ""text-align: left; font-size: 11px !important;""
                                 )
                              ),
                              ""cssClass""=>array(
                                 ""table""=>""table table-striped table-hover"",
                                 ""tr""=>"""",
                                 ""th""=>"""",
                                 ""td""=>""p-2"",
                                 ""tf""=>""darker"",
                              ),
                              ""sorting""=> array(
                                 ""nr_aluno""=>""asc"",
                                 ""nm_aluno""=> ""asc""
                              )
                           ));

                     ?>

                  </div>

                  <div
                     class=""page-footer no-screen""
                     style=""overflow: hidden;""
                  >
                     <div
                        style=""
                           text-align: right;
                           padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                           padding-right: <?=$ds_margem_direita . 'cm'?>;
                           ""
                     >
                        <hr>
                        {pageNum}/{numPages}
                     </div>
                  </div>

                  <div class=""page-break"" style=""page-break-after: always;""></div>

               </div>
            </div>

         <?php

         }

      ?>

   </body>
</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[
	{
		""tipo"": ""uni-select-coligada-filha"",
		""obrigatorio"": false,
		""label"": ""Unidade"",
		""ds_campo"": ""cd_coligada""
	},
	{
		""tipo"": ""uni-select-polo"",
		""obrigatorio"": false,
		""label"": ""Polo"",
		""ds_campo"": ""cd_polo""
	},
	{
		""tipo"": ""uni-select-departamento"",
		""obrigatorio"": false,
		""label"": ""Departamento"",
		""ds_campo"": ""cd_departamento""
	},
	{
		""tipo"": ""campo-data"",
		""obrigatorio"": false,
		""label"": ""Data inicial"",
		""ds_campo"": ""dt_inicio""
	},
	{
		""tipo"": ""campo-data"",
		""obrigatorio"": false,
		""label"": ""Data final"",
		""ds_campo"": ""dt_fim""
	},
	{
		""tipo"": ""campo-anosemestre"",
		""obrigatorio"": true,
		""label"": ""Anosemestre"",
		""ds_campo"": ""nr_anosemestre""
	},
	{
		""tipo"": ""uni-select-curso"",
		""obrigatorio"": false,
		""label"": ""Curso"",
		""ds_campo"": ""id_curso""
	},
	{
		""tipo"": ""uni-busca-turma"",
		""obrigatorio"": false,
		""label"": ""Turma"",
		""ds_campo"": ""cd_turma""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Aluno"",
		""ds_campo"": ""cd_aluno""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Responsável Acadêmico"",
		""ds_campo"": ""cd_acad""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Responsável Financeiro"",
		""ds_campo"": ""cd_finan""
	},
	{
		""tipo"": ""campo-dinamico"",
		""obrigatorio"": false,
		""label"": ""Situação da Matrícula"",
		""ds_chave"": ""busca-situacao-matricula"",
		""ds_campo"": ""cd_situacao_mat""
	}
]",59,"INSERT IGNORE INTO rgo_opcoes_tipos (
								cd_opcao_tipo,
								ds_opcao_tipo,
								ds_tag_opcao,
								dt_base
						)
				VALUES (
								NULL,""Tipo do filtro de data"",""tp_filtro_data"",""2020-04-07 14:59:54"")","INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,10,1,""15. Dados Cadastrais"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,2, NULL, NULL, NULL,""2023-12-13 15:53:40"",0, NULL)","INSERT IGNORE INTO rgo_opcoes (cd_opcao, cd_relatorio,cd_opcao_tipo,sn_padrao,sn_ativo,ds_opcao,me_configuracao,ds_chave,dt_base)
VALUES (NULL,NULL,NULL,1,1,""Emissão"",""dataemissao"",""rel_dados_cadastrais_dt_emissao"",""2021-11-09 15:53:15""
 ); 
INSERT IGNORE INTO rgo_opcoes (cd_opcao, cd_relatorio,cd_opcao_tipo,sn_padrao,sn_ativo,ds_opcao,me_configuracao,ds_chave,dt_base)
VALUES (NULL,NULL,NULL,0,1,""Saída"",""datasaida"",""rel_dados_cadastrais_dt_saida"",""2021-11-09 15:53:15""
 )",,475.0,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Homologação,16. Telefones dos Responsáveis,"<?php
$PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
require_once($PARMS['PASTA'] . 'nucleo.php');
require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
header('Content-type: text/html; charset=UTF-8');

use \koolreport\processes\ColumnMeta;
use \koolreport\processes\Group;
use \koolreport\processes\OnlyColumn;

// classe padrao do relatorio
class Relatorio extends \koolreport\KoolReport
{
   use \koolreport\bootstrap4\Theme;
   use \koolreport\inputs\Bindable;
   use \koolreport\inputs\POSTBinding;
   use \koolreport\export\Exportable;
   use \koolreport\cloudexport\Exportable;

   public $path_include;
   public $arrDadosFiltro;
   public $arrDadosGerais;

   const C_SN_CLOUD_EXPORT = true;

   public function __construct()
   {
      try {
         $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
         parent::__construct();
      } catch (Exception $e) {
         echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
         die;
      }
   }

   // inicializacao dos filtros
   function defaultParamValues()
   {
      return array(
         ""filtros"" => '{}',
         ""gerais"" => '{}'
      );
   }

   // resgate do $_POST para vinculo com os parametros
   function bindParamsToInputs()
   {
      return array(
         ""filtros"",
         ""gerais""
      );
   }

   // funcao responsavel por realizar a conexao com o banco de dados
   // e resgate dos dados tratamento dos dados do $_POST
   public function settings()
   {
      Nucleo::import('relatorios.RelatoriosConexao');
      $objRelatoriosConexao = new RelatoriosConexao;

      return $objRelatoriosConexao->settings();
   }

   // funcao responsavel por manter as consultas a serem executadas pelo relatorio
   // e geracao dos array de dados para uso posterior na visualizacao
   public function setup()
   {
      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

      if (ctype_xdigit($_POST[""filtros""])) {
         $_POST[""filtros""] = hex2bin($_POST[""filtros""]);
      }

      if (ctype_xdigit($_POST[""gerais""])) {
         $_POST[""gerais""] = hex2bin($_POST[""gerais""]);
      }

      if (isset($_POST['filtros'])) {
         $this->arrDadosFiltro = json_decode($_POST['filtros']);
      } else {
         $this->arrDadosFiltro = json_decode($_POST);
      }

      if (isset($_POST['gerais'])) {
         $this->arrDadosGerais = json_decode($_POST['gerais']);
      }

      $arrParametros = [];

      foreach ($this->arrDadosFiltro as $filtro => $valor) {
         if (!empty($valor->ds_valor)) {
            $arrParametros["":"" . $filtro] = $valor->ds_valor;
         }
      }

      $this
         ->src('unimestre')
         ->query(""
            SELECT

               tu.cd_coligada AS cd_coligada_cabecalho

            ,  al.cd_pessoa AS cod_aluno
            ,	al.nm_pessoa AS nm_aluno
            ,	GET_CONTATO_PESSOA(al.cd_pessoa,1) AS fixo_aluno
            ,	GET_CONTATO_PESSOA(al.cd_pessoa,3) AS cel_aluno
            
            ,	ra.cd_pessoa AS cod_ra
            ,	IFNULL(ra.nm_pessoa,'-') AS nm_ra
            ,	IFNULL(GET_CONTATO_PESSOA(ra.cd_pessoa,2),'-') AS comercial_ra
            ,	IFNULL(GET_CONTATO_PESSOA(ra.cd_pessoa,1),'-') AS fixo_ra
            ,	IFNULL(GET_CONTATO_PESSOA(ra.cd_pessoa,3),'-') AS cel_ra
            
            ,	rf.cd_pessoa AS cod_rf
            ,	rf.nm_pessoa AS nm_rf
            ,	GET_CONTATO_PESSOA(rf.cd_pessoa,2) AS comercial_rf
            ,	GET_CONTATO_PESSOA(rf.cd_pessoa,1) AS fixo_rf
            ,	GET_CONTATO_PESSOA(rf.cd_pessoa,3) AS cel_rf
            
            ,	cm.CD_CURSO AS cod_curso
            ,	cm.DS_CURSO AS ds_curso
            ,	tu.codigo AS cod_turma
            ,	tu.descricao AS ds_turma
            ,	us.ds_sala AS ds_sala
            ,  LEFT(ma.anosemestre,4) AS nr_ano
            ,  ma.anosemestre AS nr_anosemestre
            ,  CONCAT(LEFT(ma.anosemestre,4),'/',RIGHT(ma.anosemestre,1)) AS nr_anosem
            
            FROM
               pessoas al
            INNER JOIN
               matriculas ma ON (ma.codigoaluno = al.cd_pessoa)
            INNER JOIN
               turmas tu ON (
                  tu.anosemestre = ma.anosemestre AND
                  tu.codigo = ma.turma AND
                  tu.curso = ma.curso
               )
            INNER JOIN
               cursos_coligadas cc ON (
                  cc.CD_CURSO = tu.curso AND
                  cc.CD_COLIGADA = tu.cd_coligada
               )
            INNER JOIN
               cursos_mestre cm ON (cm.CD_CURSO = cc.CD_CURSO)
            INNER JOIN
               pessoas rf ON (rf.cd_pessoa = al.cd_resp_finan)
            LEFT JOIN
               pessoas ra ON (ra.cd_pessoa = al.cd_resp_acad)
            LEFT JOIN
               uni_salas us ON (us.cd_sala = tu.cd_sala)
            WHERE
               1 = 1
               "" .
                  ((!empty($arrParametros["":cd_coligada""]))
                     ? ""AND tu.cd_coligada IN (:cd_coligada)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_polo""]))
                     ? ""AND ma.cd_polo IN (:cd_polo)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_departamento""]))
                     ? ""AND cc.CD_DEPTO IN (:cd_departamento)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_departamento""]))
                     ? ""AND cc.CD_DEPTO IN (:cd_departamento)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":dt_inicio""]))
                     ? ""AND ma."" . $this->arrDadosGerais->arrOpcoes->tp_filtro_data->me_configuracao . "" >= :dt_inicio""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":dt_fim""]))
                     ? ""AND ma."" . $this->arrDadosGerais->arrOpcoes->tp_filtro_data->me_configuracao . "" < DATE_ADD(:dt_fim, INTERVAL 1 DAY)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":nr_anosemestre""]))
                     ? ""AND ma.anosemestre IN (:nr_anosemestre)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":id_curso""]))
                     ? ""AND cm.ID_CURSO IN (:id_curso)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_turma""]))
                     ? ""AND ma.turma IN (:cd_turma)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_aluno""]))
                     ? ""AND al.cd_pessoa IN (:cd_aluno)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_acad""]))
                     ? ""AND ra.cd_pessoa IN (:cd_acad)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_finan""]))
                     ? ""AND rf.cd_pessoa IN (:cd_finan)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_situacao_mat""]))
                     ? ""AND ma.cd_situacao IN (:cd_situacao_mat)""
                     : NULL
                  )
               . ""
            GROUP BY
               ma.codigoaluno,
               ma.turma,
               ma.curso
            ORDER BY
               cm.DS_CURSO,
               tu.descricao,
               al.nm_pessoa
         "")
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cod_aluno"" => $arrFormatoInteiro,
                  ""cod_rf"" => $arrFormatoInteiro,
                  ""cod_ra"" => $arrFormatoInteiro
               )
            )
         )
         ->saveTo($consulta);

      // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
      $consulta
         ->pipe($this->dataStore(""dados_consulta""));

      $consulta
         ->pipe(new Group(array(
            ""by"" => array(
               ""cod_curso"",
               ""cod_turma"",
               ""nr_anosemestre""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cod_curso"",
            ""cod_turma"",
            ""nr_anosemestre""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));

				require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									
									
   }
}","<?php

   use \koolreport\widgets\koolphp\Table;
   use \koolreport\processes\Filter;

   // path pasta
   $path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

   // margens
   $ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
   $ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
   $ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
   $ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

   $sn_geracao = $_POST[""pdf""];
?>

<html>
   <head>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>

      <style>
         .borda {
            border: 1px solid #dee2e6;
         }
         .fonte {
            font-size: 11px !important;
         }
         .b {
            font-weight: bold !important;
         }
      </style>

   </head>

   <body class=""relatorio"">
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

      <?php

         foreach($this->dataStore(""dados_consulta_agrupado"") as $visualizacao)
         {
            $dados_pagina = $this->dataStore(""dados_consulta"")
               ->filter(
                  ""cod_curso"",""="",$visualizacao[""cod_curso""]
               )
               ->filter(
                  ""cod_turma"",""="",$visualizacao[""cod_turma""]
               )
               ->filter(
                  ""nr_anosemestre"",""="",$visualizacao[""nr_anosemestre""]
               );

            ?>

            <div class=""container"" style=""width: 49cm !important; max-width: 49cm !important;"">
               <div
                  class=""conteudo""
                  style=""
                     padding-top: <?=((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm'?>;
                     padding-bottom: <?=((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm'?>;
                     padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                     padding-right: <?=$ds_margem_direita . 'cm'?>;
                     ""
               >

                  <div>
                     <div
                        style=""
                           height: 140;
                           ""
                     >
                        <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'cabecalho.php')); ?>
                     </div>
                  </div>

                  <div class=""text-right"">
                     <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'filtro.php')); ?>
                  </div>

                  <div>

                     <h3 class=""text-center"" style=""margin: 1rem;"">
                        <?=$this->arrDadosGerais->nm_relatorio?>
                     </h3>

                     <table class=""table"">
                        <tr>
                           <td class=""fonte"" style=""width: 33%;"">
                              <b>Curso:</b> <?= $dados_pagina[0]['ds_curso'] ?>
                           </td>
                           <td class=""fonte"" style=""width: 33%;"">
                              <b>Turma:</b> <?= $dados_pagina[0]['ds_turma'] ?>
                           </td>
                           <td class=""fonte"" style=""width: 33%;"">
                              <b>Ano/Semestre:</b> <?= $dados_pagina[0]['nr_anosem'] ?>
                           </td>
                        </tr>
                     </table>

                     <?php

                           // componente responsavel pela criacao da tabela de dados
                           Table::create(array(
                              ""dataSource""=> $dados_pagina,
                              ""grouping""=> array(
                                 ""cod_curso""=> array(
                                    ""calculate""=>array(
                                       ""{countAlunos}""=>array(""count"",""cod_aluno"")
                                    ),
                                    ""top""=> ""<td class='borda fonte b' rowspan='2' style='text-align: center; vertical-align: middle;'>Cód.</td>
                                    <td class='borda fonte b p-2' rowspan='2' style='text-align: center; vertical-align: middle;'>Nome</td>                                    
                                    <td class='borda fonte b p-2' colspan='2' style='text-align: center;'>Telefones do Aluno</td>
                                    <td class='borda fonte b p-2' colspan='4' style='text-align: center;'>Responsável Acadêmico</td>
                                    <td class='borda fonte b p-2' colspan='4' style='text-align: center;'>Responsável Financeiro</td>
                                    <tr style='background-color: #cccccc !important;'>
                                       <td class='borda fonte b p-2' style='text-align: center;'>Tel. Res.</td>
                                       <td class='borda fonte b p-2' style='text-align: center;'>Celular</td>
                                       <td class='borda fonte b p-2' style='text-align: left;'>Nome</td>
                                       <td class='borda fonte b p-2' style='text-align: center;'>Tel. Com.</td>
                                       <td class='borda fonte b p-2' style='text-align: center;'>Tel. Res.</td>
                                       <td class='borda fonte b p-2' style='text-align: center;'>Celular</td>
                                       <td class='borda fonte b p-2' style='text-align: left;'>Nome</td>
                                       <td class='borda fonte b p-2' style='text-align: center;'>Tel. Com.</td>
                                       <td class='borda fonte b p-2' style='text-align: center;'>Tel. Res.</td>
                                       <td class='borda fonte b p-2' style='text-align: center;'>Celular</td>
                                    </tr>
                                    "",
                                    ""bottom""=>""<td colspan='12' class='borda'><b>Total de alunos: {countAlunos}</b></td>""
                                 )
                              ),
                              ""showHeader""=>false,
                              ""columns""=> array(
                                 ""cod_aluno"" => array(
                                    ""cssStyle""=> ""text-align: center""
                                 ),
                                 ""nm_aluno"" => array(
                                    ""cssStyle""=> ""text-align: left""
                                 ),
                                 ""fixo_aluno"" => array(
                                    ""cssStyle""=> ""text-align: center""
                                 ),
                                 ""cel_aluno"" => array(
                                    ""cssStyle""=> ""text-align: center""
                                 ),
                                 ""nm_ra"" => array(
                                    ""cssStyle""=> ""text-align: left""
                                 ),
                                 ""comercial_ra"" => array(
                                    ""cssStyle""=> ""text-align: center""
                                 ),
                                 ""fixo_ra"" => array(
                                    ""cssStyle""=> ""text-align: center""
                                 ),
                                 ""cel_ra"" => array(
                                    ""cssStyle""=> ""text-align: center""
                                 ),
                                 ""nm_rf"" => array(
                                    ""cssStyle""=> ""text-align: left""
                                 ),
                                 ""comercial_rf"" => array(
                                    ""cssStyle""=> ""text-align: center""
                                 ),
                                 ""fixo_rf"" => array(
                                    ""cssStyle""=> ""text-align: center""
                                 ),
                                 ""cel_rf"" => array(
                                    ""cssStyle""=> ""text-align: center""
                                 )
                              ),
                              ""cssClass""=>array(
                                 ""table""=>""table table-striped table-hover fonte"",
                                 ""tr""=>""fonte"",
                                 ""th""=>""fonte"",
                                 ""td""=>""fonte p-2"",
                                 ""tf""=>""darker fonte"",
                              ),
                              ""sorting""=> array(
                                 ""nr_aluno""=>""asc"",
                                 ""nm_aluno""=>""asc""
                              )
                           ));

                     ?>

                  </div>

                  <div
                     class=""page-footer no-screen""
                     style=""overflow: hidden;""
                  >
                     <div
                        style=""
                           text-align: right;
                           padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                           padding-right: <?=$ds_margem_direita . 'cm'?>;
                           ""
                     >
                        <hr>
                        {pageNum}/{numPages}
                     </div>
                  </div>

                  <div class=""page-break"" style=""page-break-after: always;""></div>

               </div>
            </div>

         <?php

         }

      ?>

   </body>
</html>
","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[
	{
		""tipo"": ""uni-select-coligada-filha"",
		""obrigatorio"": false,
		""label"": ""Unidade"",
		""ds_campo"": ""cd_coligada""
	},
	{
		""tipo"": ""uni-select-polo"",
		""obrigatorio"": false,
		""label"": ""Polo"",
		""ds_campo"": ""cd_polo""
	},
	{
		""tipo"": ""uni-select-departamento"",
		""obrigatorio"": false,
		""label"": ""Departamento"",
		""ds_campo"": ""cd_departamento""
	},
	{
		""tipo"": ""campo-data"",
		""obrigatorio"": false,
		""label"": ""Data inicial"",
		""ds_campo"": ""dt_inicio""
	},
	{
		""tipo"": ""campo-data"",
		""obrigatorio"": false,
		""label"": ""Data final"",
		""ds_campo"": ""dt_fim""
	},
	{
		""tipo"": ""campo-anosemestre"",
		""obrigatorio"": true,
		""label"": ""Anosemestre"",
		""ds_campo"": ""nr_anosemestre""
	},
	{
		""tipo"": ""uni-select-curso"",
		""obrigatorio"": false,
		""label"": ""Curso"",
		""ds_campo"": ""id_curso""
	},
	{
		""tipo"": ""uni-busca-turma"",
		""obrigatorio"": false,
		""label"": ""Turma"",
		""ds_campo"": ""cd_turma""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Aluno"",
		""ds_campo"": ""cd_aluno""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Responsável Acadêmico"",
		""ds_campo"": ""cd_acad""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Responsável Financeiro"",
		""ds_campo"": ""cd_finan""
	},
	{
		""tipo"": ""campo-dinamico"",
		""obrigatorio"": false,
		""label"": ""Situação da Matrícula"",
		""ds_chave"": ""busca-situacao-matricula"",
		""ds_campo"": ""cd_situacao_mat""
	}
]",60,"INSERT IGNORE INTO rgo_opcoes_tipos (
								cd_opcao_tipo,
								ds_opcao_tipo,
								ds_tag_opcao,
								dt_base
						)
				VALUES (
								NULL,""Tipo do filtro de data"",""tp_filtro_data"",""2020-04-07 14:59:54"")","INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,10,1,""16. Telefones dos Responsáveis"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,2, NULL, NULL, NULL,""2023-12-13 15:53:40"",0, NULL)","INSERT IGNORE INTO rgo_opcoes (cd_opcao, cd_relatorio,cd_opcao_tipo,sn_padrao,sn_ativo,ds_opcao,me_configuracao,ds_chave,dt_base)
VALUES (NULL,NULL,NULL,1,1,""Data de emissão da matrícula"",""dataemissao"",""rel_tel_responsaveis_filtro_data_emissao"",""2020-04-15 13:44:47""
 ); 
INSERT IGNORE INTO rgo_opcoes (cd_opcao, cd_relatorio,cd_opcao_tipo,sn_padrao,sn_ativo,ds_opcao,me_configuracao,ds_chave,dt_base)
VALUES (NULL,NULL,NULL,0,1,""Data de saída"",""datasaida"",""rel_tel_responsaveis_filtro_data_saida"",""2020-04-15 13:44:47""
 )",,522.0,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Homologação,Ata de Resultado Final,"<?php

$PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
require_once($PARMS['PASTA'] . 'nucleo.php');
require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
header('Content-type: text/html; charset=UTF-8');

use \koolreport\processes\ColumnMeta;
use \koolreport\processes\Group;
use \koolreport\processes\OnlyColumn;

// classe padrao do relatorio
class Relatorio extends \koolreport\KoolReport
{
    use \koolreport\bootstrap4\Theme;
    use \koolreport\inputs\Bindable;
    use \koolreport\inputs\POSTBinding;
    // use \koolreport\export\Exportable;
    use \koolreport\cloudexport\Exportable;

    const C_SN_CLOUD_EXPORT = true;

    public $path_include;
    public $arrDadosFiltro;
    public $arrDadosGerais;

    public function __construct()
    {

        try {

            $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
            parent::__construct();
        } catch (Exception $e) {

            echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
            die;
        }
    }

    // inicializacao dos filtros
    function defaultParamValues()
    {
        return array(
            ""filtros"" => '{}',
            ""gerais"" => '{}'
        );
    }

    // resgate do $_POST para vinculo com os parametros
    function bindParamsToInputs()
    {
        return array(
            ""filtros"",
            ""gerais""
        );
    }

    // funcao responsavel por realizar a conexao com o banco de dados
    // e resgate dos dados tratamento dos dados do $_POST
    public function settings()
    {

        Nucleo::import('relatorios.RelatoriosConexao');
        $objRelatoriosConexao = new RelatoriosConexao;

        return $objRelatoriosConexao->settings();
    }

    // funcao responsavel por manter as consultas a serem executadas pelo relatorio
    // e geracao dos array de dados para uso posterior na visualizacao
    public function setup()
    {

        require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

        if (isset($_POST['filtros'])) {
            $this->arrDadosFiltro = json_decode($_POST['filtros']);
        } else {
            $this->arrDadosFiltro = json_decode($_POST);
        }

        if (isset($_POST['gerais'])) {
            $this->arrDadosGerais = json_decode($_POST['gerais']);
        }
        $arrParametros = [];

        foreach ($this->arrDadosFiltro as $filtro => $valor) {
            if (!empty($valor->ds_valor)) {
                $arrParametros["":"" . $filtro] = $valor->ds_valor;
            }
        }
        $this->src('unimestre')->query(
            ""
                            SELECT
                                f.codigoaluno AS cd_aluno,
                                p.nm_pessoa AS nm_pessoa,
                                f.anosemestre AS nr_anosemestre,
                                LEFT ( f.anosemestre, 4 ) AS nr_ano_sem,
                                f.turma AS cd_turma,
                                f.curso AS cd_curso,
                                cm.ID_CURSO AS id_curso,
                                cm.DS_CURSO AS nm_curso,
                                f.disciplina AS cd_disciplina,
                                d.sigla AS disciplina,
                                t.descricao AS ds_turma,
                                t.cd_coligada AS cd_coligada,
                                SUM(gr.VL_VALOR) AS CH
                            FROM
                                fichaindividual AS f
                                INNER JOIN matriculas AS m ON ( m.anosemestre = f.anosemestre AND m.turma = f.turmamatricula AND m.codigoaluno = f.codigoaluno )
                                INNER JOIN situacao sit ON ( sit.cd_situacao = m.situacao )
                                INNER JOIN turmas t ON ( m.anosemestre = t.anosemestre AND t.codigo = m.turma AND t.curso = m.curso )
                                INNER JOIN cursos_mestre AS cm ON ( t.curso = cm.CD_CURSO )
                                INNER JOIN pessoas AS p ON ( p.cd_pessoa = m.codigoaluno )
                                INNER JOIN disciplinas AS d ON ( f.disciplina = d.codigo AND f.curso = d.curso )
                                INNER JOIN grades_disciplinas gr ON ( d.codigo = gr.CD_DISCIPLINA AND d.curso = gr.CD_CURSO AND gr.CD_GRADE = t.cd_grade AND gr.NR_SERIE = t.serie ) 
                            WHERE
                                1 = 1 


                                "" .
                                ((!empty($arrParametros["":cd_coligada""]))
                                    ? ""AND t.cd_coligada IN (:cd_coligada)""
                                    : NULL)
                                . ""
                                "" .
                                ((!empty($arrParametros["":nr_anosemestre""]))
                                    ? ""AND t.anosemestre IN (:nr_anosemestre)""
                                    : NULL)
                                . ""
                                "" .
                                ((!empty($arrParametros["":id_curso""]))
                                    ? ""AND cm.id_curso IN (:id_curso)""
                                    : NULL)
                                . ""
                                "" .
                                ((!empty($arrParametros["":cd_turma""]))
                                    ? ""AND m.turma IN (:cd_turma)""
                                    : NULL)
                                . ""
                                "" .
                                ((!empty($arrParametros["":cd_aluno""]))
                                    ? ""AND m.codigoaluno IN (:cd_aluno)""
                                    : NULL)
                                . ""

                            GROUP BY

                                f.anosemestre,
	                            f.turma,
	                            f.codigoaluno


                            ORDER BY p.nm_pessoa

                      ""
        )
            // aplicacao de filtro a consulta
            ->params(
                $arrParametros
            )
            // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
            // para simplificar e melhorar a apresentacao dos dados na visualizacao
            ->pipe(
                new ColumnMeta(
                    array(
                        ""cd_aluno"" => $arrFormatoInteiro
                    )
                )
            )
            ->saveTo($consulta);

        // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
        $consulta->pipe($this->dataStore(""dados_consulta""));

        $consulta->pipe(new Group(array(
            ""by"" => array(
                ""cd_curso"",
                ""cd_turma"",
                ""nr_anosemestre""
            )
        )))
            ->pipe(new OnlyColumn(array(
                ""cd_curso"",
                ""cd_turma"",
                ""nr_anosemestre""
            )))
            ->pipe($this->dataStore(""dados_consulta_agrupado""));

        $this->src('unimestre')->query(
            ""
                        SELECT
                            f.codigoaluno AS cd_aluno,
                            p.nm_pessoa AS nm_pessoa,
                            f.anosemestre AS nr_anosemestre,
                            LEFT ( f.anosemestre, 4 ) AS nr_ano_sem,
                            f.turma AS cd_turma,
                            f.curso AS cd_curso,
                            cm.ID_CURSO AS id_curso,
                            cm.DS_CURSO AS nm_curso,
                            f.disciplina AS cd_disciplina,
                            d.sigla AS disciplina,
                            t.descricao AS ds_turma,
                            t.cd_coligada AS cd_coligada,
                            SUM(gr.VL_VALOR) AS CH,
                            sit.cd_situacao AS sit,
                            sit.ds_situacao AS desc_sit 
                        FROM
                            fichaindividual AS f
                            INNER JOIN matriculas AS m ON ( m.anosemestre = f.anosemestre AND m.turma = f.turmamatricula AND m.codigoaluno = f.codigoaluno )
                            INNER JOIN situacao sit ON ( sit.cd_situacao = m.situacao )
                            INNER JOIN turmas t ON ( m.anosemestre = t.anosemestre AND t.codigo = m.turma AND t.curso = m.curso )
                            INNER JOIN cursos_mestre AS cm ON ( t.curso = cm.CD_CURSO )
                            INNER JOIN pessoas AS p ON ( p.cd_pessoa = m.codigoaluno )
                            INNER JOIN disciplinas AS d ON ( f.disciplina = d.codigo AND f.curso = d.curso )
                            INNER JOIN grades_disciplinas gr ON ( d.codigo = gr.CD_DISCIPLINA AND d.curso = gr.CD_CURSO AND gr.CD_GRADE = t.cd_grade AND gr.NR_SERIE = t.serie ) 
                        WHERE
                            1 = 1 


                            "" .
                            ((!empty($arrParametros["":cd_coligada""]))
                                ? ""AND t.cd_coligada IN (:cd_coligada)""
                                : NULL)
                            . ""
                            "" .
                            ((!empty($arrParametros["":nr_anosemestre""]))
                                ? ""AND t.anosemestre IN (:nr_anosemestre)""
                                : NULL)
                            . ""
                            "" .
                            ((!empty($arrParametros["":id_curso""]))
                                ? ""AND cm.id_curso IN (:id_curso)""
                                : NULL)
                            . ""
                            "" .
                            ((!empty($arrParametros["":cd_turma""]))
                                ? ""AND m.turma IN (:cd_turma)""
                                : NULL)
                            . ""
                            "" .
                            ((!empty($arrParametros["":cd_aluno""]))
                                ? ""AND m.codigoaluno IN (:cd_aluno)""
                                : NULL)
                            . ""

                        GROUP BY

                            f.anosemestre,
                            f.turma,
                            f.codigoaluno


                        ORDER BY p.nm_pessoa
                ""
        )
            // aplicacao de filtro a consulta
            ->params(
                $arrParametros
            )
            // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
            // para simplificar e melhorar a apresentacao dos dados na visualizacao
            ->pipe(
                new ColumnMeta(
                    array(
                        ""cd_aluno"" => $arrFormatoInteiro
                    )
                )
            )
            ->saveTo($consulta_aluno);

        // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
        $consulta_aluno->pipe($this->dataStore(""dados_alunos""));

        $this->src('unimestre')->query(
            ""
                    SELECT
                        f.codigoaluno AS cd_aluno,
                        p.nm_pessoa AS nm_pessoa,
                        f.anosemestre AS nr_anosemestre,
                        LEFT ( f.anosemestre, 4 ) AS nr_ano_sem,
                        f.turma AS cd_turma,
                        f.curso AS cd_curso,
                        cm.ID_CURSO AS id_curso,
                        cm.DS_CURSO AS nm_curso,
                        f.disciplina AS cd_disciplina,
                        d.sigla AS disciplina,
                        t.descricao AS ds_turma,
                        t.cd_coligada AS cd_coligada,
                    SUM(gr.VL_VALOR) AS CH,
                        ROUND(SUM( f.mediaFinal),1) AS Media
                        
                    FROM
                        fichaindividual AS f
                        INNER JOIN matriculas AS m ON ( m.anosemestre = f.anosemestre AND m.turma = f.turmamatricula AND m.codigoaluno = f.codigoaluno )
                        INNER JOIN situacao sit ON ( sit.cd_situacao = m.situacao )
                        INNER JOIN turmas t ON ( m.anosemestre = t.anosemestre AND t.codigo = m.turma AND t.curso = m.curso )
                        INNER JOIN cursos_mestre AS cm ON ( t.curso = cm.CD_CURSO )
                        INNER JOIN pessoas AS p ON ( p.cd_pessoa = m.codigoaluno )
                        INNER JOIN disciplinas AS d ON ( f.disciplina = d.codigo AND f.curso = d.curso )
                        INNER JOIN grades_disciplinas gr ON ( d.codigo = gr.CD_DISCIPLINA AND d.curso = gr.CD_CURSO AND gr.CD_GRADE = t.cd_grade AND gr.NR_SERIE = t.serie ) 
                    WHERE
                        1 = 1

                        "" .
                        ((!empty($arrParametros["":cd_coligada""]))
                            ? ""AND t.cd_coligada IN (:cd_coligada)""
                            : NULL)
                        . ""
                        "" .
                        ((!empty($arrParametros["":nr_anosemestre""]))
                            ? ""AND m.anosemestre IN (:nr_anosemestre)""
                            : NULL)
                        . ""
                        "" .
                        ((!empty($arrParametros["":id_curso""]))
                            ? ""AND cm.id_curso IN (:id_curso)""
                            : NULL)
                        . ""
                        "" .
                        ((!empty($arrParametros["":cd_turma""]))
                            ? ""AND m.turma IN (:cd_turma)""
                            : NULL)
                        . ""
                        "" .
                        ((!empty($arrParametros["":cd_aluno""]))
                            ? ""AND m.codigoaluno IN (:cd_aluno)""
                            : NULL)
                        . ""

                        GROUP BY
                        f.anosemestre,
                        f.disciplina,
                        f.turma
            ""
        )
            // aplicacao de filtro a consulta
            ->params(
                $arrParametros
            )
            // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
            // para simplificar e melhorar a apresentacao dos dados na visualizacao
            ->pipe(
                new ColumnMeta(
                    array(
                        ""cd_aluno"" => $arrFormatoInteiro
                    )
                )
            )
            ->saveTo($consulta_disciplina);

        // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
        $consulta_disciplina->pipe($this->dataStore(""dados_disciplina""));

        $this->src('unimestre')->query(
            ""
                                SELECT
                                    f.codigoaluno AS cd_aluno,
                                    p.nm_pessoa AS nm_pessoa,
                                    f.anosemestre AS nr_anosemestre,
                                    LEFT ( f.anosemestre, 4 ) AS nr_ano_sem,
                                    f.turma AS cd_turma,
                                    f.curso AS cd_curso,
                                    cm.ID_CURSO AS id_curso,
                                    cm.DS_CURSO AS nm_curso,
                                    f.disciplina AS cd_disciplina,
                                    d.sigla AS disciplina,
                                    t.descricao AS ds_turma,
                                    t.cd_coligada AS cd_coligada,
                                    IFNULL(ROUND( SUM( f.mediaFinal ), 1 ),'-') AS Media,
                                    gr.VL_VALOR AS ch_disc
                                FROM
                                    fichaindividual AS f
                                    INNER JOIN matriculas AS m ON ( m.anosemestre = f.anosemestre AND m.turma = f.turmamatricula AND m.codigoaluno = f.codigoaluno )
                                    INNER JOIN situacao sit ON ( sit.cd_situacao = m.situacao )
                                    INNER JOIN turmas t ON ( m.anosemestre = t.anosemestre AND t.codigo = m.turma AND t.curso = m.curso )
                                    INNER JOIN cursos_mestre AS cm ON ( t.curso = cm.CD_CURSO )
                                    INNER JOIN pessoas AS p ON ( p.cd_pessoa = m.codigoaluno )
                                    INNER JOIN disciplinas AS d ON ( f.disciplina = d.codigo AND f.curso = d.curso )
                                    INNER JOIN grades_disciplinas gr ON (
                                        d.codigo = gr.CD_DISCIPLINA 
                                        AND d.curso = gr.CD_CURSO 
                                        AND gr.CD_GRADE = t.cd_grade 
                                        AND gr.NR_SERIE = t.serie 
                                    ) 
                                WHERE
                                    1 = 1

                                "" .
                                ((!empty($arrParametros["":cd_coligada""]))
                                    ? ""AND t.cd_coligada IN (:cd_coligada)""
                                    : NULL)
                                . ""
                                "" .
                                ((!empty($arrParametros["":nr_anosemestre""]))
                                    ? ""AND m.anosemestre IN (:nr_anosemestre)""
                                    : NULL)
                                . ""
                                "" .
                                ((!empty($arrParametros["":id_curso""]))
                                    ? ""AND cm.id_curso IN (:id_curso)""
                                    : NULL)
                                . ""
                                "" .
                                ((!empty($arrParametros["":cd_turma""]))
                                    ? ""AND m.turma IN (:cd_turma)""
                                    : NULL)
                                . ""
                                "" .
                                ((!empty($arrParametros["":cd_aluno""]))
                                    ? ""AND m.codigoaluno IN (:cd_aluno)""
                                    : NULL)
                                . ""

                            GROUP BY
                            f.anosemestre,
                            f.turma,
                            f.codigoaluno,
                            f.disciplina
            ""
        )
            // aplicacao de filtro a consulta
            ->params(
                $arrParametros
            )
            // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
            // para simplificar e melhorar a apresentacao dos dados na visualizacao
            ->pipe(
                new ColumnMeta(
                    array(
                        ""cd_aluno"" => $arrFormatoInteiro
                    )
                )
            )
            ->saveTo($consulta_media);

        // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
        $consulta_media->pipe($this->dataStore(""dados_media""));


        $this->src('unimestre')->query(
            ""
                        SELECT
                            f.codigoaluno AS cd_aluno,
                            p.nm_pessoa AS nm_pessoa,
                            f.anosemestre AS nr_anosemestre,
                            LEFT ( f.anosemestre, 4 ) AS nr_ano_sem,
                            f.turma AS cd_turma,
                            f.curso AS cd_curso,
                            cm.ID_CURSO AS id_curso,
                            cm.DS_CURSO AS nm_curso,
                            f.disciplina AS cd_disciplina,
                            d.sigla AS disciplina,
                            t.descricao AS ds_turma,
                            t.cd_coligada AS cd_coligada,
                            gr.VL_VALOR as ch_disc
                            
                        FROM
                            fichaindividual AS f
                            INNER JOIN matriculas AS m ON ( m.anosemestre = f.anosemestre AND m.turma = f.turmamatricula AND m.codigoaluno = f.codigoaluno )
                            INNER JOIN situacao sit ON ( sit.cd_situacao = m.situacao )
                            INNER JOIN turmas t ON ( m.anosemestre = t.anosemestre AND t.codigo = m.turma AND t.curso = m.curso )
                            INNER JOIN cursos_mestre AS cm ON ( t.curso = cm.CD_CURSO )
                            INNER JOIN pessoas AS p ON ( p.cd_pessoa = m.codigoaluno )
                            INNER JOIN disciplinas AS d ON ( f.disciplina = d.codigo AND f.curso = d.curso )
                            INNER JOIN grades_disciplinas gr ON ( d.codigo = gr.CD_DISCIPLINA AND d.curso = gr.CD_CURSO AND gr.CD_GRADE = t.cd_grade AND gr.NR_SERIE = t.serie ) 
                        WHERE
                        1 = 1

                        "" .
                        ((!empty($arrParametros["":cd_coligada""]))
                            ? ""AND t.cd_coligada IN (:cd_coligada)""
                            : NULL)
                        . ""
                        "" .
                        ((!empty($arrParametros["":nr_anosemestre""]))
                            ? ""AND m.anosemestre IN (:nr_anosemestre)""
                            : NULL)
                        . ""
                        "" .
                        ((!empty($arrParametros["":id_curso""]))
                            ? ""AND cm.id_curso IN (:id_curso)""
                            : NULL)
                        . ""
                        "" .
                        ((!empty($arrParametros["":cd_turma""]))
                            ? ""AND m.turma IN (:cd_turma)""
                            : NULL)
                        . ""
                        "" .
                        ((!empty($arrParametros["":cd_aluno""]))
                            ? ""AND m.codigoaluno IN (:cd_aluno)""
                            : NULL)
                        . ""

                        GROUP BY
                
                        f.anosemestre,
                        f.disciplina,
                        f.turma
            ""
        )
            // aplicacao de filtro a consulta
            ->params(
                $arrParametros
            )
            // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
            // para simplificar e melhorar a apresentacao dos dados na visualizacao
            ->pipe(
                new ColumnMeta(
                    array(
                        ""cd_aluno"" => $arrFormatoInteiro
                    )
                )
            )
            ->saveTo($consulta_ch);

        // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
        $consulta_ch->pipe($this->dataStore(""dados_ch""));


				require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									
									
    }
}
","<?php

use \koolreport\widgets\koolphp\Table;
use \koolreport\processes\Filter;

// path pasta
$path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

// margens
$ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
$ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
$ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
$ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

$sn_geracao = $_POST[""pdf""];

//cabecalho
foreach ($this->dataStore(""dados_cabecalhos"") as $cabecalho) {
    if (
        ($cabecalho[""cd_coligada""] == $this->dataStore(""dados_consulta"")[0][""cd_coligada_cabecalho""]
            && $cabecalho[""cd_relatorio""] == $this->arrDadosGerais->cd_relatorio)
        ||
        ($cabecalho[""cd_coligada""] == 0
            && $cabecalho[""cd_relatorio""] == 0)
    ) {

        $logo = $cabecalho[""ds_link_cdn""];
        break;
    }
}

?>

<html>

<head>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
</head>

<body class=""relatorio"">
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

    <?php

    foreach ($this->dataStore(""dados_consulta_agrupado"") as $visualizacao) {

        $dados_pagina = $this->dataStore(""dados_consulta"")
            ->filter(
                ""cd_curso"",
                ""="",
                $visualizacao[""cd_curso""]
            )
            ->filter(
                ""cd_turma"",
                ""="",
                $visualizacao[""cd_turma""]
            )
            ->filter(
                ""nr_anosemestre"",
                ""="",
                $visualizacao[""nr_anosemestre""]
            );

        $dados_alunos = $this->dataStore(""dados_alunos"")
            ->filter(
                ""cd_curso"",
                ""="",
                $visualizacao[""cd_curso""]
            )
            ->filter(
                ""cd_turma"",
                ""="",
                $visualizacao[""cd_turma""]
            )
            ->filter(
                ""nr_anosemestre"",
                ""="",
                $visualizacao[""nr_anosemestre""]
            );

        $dados_disc = $this->dataStore(""dados_disciplina"")
            ->filter(
                ""cd_curso"",
                ""="",
                $visualizacao[""cd_curso""]
            )
            ->filter(
                ""cd_turma"",
                ""="",
                $visualizacao[""cd_turma""]
            )
            ->filter(
                ""nr_anosemestre"",
                ""="",
                $visualizacao[""nr_anosemestre""]
            );

        $dados_ch = $this->dataStore(""dados_ch"")
            ->filter(
                ""cd_curso"",
                ""="",
                $visualizacao[""cd_curso""]
            )
            ->filter(
                ""cd_turma"",
                ""="",
                $visualizacao[""cd_turma""]
            )
            ->filter(
                ""nr_anosemestre"",
                ""="",
                $visualizacao[""nr_anosemestre""]
            );

        $dados_med = $this->dataStore(""dados_media"")
            ->filter(
                ""cd_curso"",
                ""="",
                $visualizacao[""cd_curso""]
            )
            ->filter(
                ""cd_turma"",
                ""="",
                $visualizacao[""cd_turma""]
            )
            ->filter(
                ""nr_anosemestre"",
                ""="",
                $visualizacao[""nr_anosemestre""]
            );

    ?>

        <div class=""container"">

            <img style=""
               max-height: 120px;
               max-width: 100%;
                  display: none;
                  "" src=""<?= $logo ?>"">

            <div class=""conteudo"" style=""
               padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
               padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
               padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
               padding-right: <?= $ds_margem_direita . 'cm' ?>;
                  "">
                <div>
                    <div class=""page-header"" style=""
                  height: 80;
                  text-align:center !important; 
                  "">
                        <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'cabecalho.php')); ?>
                    </div>
                </div>
                <!-- 
              <div>
                 <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'filtro.php')); ?>
                </div> -->
                <br/><br/><br/>
                <div class=""text-center mt-4 mb-4"">
                    <h2><b><?= $this->arrDadosGerais->nm_relatorio ?> </b></h2>
                </div>

                <table class=""table mt-2"">
                    <tr>
                        <td style=""width: 25%; border-bottom: 1px solid #dee2e6;"">
                            <b>Curso:</b> <?= $dados_pagina[0]['nm_curso'] ?>
                        </td>
                        <td style=""width: 25%; border-bottom: 1px solid #dee2e6;"">
                            <b>Turma:</b> <?= $dados_pagina[0]['ds_turma'] ?>
                        </td>
                        <td style=""width: 25%; border-bottom: 1px solid #dee2e6;"">
                            <b>CH:</b> <?= $dados_pagina[0]['CH'] ?>
                        </td>
                        <td style=""width: 25%; border-bottom: 1px solid #dee2e6;"">
                            <b>Ano/Semestre:</b> <?= $dados_pagina[0]['nr_ano_sem'] ?>
                        </td>
                    </tr>
                </table>

                <table class=""table table-striped"">
                    <tr>
                    <td style=""background-color: #dee2e6 !important; font-weight: bold !important; font-size: 10px !important; text-align: left; padding: 0.5rem !important;"">Nome do Aluno:</td>
                        <?php
                        foreach ($dados_disc as $key => $disc) {
                        ?>
                            <td style=""background-color: #dee2e6 !important; font-weight: bold !important; font-size: 10px !important; text-align: center; padding: 0.5rem !important;"">
                                <?php echo $disc['disciplina'] ?>
                            </td>

                        <?php
                        }
                        ?>

                    </tr>

                    <tr>
                    <td style=""background-color: #dee2e6 !important; font-weight: bold !important; font-size: 10px !important; text-align: left; padding: 0.5rem !important;"">Carga Horária:</td>
                        <?php
                        foreach ($dados_ch as $key => $ch) {
                        ?>
                            <td style=""background-color: #dee2e6 !important; font-weight: bold !important; font-size: 10px !important; text-align: center; padding: 0.5rem !important;"">
                                <?php echo 'CH: '.$ch['ch_disc'] ?>
                            </td>

                        <?php
                        }
                        ?>

                    </tr>

                    <?php
                    foreach ($dados_alunos as $key => $aluno) {
                    ?>
                        <tr>
                            <td style=""font-size: 10px !important; text-align: left; padding: 0.5rem !important;"">
                             <?php echo strtoupper($aluno['nm_pessoa']) ?>
                            </td>
                            <?php
                            if($aluno['sit'] == 7) {
                            ?>
                            <td colspan=""200"" style=""text-align: center;""><?php echo $aluno['desc_sit'] ?></td>
                            <?php
                            }
                            else {
                            foreach ($dados_disc as $key => $disc) {
                            ?>
                                <td style=""font-size: 10px !important; text-align: center; padding: 0.5rem !important;"">
                                    <?php
                                    foreach ($dados_med  as $key => $media) {

                                        if ($media[""cd_aluno""] == $aluno[""cd_aluno""] && $media[""cd_disciplina""] == $disc[""cd_disciplina""]) {
                                    ?>

                                            <?php echo $media['Media'] ?>

                                    <?php
                                        }
                                    }
                                    ?>
                                </td>
                            <?php
                            }
                        }
                            ?>
                        </tr>
                    <?php
                    }
                    ?>
                </table>
            </div>
        </div>
    <?php
    }
    ?>
</body>

</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();
","[
	{
		""tipo"": ""uni-select-coligada-filha"",
		""obrigatorio"": false,
		""label"": ""Unidade"",
		""ds_campo"": ""cd_coligada""
	},
	{
		""tipo"": ""campo-anosemestre"",
		""obrigatorio"": false,
		""label"": ""Anosemestre"",
		""ds_campo"": ""nr_anosemestre""
	},
	{
		""tipo"": ""uni-select-curso"",
		""obrigatorio"": false,
		""label"": ""Curso"",
		""ds_campo"": ""id_curso""
	},
	{
		""tipo"": ""uni-busca-turma"",
		""obrigatorio"": false,
		""label"": ""Turma"",
		""ds_campo"": ""cd_turma""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Aluno"",
		""ds_campo"": ""cd_aluno""
	}
]",61,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,10,1,""Ata de Resultado Final"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,2, NULL, NULL, NULL,""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Homologação,Relatório Modelo - Retrato,"<?php
$PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..','..','..','')),'SEGURO' => false, 'NO-SESSION' => true);
require_once($PARMS['PASTA'] . 'nucleo.php');
require_once join(DIRECTORY_SEPARATOR, array('..','..','..','vendor','koolreport','core','autoload.php'));
header('Content-type: text/html; charset=UTF-8');

use \koolreport\processes\ColumnMeta;
use \koolreport\processes\Group;
use \koolreport\processes\OnlyColumn;

// classe padrao do relatorio
class Relatorio extends \koolreport\KoolReport
{
   use \koolreport\bootstrap4\Theme;
   use \koolreport\inputs\Bindable;
   use \koolreport\inputs\POSTBinding;
   use \koolreport\export\Exportable;
use \koolreport\cloudexport\Exportable;

    const C_SN_CLOUD_EXPORT = true;

   public $path_include;
   public $arrDadosFiltro;
   public $arrDadosGerais;

   public function __construct()
   {

      try {
         $this->path_include = join(DIRECTORY_SEPARATOR, array('..','..','..','projetos','relatorios',''));
         parent::__construct();
      } catch (Exception $e) {
         echo 'Exceção capturada: ', $e->getMessage(), ""\n"";
         die;
      }
      
   }

   // inicializacao dos filtros
   function defaultParamValues()
   {
      return array(
         ""filtros"" => '{}',
         ""gerais"" => '{}'
      );
   }

   // resgate do $_POST para vinculo com os parametros
   function bindParamsToInputs()
   {
      return array(
         ""filtros"",
         ""gerais""
      );
   }

   // funcao responsavel por realizar a conexao com o banco de dados
   // e resgate dos dados tratamento dos dados do $_POST
   public function settings()
   {

      Nucleo::import('relatorios.RelatoriosConexao');
      $objRelatoriosConexao = new RelatoriosConexao;
      return $objRelatoriosConexao->settings();

   }

   // funcao responsavel por manter as consultas a serem executadas pelo relatorio
   // e geracao dos array de dados para uso posterior na visualizacao
   public function setup()
   {

      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','formatos.php'));

      if (ctype_xdigit($_POST[""filtros""])) {
         $_POST[""filtros""] = hex2bin($_POST[""filtros""]);
      }

      if (ctype_xdigit($_POST[""gerais""])) {
         $_POST[""gerais""] = hex2bin($_POST[""gerais""]);
      }

      if (isset($_POST['filtros'])) {
         $this->arrDadosFiltro = json_decode($_POST['filtros']);
      } else {
         $this->arrDadosFiltro = json_decode($_POST);
      }

      if (isset($_POST['gerais'])) {
         $this->arrDadosGerais = json_decode($_POST['gerais']);
      }

      $arrParametros = [];

      foreach ($this->arrDadosFiltro as $filtro => $valor) {
         if (!empty($valor->ds_valor)) {
            $arrParametros["":"" . $filtro] = $valor->ds_valor;
         }
      }

      $this->src('unimestre')->query(
         ""
            SELECT
               t.cd_coligada AS cd_coligada_cabecalho
            ,  m.codigoaluno AS cod_aluno
            ,  m.anosemestre AS nr_anosemestre
            ,  cm.CD_CURSO AS curso
            ,  cm.DS_CURSO AS ds_curso
            ,  t.descricao AS ds_turma
            ,  p.nm_pessoa AS nm_aluno
            ,  CONCAT(LEFT(m.anosemestre,4),'/',RIGHT(m.anosemestre,1)) AS nr_ano_sem
            ,  resp.cd_pessoa AS cod_resp
            ,  resp.nm_pessoa AS resp_nome
            ,  GET_INFO_RESP(resp.cd_pessoa) AS info_resp
            ,  t.codigo AS cod_turma
            ,  tur.descricao AS turno
            ,  sit.ds_situacao AS situacao
            FROM
               pessoas p
            INNER JOIN
               matriculas m ON ( p.cd_pessoa = m.codigoaluno )
            INNER JOIN 
               situacao sit ON (sit.cd_situacao = m.situacao)
            INNER JOIN 
               cursos_mestre cm ON ( m.curso = cm.CD_CURSO )
            INNER JOIN 
               turmas t ON ( t.anosemestre = m.anosemestre AND t.codigo = m.turma AND t.curso = m.curso )
            INNER JOIN 
               turnos tur ON (t.turno = tur.codigo)
            INNER JOIN 
               coligadas col ON ( t.cd_coligada = col.cd_coligada )
            "" .
               ($this->arrDadosGerais->arrOpcoes->tp_responsavel->me_configuracao == ""resp_finan"" 
                  ? ""INNER JOIN pessoas resp ON (p.cd_resp_finan = resp.cd_pessoa)"" 
                  : ""INNER JOIN pessoas resp ON (p.cd_resp_acad = resp.cd_pessoa)""
               )
            . ""
            WHERE
               1 = 1
            "" .
               ((!empty($arrParametros["":cd_polo""])) 
                  ? ""AND m.cd_polo IN (:cd_polo)"" 
                  : NULL
               ) 
            . ""
            "" . 
               ((!empty($arrParametros["":cd_coligada""])) 
                  ? ""AND t.cd_coligada IN (:cd_coligada)"" 
                  : NULL
               ) 
            . ""
            "" . 
               ((!empty($arrParametros["":nr_anosemestre""])) 
                  ? ""AND m.anosemestre IN (:nr_anosemestre)"" 
                  : NULL
               ) 
            . ""
            "" . 
               ((!empty($arrParametros["":id_curso""])) 
                  ? ""AND cm.ID_CURSO IN (:id_curso)"" 
                  : NULL
               ) 
            . ""
            "" . 
               ((!empty($arrParametros["":cd_turma""])) 
                  ? ""AND m.turma IN (:cd_turma)"" 
                  : NULL
               ) 
            . ""
            "" . 
               ((!empty($arrParametros["":cd_aluno""])) 
                  ? ""AND m.codigoaluno IN (:cd_aluno)"" 
                  : NULL
               ) 
            . ""
            "" . 
               ((!empty($arrParametros["":cd_situacao_mat""])) 
                  ? ""AND m.situacao IN (:cd_situacao_mat)"" 
                  : NULL
               ) 
            . ""
            GROUP BY 
               t.codigo
            ,  resp.cd_pessoa
            ,  m.codigoaluno
            ORDER BY
               cm.DS_CURSO
            ,  t.descricao
            ,  resp.nm_pessoa
         ""
      )
      // aplicacao de filtro a consulta
      ->params($arrParametros)
      // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
      // para simplificar e melhorar a apresentacao dos dados na visualizacao
      ->pipe(new ColumnMeta(array(
         ""cod_aluno"" => $arrFormatoInteiro,
         ""cod_resp"" => $arrFormatoInteiro
      )))
      ->saveTo($consulta);

      // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
      $consulta->pipe($this->dataStore(""dados_consulta"")->sort(array(
         ""cod_turma"" => ""asc"",
         ""resp_nome"" => ""asc""
      )));

      $consulta->pipe(new Group(array(
         ""by"" => array(
            ""curso"",
            ""nr_anosemestre"",
            ""cod_turma""
         )
      )))
      ->pipe($this->dataStore(""dados_consulta_agrupado"")->sort(array(
         ""cod_turma"" => ""asc"",
         ""resp_nome"" => ""asc""
      )));

      $this->src('unimestre')->query(
         ""
            SELECT
               us.cd_pessoa AS cod_usuario
            ,  us.nm_pessoa AS nm_usuario
            ,  IFNULL(rl.ds_chave,'------') AS ds_chave_rel
            FROM
               pessoas us
            INNER JOIN
               rgo_logs_impressoes rli ON (rli.cd_pessoa = us.cd_pessoa)
            INNER JOIN
               rgo_relatorios rl ON (rl.cd_relatorio = rli.cd_relatorio)
            WHERE
               rli.cd_relatorio = "" . $this->arrDadosGerais->cd_relatorio . ""
            ORDER BY
               rli.dt_impressao DESC
            LIMIT 1
         ""
      )
      ->saveTo($dados_footer);

      $dados_footer->pipe($this->dataStore(""dados_rodape""));

require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									

   }
}","<?php

use \koolreport\widgets\koolphp\Table;
use \koolreport\processes\Filter;

// path pasta
$path_include = join(DIRECTORY_SEPARATOR, array('..','..','..','projetos','relatorios',''));

// margens
$ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
$ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
$ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
$ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

//usuario impressao
$usuario = $this->dataStore(""dados_rodape"")[0][""nm_usuario""];

//chave relatorio
$chave_relatorio = $this->dataStore(""dados_rodape"")[0][""ds_chave_rel""];

$sn_geracao = $_POST[""pdf""];

?>

<html>

   <head>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','dados_head.php')); ?>
   </head>

   <style>
      .totalizador {
         min-height: 0cm !important;
      }
      .fonte {
         font-size: 11px !important;
      }
      .b {
         font-weight: bold !important;
      }
      ul li {
         font-size: 11px !important;
      }
      .rodape {
         font-size: 9px !important;
      }
   </style>

   <body class=""relatorio"">

      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','loader.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','barra_superior.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','css.php')); ?>

      <?php

      foreach ($this->dataStore(""dados_consulta_agrupado"") as $visualizacao) {
         $dados_pagina = $this->dataStore(""dados_consulta"")
            ->filter(
               ""cod_turma"",""="",$visualizacao[""cod_turma""]
            )
            ->filter(
               ""nr_anosemestre"",""="",$visualizacao[""nr_anosemestre""]
            )
            ->filter(
               ""curso"",""="",$visualizacao[""curso""]
            );

      ?>

      <div class=""container"">
         <div class=""conteudo"" style=""
            padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
            padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
            padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
            padding-right: <?= $ds_margem_direita . 'cm' ?>;
            min-height: 28.1cm;
         "">

            <div style=""vertical-align: top; min-height: 100;"">

               <table style=""width: 100%;"">
                  <tr>
                     <td style=""text-align: left; width: 55%;"">
                        <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','cabecalho.php')); ?>
                     </td>
                     <td style=""text-align: right; max-width: 45%;"">
                        <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','filtro.php')); ?>
                     </td>
                  </tr>
               </table>

            </div>

            <div>

               <h5 class=""text-center"" style=""margin: 0.25rem;"">
                  <?= $this->arrDadosGerais->nm_relatorio ?>
               </h5>

               <table class=""table mb-2"">
                  <tr>
                     <td class=""fonte p-1"" style=""width: 33%; border-bottom: 1px solid #dee2e6;"">
                        <b>Curso:</b> <?= $dados_pagina[0]['ds_curso'] ?>
                     </td>
                     <td class=""fonte p-1"" style=""width: 33%; border-bottom: 1px solid #dee2e6;"">
                        <b>Turma:</b> <?= $dados_pagina[0]['ds_turma'] ?>
                     </td>
                     <td class=""fonte p-1"" style=""width: 33%; border-bottom: 1px solid #dee2e6;"">
                        <b>Ano/Semestre:</b> <?= $dados_pagina[0]['nr_ano_sem'] ?>
                     </td>
                  </tr>
               </table>

               <?php

               // componente responsavel pela criacao da tabela de dados
               Table::create(array(
                  ""dataSource""=>$dados_pagina,
                  ""grouping""=>array(
                     ""ds_turma""=>array(
                        ""top""=>""<td class='p-1' align='center'><b>Matrícula</b></td>
                           <td class='p-1'><b>Aluno</b></td>
                           <td class='p-1' align='center'><b>Turma</b></td>
                           <td class='p-1' align='center'><b>Situação</b></td>
                        ""
                     )
                  ),
                  ""showHeader""=>false,
                  ""showFooter""=>false,
                  ""columns""=>array(
                     ""cod_aluno""=>array(
                        ""cssStyle""=>""text-align: center;""
                     ),
                     ""nm_aluno""=>array(
                        ""cssStyle""=>""text-align: left;""
                     ),
                     ""cod_turma""=>array(
                        ""cssStyle""=>""text-align: center;""
                     ),
                     ""situacao""=>array(
                        ""cssStyle""=>""text-align: center;""
                     )
                  ),
                  ""cssClass""=>array(
                     ""table""=>""table table-striped table-hover"",
                     ""tr""=>"""",
                     ""th""=>"""",
                     ""td""=>""p-1 fonte"",
                     ""tf""=>""darker"",
                  ),
                  ""sorting""=>array(
                     ""nm_aluno""=>""asc""
                  )
               ));

               ?>

            </div>

         </div>

         <div style=""text-align: right; padding-left: <?= $ds_margem_esquerda . 'cm' ?>;padding-right: <?= $ds_margem_direita . 'cm' ?>;"">
            <hr>
            <div class=""float-left rodape text-left"" style=""width: 80%; vertical-align: middle !important;"">
               <img class=""float-left"" src=""https://sinergia.unimestre.com/arquivo/cliente/imagens/logo_rodape_unimestre_v3"" alt="""">
               <div class=""ml-3 float-left rodape"">Impresso por: <?= $usuario ?> - <?= $chave_relatorio ?></div>
            </div>
            <div class=""float-right rodape text-right"" style=""width: 20%;"">
               Pág. 1/10
            </div>
         </div>

      </div>
      
      <?php

      }

      ?>

   </body>

</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[
	{
		""tipo"": ""uni-select-polo"",
		""obrigatorio"": false,
		""label"": ""Polo"",
		""ds_campo"": ""cd_polo""
	},
	{
		""tipo"": ""uni-select-coligada-filha"",
		""obrigatorio"": false,
		""label"": ""Unidade"",
		""ds_campo"": ""cd_coligada""
	},
	{
		""tipo"": ""campo-anosemestre"",
		""obrigatorio"": true,
		""label"": ""Ano/semestre"",
		""ds_campo"": ""nr_anosemestre""
	},
	{
		""tipo"": ""uni-select-curso"",
		""obrigatorio"": false,
		""label"": ""Curso"",
		""ds_campo"": ""id_curso""
	},
	{
		""tipo"": ""uni-busca-turma"",
		""obrigatorio"": false,
		""label"": ""Turma"",
		""ds_campo"": ""cd_turma""
	},
	{
		""tipo"": ""campo-dinamico"",
		""obrigatorio"": false,
		""label"": ""Situação"",
		""ds_chave"": ""busca-situacao-matricula"",
		""ds_campo"": ""cd_situacao_mat""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Aluno"",
		""ds_campo"": ""cd_aluno""
	}
]",66,"INSERT IGNORE INTO rgo_opcoes_tipos (
								cd_opcao_tipo,
								ds_opcao_tipo,
								ds_tag_opcao,
								dt_base
						)
				VALUES (
								NULL,""Responsável"",""tp_responsavel"",""2021-11-09 16:20:56"")","INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,10,1,""Relatório Modelo - Retrato"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL, NULL, NULL, NULL,""rel_modelo_retrato"",""2023-12-13 15:53:40"",0, NULL)","INSERT IGNORE INTO rgo_opcoes (cd_opcao, cd_relatorio,cd_opcao_tipo,sn_padrao,sn_ativo,ds_opcao,me_configuracao,ds_chave,dt_base)
VALUES (NULL,NULL,NULL,1,1,""Responsável Financeiro"",""resp_finan"",""rel_lista_resp_com_end_finan_66"",""2021-10-05 15:42:09""
 ); 
INSERT IGNORE INTO rgo_opcoes (cd_opcao, cd_relatorio,cd_opcao_tipo,sn_padrao,sn_ativo,ds_opcao,me_configuracao,ds_chave,dt_base)
VALUES (NULL,NULL,NULL,0,1,""Responsável Acadêmico"",""resp_acad"",""rel_lista_resp_com_end_acad_66"",""2021-10-05 15:42:17""
 )",,506.0,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Homologação,Histórico Escolar - Ensino Médio - 1,"<?php

   $PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
   require_once( $PARMS['PASTA'] . 'nucleo.php' );
   require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
   header ('Content-type: text/html; charset=UTF-8');

   use \koolreport\processes\ColumnMeta;
   use \koolreport\processes\Group;
   use \koolreport\processes\OnlyColumn;

   // classe padrao do relatorio
   class Relatorio extends \koolreport\KoolReport {
      use \koolreport\bootstrap4\Theme;
      use \koolreport\inputs\Bindable;
      use \koolreport\inputs\POSTBinding;
      use \koolreport\export\Exportable;
      use \koolreport\cloudexport\Exportable;

   const C_SN_CLOUD_EXPORT = true;

      public $path_include;
      public $arrDadosFiltro;
      public $arrDadosGerais;

      public function __construct() {

         try {

            $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
            parent::__construct();

         } catch (Exception $e) {

            echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
            die;

         }

      }

      // inicializacao dos filtros
      function defaultParamValues() {
         return array(
            ""filtros""=>'{}',
            ""gerais""=>'{}'
         );
      }

      // resgate do $_POST para vinculo com os parametros
      function bindParamsToInputs() {
         return array(
            ""filtros"",
            ""gerais""
         );
      }

      // funcao responsavel por realizar a conexao com o banco de dados
      // e resgate dos dados tratamento dos dados do $_POST
      public function settings() {

         Nucleo::import( 'relatorios.RelatoriosConexao' );
         $objRelatoriosConexao = new RelatoriosConexao;

         return $objRelatoriosConexao->settings();

      }

      // funcao responsavel por manter as consultas a serem executadas pelo relatorio
      // e geracao dos array de dados para uso posterior na visualizacao
      public function setup() {

         require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

         if (isset($_POST['filtros'])) {
            $this->arrDadosFiltro = json_decode($_POST['filtros']);
         } else {
            $this->arrDadosFiltro = json_decode($_POST);
         }

         if (isset($_POST['gerais'])) {
            $this->arrDadosGerais = json_decode($_POST['gerais']);
         }

         $arrParametros = [];

         foreach ($this->arrDadosFiltro as $filtro => $valor) {
            if (!empty($valor->ds_valor)) {
                $arrParametros["":"" . $filtro] = $valor->ds_valor;
            }
         }

         $this->src('unimestre')->query(
            ""
               SELECT
               
                  tu.cd_coligada AS cd_coligada_cabecalho
               ,	al.cd_pessoa AS cod_aluno
               ,	al.nm_pessoa AS nm_aluno
               ,	al.ds_cidade_nascimento AS ds_cidade_nasc
               ,	al.ds_estado_nascimento AS ds_estado_nasc
               ,	al.ds_nacionalidade AS ds_nacionalidade
               ,	al.ds_sexo AS ds_sexo_aluno
               ,	IF(al.ds_sexo = 'M','o','a') AS ds_a_o
               ,	al.ds_identidade AS ds_rg_aluno
               ,	al.ds_identidade_orgao_exp AS ds_rg_orgao_exp_aluno
               ,  CONCAT(MID(al.ds_cpf,1,3),'.',MID(al.ds_cpf,4,3),'.',MID(al.ds_cpf,7,3),'-',MID(al.ds_cpf,10,2)) AS ds_cpf_aluno
               ,	IFNULL(mae.nm_pessoa,'') AS ds_nome_mae
               ,	IFNULL(pai.nm_pessoa,'') AS ds_nome_pai
               ,	DATE_FORMAT(al.dt_nascimento,'%d/%m/%Y') AS dt_nascimento
               ,	fi.turma AS cod_turma_ficha
               ,	fi.curso AS cod_curso
               ,	di.codigo AS cod_disciplina
               ,	di.descricao AS ds_disciplina
               ,	fi.serie AS nr_serie_ficha
               ,	fi.anosemestre AS nr_anosem_ficha
               ,	IF(fi.situacao NOT IN (3,4,5,6,7,8),IF(fi.carga_horaria IS NULL OR fi.carga_horaria = 0, gd.VL_VALOR, fi.carga_horaria), gd.VL_VALOR) AS vl_ch
               ,	IF(fi.ds_media IS NOT NULL AND fi.ds_media <> '' AND fi.turma = 'HISTORICO', IF(ROUND(fi.ds_media,1) = '10.0','10',ROUND(fi.ds_media,1)), IF(fi.mediaFinal IS NULL, '***',IF(fi.mediaFinal = 0, '', IF(fi.mediaFinal = -1, 'DISP', IF(fi.mediaFinal = -2, '****', IF(ROUND(fi.mediaFinal,1) = '10.0','10',ROUND(fi.mediaFinal,1))))))) AS ds_media
               ,	dc.cd_categoria AS cod_categoria_disc
               ,	dc.ds_categoria AS ds_categoria_disc
               ,	IF(hes.ano IS NULL OR hes.ano = 0, LEFT(fi.anosemestre,4), hes.ano) AS nr_ano
               ,	sit.ds_situacao AS ds_situacao_ficha
               ,	hist_obs.observacao AS ds_obs_hist
               ,	IF(fi.serie = 9 AND fi.situacao = 0, al.nm_pessoa, '____________') AS ds_nome_cert
               ,	IF(fi.serie = 9 AND fi.situacao = 0, CONCAT(al.ds_identidade,', ',al.ds_identidade_orgao_exp), '____________') AS ds_inden_cert
               ,	IF(fi.serie = 9 AND fi.situacao = 0, cm.DS_CURSO, '____________') AS ds_curso_cert
               ,	col.ds_cidade AS ds_cidade_coligada
               ,	CONCAT(DAY(CURDATE()),' de ',
                  CASE MONTH(CURDATE())
                     WHEN 01 THEN 'Janeiro'
                     WHEN 02 THEN 'Fevereiro'
                     WHEN 03 THEN 'Março'
                     WHEN 04 THEN 'Abril'
                     WHEN 05 THEN 'Maio'
                     WHEN 06 THEN 'Junho'
                     WHEN 07 THEN 'Julho'
                     WHEN 08 THEN 'Agosto'
                     WHEN 09 THEN 'Setembro'
                     WHEN 10 THEN 'Outubro'
                     WHEN 11 THEN 'Novembro'
                     WHEN 12 THEN 'Dezembro'
                  END,' de ',YEAR(CURDATE())
                  ) AS dt_atual
               ,	col.me_secretaria AS ds_secretaria_coligada
               ,	col.ds_ato_secretaria AS ds_ato_secretaria_coligada
               ,	col.nm_diretor_geral AS ds_diretor_coligada
               ,	col.ds_ato_direto AS ds_ato_diretor_coligada
               ,  IFNULL(di.ordem, 1) AS nr_ordem

               ,	IFNULL(IFNULL(media_hist_1.media, media_turma_1.media),'***') AS ds_media_1
               ,	IFNULL(media_hist_1.nr_ano, media_turma_1.nr_ano) AS ds_ano_1
               ,	IFNULL(IFNULL(media_hist_1.totalfaltas, media_turma_1.totalfaltas),0) AS ds_totalfaltas_1
               ,	IFNULL(IFNULL(media_hist_1.vl_ch, media_turma_1.vl_ch),0) AS vl_ch_1
               ,	IFNULL(IFNULL(media_hist_1.ds_situacao, media_turma_1.ds_situacao),0) AS ds_situacao_1
               
               ,	IFNULL(IFNULL(media_hist_2.media, media_turma_2.media),'***') AS ds_media_2
               ,	IFNULL(media_hist_2.nr_ano, media_turma_2.nr_ano) AS ds_ano_2
               ,	IFNULL(IFNULL(media_hist_2.totalfaltas, media_turma_2.totalfaltas),0) AS ds_totalfaltas_2
               ,	IFNULL(IFNULL(media_hist_2.vl_ch, media_turma_2.vl_ch),0) AS vl_ch_2
               ,	IFNULL(IFNULL(media_hist_2.ds_situacao, media_turma_2.ds_situacao),0) AS ds_situacao_2
               
               ,	IFNULL(IFNULL(media_hist_3.media, media_turma_3.media),'***') AS ds_media_3
               ,	IFNULL(media_hist_3.nr_ano, media_turma_3.nr_ano) AS ds_ano_3
               ,	IFNULL(IFNULL(media_hist_3.totalfaltas, media_turma_3.totalfaltas),0) AS ds_totalfaltas_3
               ,	IFNULL(IFNULL(media_hist_3.vl_ch, media_turma_3.vl_ch),0) AS vl_ch_3
               ,	IFNULL(IFNULL(media_hist_3.ds_situacao, media_turma_3.ds_situacao),0) AS ds_situacao_3

               FROM
                  matriculas mat
               INNER JOIN 
                  fichaindividual fi ON (mat.codigoaluno = fi.codigoaluno AND fi.grau = 2)
               INNER JOIN 
                  cursos_mestre cm ON (mat.curso = cm.CD_CURSO)
               INNER JOIN 
                  turmas tu_mat ON (mat.turma = tu_mat.codigo AND mat.anosemestre = tu_mat.anosemestre)
               INNER JOIN 
                  cursos_coligadas cc ON (tu_mat.cd_coligada = cc.CD_COLIGADA AND cm.CD_CURSO = cc.CD_CURSO)
               INNER JOIN 
                  coligadas col ON (tu_mat.cd_coligada = col.cd_coligada)
               INNER JOIN 
                  pessoas al ON (fi.codigoaluno = al.cd_pessoa)
               LEFT JOIN 
                  turmas tu ON (fi.anosemestre = tu.anosemestre AND fi.turma = tu.codigo)
               LEFT JOIN 
                  grades_disciplinas gd ON (fi.disciplina = gd.CD_DISCIPLINA AND fi.serie = gd.NR_SERIE AND fi.curso = gd.CD_CURSO AND tu.cd_grade = gd.CD_GRADE)
               INNER JOIN 
                  disciplinas di ON (fi.disciplina = di.codigo AND fi.curso = di.curso)
               INNER JOIN 
                  situacao sit ON (fi.situacao = sit.cd_situacao)
               LEFT JOIN 
                  disciplinas_categorias dc ON (gd.CD_DISCIPLINA_CATEGORIA = dc.cd_categoria)
               LEFT JOIN 
                  pessoas pai ON (al.cd_pai = pai.cd_pessoa)
               LEFT JOIN 
                  pessoas mae ON (al.cd_mae = mae.cd_pessoa)
               LEFT JOIN
                  historico_escolas_series hes ON (hes.codigoaluno = fi.codigoaluno AND hes.grau = 2 AND hes.serie = fi.serie)
               LEFT JOIN
                  historico_obs hist_obs ON (hist_obs.codigoaluno = al.cd_pessoa AND hist_obs.curso = fi.curso)

               LEFT JOIN (
                  SELECT
                     REPLACE(CAST(con.media AS CHAR),'.',',') AS media
                  ,	con.anosemestre AS nr_ano
                  ,	con.codigoaluno AS codigoaluno
                  ,	con.disciplina AS disciplina
                  ,	con.totalfaltas AS totalfaltas
                  ,	con.vl_ch AS vl_ch
                  ,	con.ds_situacao AS ds_situacao
                  FROM (	
                     SELECT
                        IF(fi1.ds_media IS NOT NULL AND fi1.ds_media <> '' AND fi1.turma = 'HISTORICO', IF(ROUND(fi1.ds_media,1) = '10.0', '10', ROUND(fi1.ds_media,1)), IF(fi1.mediaFinal IS NULL, '***', IF(fi1.mediaFinal = 0, '', IF(fi1.mediaFinal = -1, 'DISP', IF(fi1.mediaFinal = -2, '****', IF(ROUND(fi1.mediaFinal,1) = '10.0', '10', ROUND(fi1.mediaFinal,1))))))) AS media
                     ,	fi1.disciplina
                     ,	fi1.codigoaluno
                     ,	fi1.anosemestre
                     ,	fi1.totalfaltas
                     ,	IF(fi1.situacao NOT IN (3,4,5,6,7,8,10), IF(fi1.carga_horaria IS NULL OR fi1.carga_horaria = 0, gd1.VL_VALOR, fi1.carga_horaria), 0) AS vl_ch
                     ,	MAX(sit1.ds_situacao) AS ds_situacao
                     FROM
                        fichaindividual fi1
                     INNER JOIN
                        matriculas_curso mc ON (mc.cd_pessoa = fi1.codigoaluno AND mc.cd_curso = fi1.curso)
                     INNER JOIN
                        grades_disciplinas gd1 ON (gd1.CD_GRADE = mc.cd_grade AND gd1.CD_CURSO = fi1.curso AND gd1.NR_SERIE = 1 AND gd1.CD_DISCIPLINA = fi1.disciplina)
                     INNER JOIN
                        situacao sit1 ON (sit1.cd_situacao = fi1.situacao)
                     WHERE
                        fi1.serie = 1 AND
                        fi1.grau = 2 AND
                        fi1.turma = 'HISTORICO'
                     GROUP BY
                        fi1.codigoaluno
                     ,	fi1.disciplina
                     ,	fi1.curso
                     ORDER BY
                        fi1.anosemestre DESC
                  ) AS con
                  GROUP BY
                        con.disciplina
                     ,	con.codigoaluno
               ) media_hist_1 ON (media_hist_1.codigoaluno = fi.codigoaluno AND media_hist_1.disciplina = fi.disciplina)
               LEFT JOIN (	
                  SELECT
                     REPLACE(CAST(con.media AS CHAR),'.',',') AS media
                  ,	con.anosemestre AS nr_ano
                  ,	con.codigoaluno AS codigoaluno
                  ,	con.disciplina AS disciplina
                  ,	con.totalfaltas AS totalfaltas
                  ,	con.vl_ch AS vl_ch
                  ,	con.ds_situacao AS ds_situacao
                  FROM (	
                     SELECT
                        IF(fi1.ds_media IS NOT NULL AND fi1.ds_media <> '' AND fi1.turma = 'HISTORICO', IF(ROUND(fi1.ds_media,1) = '10.0', '10', ROUND(fi1.ds_media,1)), IF(fi1.mediaFinal IS NULL, '***', IF(fi1.mediaFinal = 0, '', IF(fi1.mediaFinal = -1, 'DISP', IF(fi1.mediaFinal = -2, '****', IF(ROUND(fi1.mediaFinal,1) = '10.0', '10', ROUND(fi1.mediaFinal,1))))))) AS media
                     ,	fi1.disciplina
                     ,	fi1.codigoaluno
                     ,	fi1.anosemestre
                     ,	fi1.totalfaltas
                     ,	IF(fi1.situacao NOT IN (3,4,5,6,7,8,10), IF(fi1.carga_horaria IS NULL OR fi1.carga_horaria = 0, gd1.VL_VALOR, fi1.carga_horaria), 0) AS vl_ch
                     ,	MAX(sit1.ds_situacao) AS ds_situacao
                     FROM
                        fichaindividual fi1
                     INNER JOIN
                        matriculas_curso mc ON (mc.cd_pessoa = fi1.codigoaluno AND mc.cd_curso = fi1.curso)
                     INNER JOIN
                        grades_disciplinas gd1 ON (gd1.CD_GRADE = mc.cd_grade AND gd1.CD_CURSO = fi1.curso AND gd1.NR_SERIE = 1 AND gd1.CD_DISCIPLINA = fi1.disciplina)
                     INNER JOIN
                        situacao sit1 ON (sit1.cd_situacao = fi1.situacao)
                     WHERE
                        fi1.serie = 1 AND
                        fi1.grau = 2 AND
                        fi1.turma <> 'HISTORICO'
                     GROUP BY
                        fi1.codigoaluno
                     ,	fi1.disciplina
                     ,	fi1.curso
                     ORDER BY
                        fi1.anosemestre DESC
                  ) AS con
                  GROUP BY
                     con.disciplina
                  ,	con.codigoaluno
               ) media_turma_1 ON (media_turma_1.codigoaluno = fi.codigoaluno AND media_turma_1.disciplina = fi.disciplina)
            
               LEFT JOIN (
                  SELECT
                     REPLACE(CAST(con.media AS CHAR),'.',',') AS media
                  ,	con.anosemestre AS nr_ano
                  ,	con.codigoaluno AS codigoaluno
                  ,	con.disciplina AS disciplina
                  ,	con.totalfaltas AS totalfaltas
                  ,	con.vl_ch AS vl_ch
                  ,	con.ds_situacao AS ds_situacao
                  FROM (	
                     SELECT
                        IF(fi2.ds_media IS NOT NULL AND fi2.ds_media <> '' AND fi2.turma = 'HISTORICO', IF(ROUND(fi2.ds_media,1) = '10.0', '10', ROUND(fi2.ds_media,1)), IF(fi2.mediaFinal IS NULL, '***', IF(fi2.mediaFinal = 0, '', IF(fi2.mediaFinal = -1, 'DISP', IF(fi2.mediaFinal = -2, '****', IF(ROUND(fi2.mediaFinal,1) = '10.0', '10', ROUND(fi2.mediaFinal,1))))))) AS media
                     ,	fi2.disciplina
                     ,	fi2.codigoaluno
                     ,	fi2.anosemestre
                     ,	fi2.totalfaltas
                     ,	IF(fi2.situacao NOT IN (3,4,5,6,7,8,10), IF(fi2.carga_horaria IS NULL OR fi2.carga_horaria = 0, gd2.VL_VALOR, fi2.carga_horaria), 0) AS vl_ch
                     ,	MAX(sit2.ds_situacao) AS ds_situacao
                     FROM
                        fichaindividual fi2
                     INNER JOIN
                        matriculas_curso mc ON (mc.cd_pessoa = fi2.codigoaluno AND mc.cd_curso = fi2.curso)
                     INNER JOIN
                        grades_disciplinas gd2 ON (gd2.CD_GRADE = mc.cd_grade AND gd2.CD_CURSO = fi2.curso AND gd2.NR_SERIE = 2 AND gd2.CD_DISCIPLINA = fi2.disciplina)
                     INNER JOIN
                        situacao sit2 ON (sit2.cd_situacao = fi2.situacao)
                     WHERE
                        fi2.serie = 2 AND
                        fi2.grau = 2 AND
                        fi2.turma = 'HISTORICO'
                     GROUP BY
                        fi2.codigoaluno
                     ,	fi2.disciplina
                     ,	fi2.curso
                     ORDER BY
                        fi2.anosemestre DESC
                  ) AS con
                  GROUP BY
                     con.disciplina
                  ,	con.codigoaluno
               ) media_hist_2 ON (media_hist_2.codigoaluno = fi.codigoaluno AND media_hist_2.disciplina = fi.disciplina)
               LEFT JOIN (	
                  SELECT
                     REPLACE(CAST(con.media AS CHAR),'.',',') AS media
                  ,	con.anosemestre AS nr_ano
                  ,	con.codigoaluno AS codigoaluno
                  ,	con.disciplina AS disciplina
                  ,	con.totalfaltas AS totalfaltas
                  ,	con.vl_ch AS vl_ch
                  ,	con.ds_situacao AS ds_situacao
                  FROM (	
                     SELECT
                        IF(fi2.ds_media IS NOT NULL AND fi2.ds_media <> '' AND fi2.turma = 'HISTORICO', IF(ROUND(fi2.ds_media,1) = '10.0', '10', ROUND(fi2.ds_media,1)), IF(fi2.mediaFinal IS NULL, '***', IF(fi2.mediaFinal = 0, '', IF(fi2.mediaFinal = -1, 'DISP', IF(fi2.mediaFinal = -2, '****', IF(ROUND(fi2.mediaFinal,1) = '10.0', '10', ROUND(fi2.mediaFinal,1))))))) AS media
                     ,	fi2.disciplina
                     ,	fi2.codigoaluno
                     ,	fi2.anosemestre
                     ,	fi2.totalfaltas
                     ,	IF(fi2.situacao NOT IN (3,4,5,6,7,8,10), IF(fi2.carga_horaria IS NULL OR fi2.carga_horaria = 0, gd2.VL_VALOR, fi2.carga_horaria), 0) AS vl_ch
                     ,	MAX(sit2.ds_situacao) AS ds_situacao
                     FROM
                        fichaindividual fi2
                     INNER JOIN
                        matriculas_curso mc ON (mc.cd_pessoa = fi2.codigoaluno AND mc.cd_curso = fi2.curso)
                     INNER JOIN
                        grades_disciplinas gd2 ON (gd2.CD_GRADE = mc.cd_grade AND gd2.CD_CURSO = fi2.curso AND gd2.NR_SERIE = 2 AND gd2.CD_DISCIPLINA = fi2.disciplina)
                     INNER JOIN
                        situacao sit2 ON (sit2.cd_situacao = fi2.situacao)
                     WHERE
                        fi2.serie = 2 AND
                        fi2.grau = 2 AND
                        fi2.turma <> 'HISTORICO'
                     GROUP BY
                        fi2.codigoaluno
                     ,	fi2.disciplina
                     ,	fi2.curso
                     ORDER BY
                        fi2.anosemestre DESC
                  ) AS con
                  GROUP BY
                     con.disciplina
                  ,	con.codigoaluno
               ) media_turma_2 ON (media_turma_2.codigoaluno = fi.codigoaluno AND media_turma_2.disciplina = fi.disciplina)
            
               LEFT JOIN (
                  SELECT
                     REPLACE(CAST(con.media AS CHAR),'.',',') AS media
                  ,	con.anosemestre AS nr_ano
                  ,	con.codigoaluno AS codigoaluno
                  ,	con.disciplina AS disciplina
                  ,	con.totalfaltas AS totalfaltas
                  ,	con.vl_ch AS vl_ch
                  ,	con.ds_situacao AS ds_situacao
                  FROM (	
                     SELECT
                        IF(fi3.ds_media IS NOT NULL AND fi3.ds_media <> '' AND fi3.turma = 'HISTORICO', IF(ROUND(fi3.ds_media,1) = '10.0', '10', ROUND(fi3.ds_media,1)), IF(fi3.mediaFinal IS NULL, '***', IF(fi3.mediaFinal = 0, '', IF(fi3.mediaFinal = -1, 'DISP', IF(fi3.mediaFinal = -2, '****', IF(ROUND(fi3.mediaFinal,1) = '10.0', '10', ROUND(fi3.mediaFinal,1))))))) AS media
                     ,	fi3.disciplina
                     ,	fi3.codigoaluno
                     ,	fi3.anosemestre
                     ,	fi3.totalfaltas
                     ,	IF(fi3.situacao NOT IN (3,4,5,6,7,8,10), IF(fi3.carga_horaria IS NULL OR fi3.carga_horaria = 0, gd3.VL_VALOR, fi3.carga_horaria), 0) AS vl_ch
                     ,	MAX(sit3.ds_situacao) AS ds_situacao
                     FROM
                        fichaindividual fi3
                     INNER JOIN
                        matriculas_curso mc ON (mc.cd_pessoa = fi3.codigoaluno AND mc.cd_curso = fi3.curso)
                     INNER JOIN
                        grades_disciplinas gd3 ON (gd3.CD_GRADE = mc.cd_grade AND gd3.CD_CURSO = fi3.curso AND gd3.NR_SERIE = 2 AND gd3.CD_DISCIPLINA = fi3.disciplina)
                     INNER JOIN
                        situacao sit3 ON (sit3.cd_situacao = fi3.situacao)
                     WHERE
                        fi3.serie = 3 AND
                        fi3.grau = 2 AND
                        fi3.turma = 'HISTORICO'
                     GROUP BY
                        fi3.codigoaluno
                     ,	fi3.disciplina
                     ,	fi3.curso
                     ORDER BY
                        fi3.anosemestre DESC
                  ) AS con
                  GROUP BY
                     con.disciplina
                  ,	con.codigoaluno
               ) media_hist_3 ON (media_hist_3.codigoaluno = fi.codigoaluno AND media_hist_3.disciplina = fi.disciplina)
               LEFT JOIN (	
                  SELECT
                     REPLACE(CAST(con.media AS CHAR),'.',',') AS media
                  ,	con.anosemestre AS nr_ano
                  ,	con.codigoaluno AS codigoaluno
                  ,	con.disciplina AS disciplina
                  ,	con.totalfaltas AS totalfaltas
                  ,	con.vl_ch AS vl_ch
                  ,	con.ds_situacao
                  FROM (	
                     SELECT
                        IF(fi3.ds_media IS NOT NULL AND fi3.ds_media <> '' AND fi3.turma = 'HISTORICO', IF(ROUND(fi3.ds_media,1) = '10.0', '10', ROUND(fi3.ds_media,1)), IF(fi3.mediaFinal IS NULL, '***', IF(fi3.mediaFinal = 0, '', IF(fi3.mediaFinal = -1, 'DISP', IF(fi3.mediaFinal = -2, '****', IF(ROUND(fi3.mediaFinal,1) = '10.0', '10', ROUND(fi3.mediaFinal,1))))))) AS media
                     ,	fi3.disciplina
                     ,	fi3.codigoaluno
                     ,	fi3.anosemestre
                     ,	fi3.totalfaltas
                     ,	IF(fi3.situacao NOT IN (3,4,5,6,7,8,10), IF(fi3.carga_horaria IS NULL OR fi3.carga_horaria = 0, gd3.VL_VALOR, fi3.carga_horaria), 0) AS vl_ch
                     ,	MAX(sit3.ds_situacao) AS ds_situacao
                     FROM
                        fichaindividual fi3
                     INNER JOIN
                        matriculas_curso mc ON (mc.cd_pessoa = fi3.codigoaluno AND mc.cd_curso = fi3.curso)
                     INNER JOIN
                        grades_disciplinas gd3 ON (gd3.CD_GRADE = mc.cd_grade AND gd3.CD_CURSO = fi3.curso AND gd3.NR_SERIE = 2 AND gd3.CD_DISCIPLINA = fi3.disciplina)
                     INNER JOIN
                        situacao sit3 ON (sit3.cd_situacao = fi3.situacao)
                     WHERE
                        fi3.serie = 3 AND
                        fi3.grau = 2 AND
                        fi3.turma <> 'HISTORICO'
                     GROUP BY
                        fi3.codigoaluno
                     ,	fi3.disciplina
                     ,	fi3.curso
                     ORDER BY
                        fi3.anosemestre DESC
                  ) AS con
                  GROUP BY
                     con.disciplina
                  ,	con.codigoaluno
               ) media_turma_3 ON (media_turma_3.codigoaluno = fi.codigoaluno AND media_turma_3.disciplina = fi.disciplina)
               WHERE
                  1 = 1 AND
                  fi.situacao <> 8 AND
                  fi.grau = 2
               "" .
                  ((!empty($arrParametros["":cd_coligada""]))
                     ? ""AND col.cd_coligada IN (:cd_coligada)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_polo""]))
                     ? ""AND mat.cd_polo IN (:cd_polo)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":nr_anosemestre""]))
                     ? ""AND mat.anosemestre IN (:nr_anosemestre)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_curso""]))
                     ? ""AND cm.id_curso IN (:cd_curso)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_turma""]))
                     ? ""AND tu.codigo IN (:cd_turma)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_situacao""]))
                     ? ""AND fi.situacao IN (:cd_situacao)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_aluno""]))
                     ? ""AND mat.codigoaluno IN (:cd_aluno)""
                     : NULL
                  )
               . ""
               GROUP BY
                  fi.codigoaluno
               ,	fi.grau
               ,	fi.disciplina
               ;
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cod_aluno"" => $arrFormatoInteiro,
                  ""nr_serie_ficha"" => $arrFormatoInteiro,
                  ""nr_anosem_ficha"" => $arrFormatoInteiro,
                  ""vl_ch"" => $arrFormatoInteiro,
                  ""nr_ano"" => $arrFormatoInteiro
               )
            )
         )
         ->saveTo($consulta);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
         $consulta->pipe($this->dataStore(""dados_consulta""));

         $consulta->pipe(new Group(array(
            ""by""=>array(
               ""cod_aluno""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cod_aluno""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));

         $this->src('unimestre')->query(
            ""
               SELECT
               
                  mat.codigoaluno AS cod_aluno
               ,  mat.turma AS cod_turma
               ,  mat.curso AS cod_curso
               ,  CONCAT(hes.serie,'ª') AS serie
               ,  hes.ano AS ano
               ,  hes.ds_escola AS ds_escola
               ,  CONCAT(hes.ds_escola_cidade,'/',hes.ds_escola_estado) AS ds_cidade_estado

               FROM
                  matriculas mat
               INNER JOIN 
                  cursos_mestre cm ON (mat.curso = cm.CD_CURSO)
               INNER JOIN 
                  turmas tu_mat ON (mat.turma = tu_mat.codigo AND mat.anosemestre = tu_mat.anosemestre)
               INNER JOIN 
                  cursos_coligadas cc ON (tu_mat.cd_coligada = cc.CD_COLIGADA AND cm.CD_CURSO = cc.CD_CURSO)
               INNER JOIN 
                  coligadas col ON (tu_mat.cd_coligada = col.cd_coligada)
               INNER JOIN
                  historico_escolas_series hes ON (hes.codigoaluno = mat.codigoaluno AND hes.grau = 2)
               WHERE
                  1 = 1
               "" .
                  ((!empty($arrParametros["":cd_coligada""]))
                     ? ""AND col.cd_coligada IN (:cd_coligada)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_polo""]))
                     ? ""AND mat.cd_polo IN (:cd_polo)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":nr_anosemestre""]))
                     ? ""AND mat.anosemestre IN (:nr_anosemestre)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_curso""]))
                     ? ""AND cm.id_curso IN (:cd_curso)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_turma""]))
                     ? ""AND tu_mat.codigo IN (:cd_turma)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_situacao""]))
                     ? ""AND mat.situacao IN (:cd_situacao)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_aluno""]))
                     ? ""AND mat.codigoaluno IN (:cd_aluno)""
                     : NULL
                  )
               . ""
               GROUP BY
                  hes.codigoaluno
               ,  hes.ano
               ;
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cod_aluno"" => $arrFormatoInteiro,
                  ""serie"" => $arrFormatoInteiro,
                  ""ano"" => $arrFormatoInteiro
               )
            )
         )
         ->saveTo($consulta_historico_anterior);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
         $consulta_historico_anterior->pipe($this->dataStore(""dados_consulta_historico_anterior""));

         $this->src('unimestre')->query(
            ""
               SELECT
                  us.cd_pessoa AS cod_usuario
               ,  us.nm_pessoa AS nm_usuario
               ,  IFNULL(rl.ds_chave,'------') AS ds_chave_rel
               FROM
                  pessoas us
               INNER JOIN
                  rgo_logs_impressoes rli ON (rli.cd_pessoa = us.cd_pessoa)
               INNER JOIN
                  rgo_relatorios rl ON (rl.cd_relatorio = rli.cd_relatorio)
               WHERE
                  rli.cd_relatorio = "" . $this->arrDadosGerais->cd_relatorio . ""
               ORDER BY
                  rli.dt_impressao DESC
               LIMIT 1
            ""
         )
         ->saveTo($dados_footer);
   
         $dados_footer->pipe($this->dataStore(""dados_rodape""));

require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));

      }

   }","<?php

use \koolreport\widgets\koolphp\Table;
use \koolreport\processes\Filter;

// path pasta
$path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

// margens
$ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
$ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
$ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
$ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

$sn_geracao = $_POST[""pdf""];

//usuario impressao
$usuario = $this->dataStore(""dados_rodape"")[0][""nm_usuario""];

//chave relatorio
$chave_relatorio = $this->dataStore(""dados_rodape"")[0][""ds_chave_rel""];

?>

<html>
   <head>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>

      <style>
         .borda {
            border: 1px solid #dee2e6;
         }         
         .totalizador {
            min-height: 0cm !important;
         }
         .fonte {
            font-size: 11px !important;
         }
         .b {
            font-weight: bold !important;
         }
         ul li {
            font-size: 11px !important;
         }
         .rodape {
            font-size: 9px !important;
         }
         .fundo {
            background-color: #cccccc !important;
         }
      </style>

   </head>

   <body class=""relatorio"">
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

      <?php

         foreach($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao){
            $dados_pagina = $this->dataStore(""dados_consulta"")
               ->filter(
                  ""cod_aluno"",""="",$visualizacao[""cod_aluno""]
               );

            $dados_hist_anterior = $this->dataStore(""dados_consulta_historico_anterior"")
               ->filter(
                  ""cod_aluno"",""="",$visualizacao[""cod_aluno""]
               );

      ?>

            <div class=""container"">
               <div
                  class=""conteudo""
                  style=""
                     padding-top: <?=((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm'?>;
                     padding-bottom: <?=((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm'?>;
                     padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                     padding-right: <?=$ds_margem_direita . 'cm'?>;
                     min-height: 28.1cm;
                     ""
               >
                  
                  <div style=""vertical-align: top; min-height: 100;"">

                     <table style=""width: 100%;"">
                        <tr>
                           <td style=""text-align: left; width: 55%;"">
                              <?php
                                 require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','cabecalho.php'));
                              ?>
                           </td>
                           <td style=""text-align: right; max-width: 45%;"">
                              <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','filtro.php')); ?>
                           </td>
                        </tr>
                     </table>

                  </div>

                  <div>

                     <h5 class=""text-center"" style=""margin: 0.25rem;"">
                        <?=$this->arrDadosGerais->nm_relatorio?>
                     </h5>

                     <table class=""table"">
                        <tr>
                           <td colspan=""3"" class=""border p-1 fonte"">
                              Aluno(a): <span class=""fonte b""><?= $dados_pagina[0]['nm_aluno'] ?></span>
                           </td>
                           <td class=""border p-1 fonte"">
                              Gênero: <?= $dados_pagina[0]['ds_sexo_aluno'] ?>
                           </td>
                        </tr>
                        <tr>
                           <td class=""border p-1 fonte"">
                              Matricula: <span class=""fonte b""><?= $dados_pagina[0]['cod_aluno'] ?></span>
                           </td>
                           <td class=""border p-1 fonte"">
                              RG: <span class=""fonte b""><?= $dados_pagina[0]['ds_rg_aluno'] ?></span> / <span class=""fonte b""><?= $dados_pagina[0]['ds_rg_orgao_exp_aluno'] ?></span>
                           </td>
                           <td class=""border p-1 fonte"">
                              CPF: <span class=""fonte b""><?= $dados_pagina[0]['ds_cpf_aluno'] ?></span>
                           </td>
                           <td class=""border p-1 fonte"">
                              Nacionalidade: <?= $dados_pagina[0]['ds_nacionalidade'] ?>
                           </td>
                        </tr>
                        <tr>
                           <td class=""border p-1 fonte"">
                              Data de Nascimento: <?= $dados_pagina[0]['dt_nascimento'] ?>
                           </td>
                           <td colspan=""2"" class=""border p-1 fonte"">
                              Município: <?= $dados_pagina[0]['ds_cidade_nasc'] ?>
                           </td>
                           <td class=""border p-1 fonte"">
                              UF: <?= $dados_pagina[0]['ds_estado_nasc'] ?>
                           </td>
                        </tr>
                        <tr>
                           <td colspan=""2"" class=""border p-1 fonte"">
                              Nome do Pai: <?= $dados_pagina[0]['ds_nome_pai'] ?>
                           </td>
                           <td colspan=""2"" class=""border p-1 fonte"">
                              Nome da Mãe: <?= $dados_pagina[0]['ds_nome_mae'] ?>
                           </td>
                        </tr>
                     </table>

                     <?php
                  
                        Table::create(array(
                           ""dataStore""=>$dados_pagina,
                           ""grouping""=>array(                        
                              ""cod_aluno""=>array(
                                 ""calculate""=>array(
                                    ""{somach1}""=>array(""sum"",""vl_ch_1""),
                                    ""{somach2}""=>array(""sum"",""vl_ch_2""),
                                    ""{somach3}""=>array(""sum"",""vl_ch_3""),
                                    ""{somafaltas1}""=>array(""sum"",""ds_totalfaltas_1""),
                                    ""{somafaltas2}""=>array(""sum"",""ds_totalfaltas_2""),
                                    ""{somafaltas3}""=>array(""sum"",""ds_totalfaltas_3""),
                                    ""{situacao1}""=>array(""max"",""ds_situacao_1""),
                                    ""{situacao2}""=>array(""max"",""ds_situacao_2""),
                                    ""{situacao3}""=>array(""max"",""ds_situacao_3"")
                                 ),
                                 ""top""=>""<td rowspan='2' class='fonte text-center p-1 b borda' style='width: 50%; vertical-align: middle;'>DISCIPLINAS</td>
                                 <td colspan='3' class='fonte b text-center p-1 borda' style='width: 16.6%'>1ª Série</td>
                                 <td colspan='3' class='fonte b text-center p-1 borda' style='width: 16.6%'>2ª Série</td>
                                 <td colspan='3' class='fonte b text-center p-1 borda' style='width: 16.6%'>3ª Série</td>
                                 <tr>
                                    <td class='fonte b text-center p-1 borda fundo' style='width: 5.53%'>Nota</td>
                                    <td class='fonte b text-center p-1 borda fundo' style='width: 5.53%'>CH</td>
                                    <td class='fonte b text-center p-1 borda fundo' style='width: 5.53%'>Faltas</td>
                                    <td class='fonte b text-center p-1 borda fundo' style='width: 5.53%'>Nota</td>
                                    <td class='fonte b text-center p-1 borda fundo' style='width: 5.53%'>CH</td>
                                    <td class='fonte b text-center p-1 borda fundo' style='width: 5.53%'>Faltas</td>
                                    <td class='fonte b text-center p-1 borda fundo' style='width: 5.53%'>Nota</td>
                                    <td class='fonte b text-center p-1 borda fundo' style='width: 5.53%'>CH</td>
                                    <td class='fonte b text-center p-1 borda fundo' style='width: 5.53%'>Faltas</td>
                                 </tr>
                                 "",
                                 ""bottom""=>""<td class='fonte b p-1 borda'>Total de Faltas</td>
                                 <td colspan='3' class='fonte b p-1 text-center borda'>{somafaltas1}</td>
                                 <td colspan='3' class='fonte b p-1 text-center borda'>{somafaltas2}</td>
                                 <td colspan='3' class='fonte b p-1 text-center borda'>{somafaltas3}</td>
                                 <tr>
                                    <td class='fonte b p-1 borda fundo'>Carga Horária Total</td>
                                    <td colspan='3' class='fonte b p-1 text-center borda fundo'>{somach1}</td>
                                    <td colspan='3' class='fonte b p-1 text-center borda fundo'>{somach2}</td>
                                    <td colspan='3' class='fonte b p-1 text-center borda fundo'>{somach3}</td>
                                 </tr>
                                 <tr>
                                    <td class='fonte b p-1 borda fundo'>Resultado Final</td>
                                    <td colspan='3' class='fonte b p-1 text-center borda fundo'>{situacao1}</td>
                                    <td colspan='3' class='fonte b p-1 text-center borda fundo'>{situacao2}</td>
                                    <td colspan='3' class='fonte b p-1 text-center borda fundo'>{situacao3}</td>
                                 </tr>
                                 ""
                              )
                                    
                        ),
                           ""showHeader""=>false,
                           ""columns""=>array(
                              ""ds_disciplina""=>array(
                                 ""cssStyle""=>""text-align: left;""
                              ),
                              ""ds_media_1""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""vl_ch_1""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""ds_totalfaltas_1""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""ds_media_2""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""vl_ch_2""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""ds_totalfaltas_2""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""ds_media_3""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""vl_ch_3""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""ds_totalfaltas_3""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              )
                           ),
                           ""cssClass""=>array(
                              ""table""=>""table table-striped table-hover"",
                              ""tr""=>""tabela fonte p-1"",
                              ""th""=>""tabela fonte p-1"",
                              ""td""=>""tabela fonte p-1 borda"",
                              ""tf""=>""tabela fonte p-1"",
                           ),
                           ""sorting""=>array(
                              ""nr_ordem""=>""asc"",
                              ""ds_disciplina""=>""asc""
                           )
                        ));

                     ?>

                     <?php
                     
                     if($this->dataStore(""dados_consulta_historico_anterior"")->filter(""cod_aluno"",""="",$visualizacao[""cod_aluno""])->isNotEmpty()){
                  
                        Table::create(array(
                           ""dataStore""=>$dados_hist_anterior,
                           ""grouping""=>array(                        
                              ""cod_aluno""=>array(
                                 ""top""=>""<td class='fonte text-center p-1 b borda' style='width: 10%;'>SÉRIE</td>
                                 <td class='fonte b text-center p-1 borda' style='width: 10%'>ANO</td>
                                 <td class='fonte b text-center p-1 borda' style='width: 60%'>ESTABELECIMENTO DE ENSINO</td>
                                 <td class='fonte b text-center p-1 borda' style='width: 20%'>CIDADE/ESTADO</td>
                                 "",
                                 ""bottom""=>""""
                              )
                           ),
                           ""showHeader""=>false,
                           ""columns""=>array(
                              ""serie""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""ano""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""ds_escola""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""ds_cidade_estado""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              )
                           ),
                           ""cssClass""=>array(
                              ""table""=>""table table-striped table-hover"",
                              ""tr""=>""tabela fonte p-1"",
                              ""th""=>""tabela fonte p-1"",
                              ""td""=>""tabela fonte p-1 borda"",
                              ""tf""=>""tabela fonte p-1"",
                           )
                        ));
                     
                     }

                     ?>

                     <div class=""text-justify p-2 fonte borda"" style=""min-height: 2cm;"">
                        <span class=""p-1 b fonte"">Observações</span>
                        <br />
                        <br />
                        <?= $dados_pagina[0]['ds_obs_hist'] ?>
                     </div>

                     <div class=""text-right fonte b mt-3"">
                        <?= $dados_pagina[0]['ds_cidade_coligada'] ?>, <?= $dados_pagina[0]['dt_atual'] ?>
                     </div>

                     <table class=""mt-4"" style=""width: 100%;"">
                        <tr>
                           <td style=""width: 50%;"" class=""text-center fonte p-1"">
                              <div style=""width: 80%; margin: auto;"">
                                 <hr style=""margin-bottom: 0.5rem; margin-top 0.5rem;"">
                                 <span class=""fonte b""><?= $dados_pagina[0]['ds_secretaria_coligada'] ?><br />Ato <?= $dados_pagina[0]['ds_ato_secretaria_coligada'] ?></span>
                              </div>
                           </td>
                           <td style=""width: 50%;"" class=""text-center fonte p-1"">
                              <div style=""width: 80%; margin: auto;"">
                                 <hr style=""margin-bottom: 0.5rem; margin-top 0.5rem;"">
                                 <span class=""fonte b""><?= $dados_pagina[0]['ds_diretor_coligada'] ?><br />Ato <?= $dados_pagina[0]['ds_ato_diretor_coligada'] ?></span>
                              </div>
                           </td>
                        </tr>
                     </table>

                  </div>

                  <div class=""page-break"" style=""page-break-after: always;""></div>

               </div>

               <div style=""text-align: right; padding-bottom: <?= $ds_margem_inferior . 'cm' ?>; padding-right: <?= $ds_margem_esquerda . 'cm' ?>; padding-left: <?= $ds_margem_direita . 'cm' ?>;"">
                  <hr>
                  <div class=""float-left rodape text-left"" style=""width: 80%; vertical-align: middle !important;"">
                     <img class=""float-left"" src=""../image/logo_rodape_unimestre_v3"" alt="""">
                     <div class=""ml-3 float-left rodape"">Impresso por: <?= $usuario ?> - <?= $chave_relatorio ?></div>
                  </div>
                  <div class=""float-right rodape text-right"" style=""width: 20%;"">
                  </div>
               </div>

            </div>

         <?php

         }

      ?>

   </body>
</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[
	{
		""tipo"": ""uni-select-coligada-filha"",
		""obrigatorio"": false,
		""label"": ""Unidade"",
		""ds_campo"": ""cd_coligada""
	},
	{
		""tipo"": ""uni-select-polo"",
		""obrigatorio"": false,
		""label"": ""Polo"",
		""ds_campo"": ""cd_polo""
	},
	{
		""tipo"": ""campo-anosemestre"",
		""obrigatorio"": false,
		""label"": ""Ano/semestre"",
		""ds_campo"": ""nr_anosemestre""
	},
	{
		""tipo"": ""uni-select-curso"",
		""obrigatorio"": false,
		""label"": ""Curso"",
		""ds_campo"": ""cd_curso""
	},
	{
		""tipo"": ""uni-busca-turma"",
		""obrigatorio"": false,
		""label"": ""Turma"",
		""ds_campo"": ""cd_turma""
	},
	{
		""tipo"": ""uni-select-situacao"",
		""obrigatorio"": false,
		""label"": ""Situação"",
		""ds_campo"": ""cd_situacao"",
		""valor"": [
			0,
			1,
			2,
			9,
			11
		]
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Aluno"",
		""ds_campo"": ""cd_aluno""
	}
]",83,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,10,1,""Histórico Escolar - Ensino Médio - 1"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,1, NULL, NULL,""rel_historico_ensino_medio_1"",""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Homologação,Histórico Escolar - Ensino Fundamental,"<?php

   $PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
   require_once( $PARMS['PASTA'] . 'nucleo.php' );
   require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
   header ('Content-type: text/html; charset=UTF-8');

   use \koolreport\processes\ColumnMeta;
   use \koolreport\processes\Group;
   use \koolreport\processes\OnlyColumn;

   // classe padrao do relatorio
   class Relatorio extends \koolreport\KoolReport {
      use \koolreport\bootstrap4\Theme;
      use \koolreport\inputs\Bindable;
      use \koolreport\inputs\POSTBinding;
      use \koolreport\export\Exportable;

      public $path_include;
      public $arrDadosFiltro;
      public $arrDadosGerais;

      public function __construct() {

         try {

            $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
            parent::__construct();

         } catch (Exception $e) {

            echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
            die;

         }

      }

      // inicializacao dos filtros
      function defaultParamValues() {
         return array(
            ""filtros""=>'{}',
            ""gerais""=>'{}'
         );
      }

      // resgate do $_POST para vinculo com os parametros
      function bindParamsToInputs() {
         return array(
            ""filtros"",
            ""gerais""
         );
      }

      // funcao responsavel por realizar a conexao com o banco de dados
      // e resgate dos dados tratamento dos dados do $_POST
      public function settings() {

         Nucleo::import( 'relatorios.RelatoriosConexao' );
         $objRelatoriosConexao = new RelatoriosConexao;

         return $objRelatoriosConexao->settings();

      }

      // funcao responsavel por manter as consultas a serem executadas pelo relatorio
      // e geracao dos array de dados para uso posterior na visualizacao
      public function setup() {

         require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

         if (isset($_POST['filtros'])) {
            $this->arrDadosFiltro = json_decode($_POST['filtros']);
         } else {
            $this->arrDadosFiltro = json_decode($_POST);
         }

         if (isset($_POST['gerais'])) {
            $this->arrDadosGerais = json_decode($_POST['gerais']);
         }

         $arrParametros = [];

         foreach ($this->arrDadosFiltro as $filtro => $valor) {
            if (!empty($valor->ds_valor)) {
                $arrParametros["":"" . $filtro] = $valor->ds_valor;
            }
         }

      $this->src('unimestre')->query(""

            CALL PROC_TRUNCATE_IMP_HIST_EF(1);

            INSERT IGNORE INTO imp_historico_ensino_fundamental (cod_aluno, cod_curso, cod_disciplina, nr_etapa, cd_grade)
               SELECT
                  al.cd_pessoa AS cod_aluno
               ,	fi.curso AS cod_curso
               ,	di.codigo AS cod_disciplina
               ,	fi.serie AS nr_etapa
               ,  mc.cd_grade AS cod_grade
               FROM
                  matriculas mat
               INNER JOIN 
                  fichaindividual fi ON (mat.codigoaluno = fi.codigoaluno AND fi.grau = 1)
               INNER JOIN
                  matriculas_curso mc ON (mc.cd_pessoa = fi.codigoaluno AND mc.cd_curso = fi.curso)
               INNER JOIN 
                  cursos_mestre cm ON (mat.curso = cm.CD_CURSO)
               INNER JOIN 
                  turmas tu_mat ON (mat.turma = tu_mat.codigo AND mat.anosemestre = tu_mat.anosemestre)
               INNER JOIN 
                  cursos_coligadas cc ON (tu_mat.cd_coligada = cc.CD_COLIGADA AND cm.CD_CURSO = cc.CD_CURSO)
               INNER JOIN 
                  coligadas col ON (tu_mat.cd_coligada = col.cd_coligada)
               INNER JOIN 
                  pessoas al ON (fi.codigoaluno = al.cd_pessoa)
               LEFT JOIN 
                  turmas tu ON (fi.anosemestre = tu.anosemestre AND fi.turma = tu.codigo)
               LEFT JOIN 
                  grades_disciplinas gd ON (
                     fi.disciplina = gd.CD_DISCIPLINA AND 
                     fi.serie = gd.NR_SERIE AND 
                     fi.curso = gd.CD_CURSO AND 
                     mc.cd_grade = gd.CD_GRADE
                  )
               INNER JOIN 
                  disciplinas di ON (fi.disciplina = di.codigo AND fi.curso = di.curso)
               INNER JOIN 
                  situacao sit ON (fi.situacao = sit.cd_situacao)
               LEFT JOIN 
                  disciplinas_categorias dc ON (gd.CD_DISCIPLINA_CATEGORIA = dc.cd_categoria)
               LEFT JOIN 
                  pessoas pai ON (al.cd_pai = pai.cd_pessoa)
               LEFT JOIN 
                  pessoas mae ON (al.cd_mae = mae.cd_pessoa)
               LEFT JOIN
                  historico_escolas_series hes ON (hes.codigoaluno = fi.codigoaluno AND hes.grau = 1 AND hes.serie = fi.serie)
               LEFT JOIN
                  historico_obs hist_obs ON (hist_obs.codigoaluno = al.cd_pessoa AND hist_obs.curso = fi.curso)
               WHERE
                  1 = 1 AND
                  fi.situacao <> 8 AND
                  fi.grau = 1 AND
                  fi.curso NOT IN ('INTEG')
               "" .
                  ((!empty($arrParametros["":cd_coligada""]))
                     ? ""AND tu_mat.cd_coligada IN (:cd_coligada)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_polo""]))
                     ? ""AND mat.cd_polo IN (:cd_polo)""
                     :  NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":nr_anosemestre""]))
                     ? ""AND mat.anosemestre IN (:nr_anosemestre)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_curso""]))
                     ? ""AND cm.ID_CURSO IN (:cd_curso)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_turma""]))
                     ? ""AND tu_mat.codigo IN (:cd_turma)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_aluno""]))
                     ? ""AND mat.codigoaluno IN (:cd_aluno)""
                     : NULL
                  )
               . ""
               GROUP BY
                  fi.codigoaluno
               , di.descricao
               ORDER BY
                  al.cd_pessoa
            ;

            CALL PROC_ATUALIZA_IMP_EF(1);

         "")
         ->params(
            $arrParametros
         );
         
      $this->src('unimestre')->query(""
            SELECT
               tu.cd_coligada AS cd_coligada_cabecalho
            ,	al.cd_pessoa AS cod_aluno
            ,	al.nm_pessoa AS nm_aluno
            ,	al.ds_cidade_nascimento AS ds_cidade_nasc
            ,	al.ds_estado_nascimento AS ds_estado_nasc
            ,	al.ds_nacionalidade AS ds_nacionalidade
            ,	al.ds_sexo AS ds_sexo_aluno
            ,	IF(al.ds_sexo = 'M','o','a') AS ds_a_o
            ,	al.ds_identidade AS ds_rg_aluno
            ,	al.ds_identidade_orgao_exp AS ds_rg_orgao_exp_aluno
            ,  CONCAT(MID(al.ds_cpf,1,3),'.',MID(al.ds_cpf,4,3),'.',MID(al.ds_cpf,7,3),'-',MID(al.ds_cpf,10,2)) AS ds_cpf_aluno
            ,	IFNULL(mae.nm_pessoa,'') AS ds_nome_mae
            ,	IFNULL(pai.nm_pessoa,'') AS ds_nome_pai
            ,	DATE_FORMAT(al.dt_nascimento,'%d/%m/%Y') AS dt_nascimento
            ,	fi.turma AS cod_turma_ficha
            ,	fi.curso AS cod_curso
            ,	di.codigo AS cod_disciplina
            ,	di.descricao AS ds_disciplina
            ,	fi.serie AS nr_serie_ficha
            ,	fi.grau AS nr_grau
            ,	fi.anosemestre AS nr_anosem_ficha
            ,	dc.cd_categoria AS cod_categoria_disc
            ,	dc.ds_categoria AS ds_categoria_disc
            ,	sit.ds_situacao AS ds_situacao_ficha
            ,	hist_obs.observacao AS ds_obs_hist
            ,	IF(fi.serie = 9 AND fi.situacao = 0, al.nm_pessoa, '____________') AS ds_nome_cert
            ,	IF(fi.serie = 9 AND fi.situacao = 0, CONCAT(al.ds_identidade,', ',al.ds_identidade_orgao_exp), '____________') AS ds_inden_cert
            ,	IF(fi.serie = 9 AND fi.situacao = 0, cm.DS_CURSO, '____________') AS ds_curso_cert
            ,	col.ds_cidade AS ds_cidade_coligada
            ,	CONCAT(DAY(CURDATE()),' de ',
               CASE MONTH(CURDATE())
                  WHEN 01 THEN 'Janeiro'
                  WHEN 02 THEN 'Fevereiro'
                  WHEN 03 THEN 'Março'
                  WHEN 04 THEN 'Abril'
                  WHEN 05 THEN 'Maio'
                  WHEN 06 THEN 'Junho'
                  WHEN 07 THEN 'Julho'
                  WHEN 08 THEN 'Agosto'
                  WHEN 09 THEN 'Setembro'
                  WHEN 10 THEN 'Outubro'
                  WHEN 11 THEN 'Novembro'
                  WHEN 12 THEN 'Dezembro'
               END,' de ',YEAR(CURDATE())
               ) AS dt_atual
            ,	col.me_secretaria AS ds_secretaria_coligada
            ,	col.ds_ato_secretaria AS ds_ato_secretaria_coligada
            ,	col.nm_diretor_geral AS ds_diretor_coligada
            ,	col.ds_ato_direto AS ds_ato_diretor_coligada
            ,  di.ordem AS nr_ordem

            ,	IFNULL(imp.ds_media_1, '***') AS ds_media_1
            ,	IFNULL(LEFT(imp.nr_ano_1, 4),'-') AS ds_ano_1
            ,	IFNULL(imp.nr_tot_faltas_1, '-') AS ds_totalfaltas_1
            ,	IFNULL(imp.vl_ch_1, '-') AS vl_ch_1
            ,	IFNULL(imp.cod_sit_1, -1) AS cod_situacao_1
            ,  sit1.ds_sigla_situacao AS ds_sit_1
            ,  IFNULL(imp.nr_dias_letivos_1, '-') AS nr_dias_1

            ,	IFNULL(imp.ds_media_2, '***') AS ds_media_2
            ,	IFNULL(LEFT(imp.nr_ano_2, 4),'-') AS ds_ano_2
            ,	IFNULL(imp.nr_tot_faltas_2, '-') AS ds_totalfaltas_2
            ,	IFNULL(imp.vl_ch_2, '-') AS vl_ch_2
            ,	IFNULL(imp.cod_sit_2, -1) AS cod_situacao_2
            ,  sit2.ds_sigla_situacao AS ds_sit_2
            ,  IFNULL(imp.nr_dias_letivos_2, '-') AS nr_dias_2

            ,	IFNULL(imp.ds_media_3, '***') AS ds_media_3
            ,	IFNULL(LEFT(imp.nr_ano_3, 4),'-') AS ds_ano_3
            ,	IFNULL(imp.nr_tot_faltas_3, '-') AS ds_totalfaltas_3
            ,	IFNULL(imp.vl_ch_3, '-') AS vl_ch_3
            ,	IFNULL(imp.cod_sit_3, -1) AS cod_situacao_3
            ,  sit3.ds_sigla_situacao AS ds_sit_3
            ,  IFNULL(imp.nr_dias_letivos_3, '-') AS nr_dias_3

            ,	IFNULL(imp.ds_media_4, '***') AS ds_media_4
            ,	IFNULL(LEFT(imp.nr_ano_4, 4),'-') AS ds_ano_4
            ,	IFNULL(imp.nr_tot_faltas_4, '-') AS ds_totalfaltas_4
            ,	IFNULL(imp.vl_ch_4, '-') AS vl_ch_4
            ,	IFNULL(imp.cod_sit_4, -1) AS cod_situacao_4
            ,  sit4.ds_sigla_situacao AS ds_sit_4
            ,  IFNULL(imp.nr_dias_letivos_4, '-') AS nr_dias_4

            ,	IFNULL(imp.ds_media_5, '***') AS ds_media_5
            ,	IFNULL(LEFT(imp.nr_ano_5, 4),'-') AS ds_ano_5
            ,	IFNULL(imp.nr_tot_faltas_5, '-') AS ds_totalfaltas_5
            ,	IFNULL(imp.vl_ch_5, '-') AS vl_ch_5
            ,	IFNULL(imp.cod_sit_5, -1) AS cod_situacao_5
            ,  sit5.ds_sigla_situacao AS ds_sit_5
            ,  IFNULL(imp.nr_dias_letivos_5, '-') AS nr_dias_5

            ,	IFNULL(imp.ds_media_6, '***') AS ds_media_6
            ,	IFNULL(LEFT(imp.nr_ano_6, 4),'-') AS ds_ano_6
            ,	IFNULL(imp.nr_tot_faltas_6, '-') AS ds_totalfaltas_6
            ,	IFNULL(imp.vl_ch_6, '-') AS vl_ch_6
            ,	IFNULL(imp.cod_sit_6, -1) AS cod_situacao_6
            ,  sit6.ds_sigla_situacao AS ds_sit_6
            ,  IFNULL(imp.nr_dias_letivos_6, '-') AS nr_dias_6

            ,	IFNULL(imp.ds_media_7, '***') AS ds_media_7
            ,	IFNULL(LEFT(imp.nr_ano_7, 4),'-') AS ds_ano_7
            ,	IFNULL(imp.nr_tot_faltas_7, '-') AS ds_totalfaltas_7
            ,	IFNULL(imp.vl_ch_7, '-') AS vl_ch_7
            ,	IFNULL(imp.cod_sit_7, -1) AS cod_situacao_7
            ,  sit7.ds_sigla_situacao AS ds_sit_7
            ,  IFNULL(imp.nr_dias_letivos_7, '-') AS nr_dias_7

            ,	IFNULL(imp.ds_media_8, '***') AS ds_media_8
            ,	IFNULL(LEFT(imp.nr_ano_8, 4),'-') AS ds_ano_8
            ,	IFNULL(imp.nr_tot_faltas_8, '-') AS ds_totalfaltas_8
            ,	IFNULL(imp.vl_ch_8, '-') AS vl_ch_8
            ,	IFNULL(imp.cod_sit_8, -1) AS cod_situacao_8
            ,  sit8.ds_sigla_situacao AS ds_sit_8
            ,  IFNULL(imp.nr_dias_letivos_8, '-') AS nr_dias_8

            ,	IFNULL(imp.ds_media_9, '***') AS ds_media_9
            ,	IFNULL(LEFT(imp.nr_ano_9, 4),'-') AS ds_ano_9
            ,	IFNULL(imp.nr_tot_faltas_9, '-') AS ds_totalfaltas_9
            ,	IFNULL(imp.vl_ch_9, '-') AS vl_ch_9
            ,	IFNULL(imp.cod_sit_9, -1) AS cod_situacao_9
            ,  sit9.ds_sigla_situacao AS ds_sit_9
            ,  IFNULL(imp.nr_dias_letivos_9, '-') AS nr_dias_9
            
            FROM
               matriculas mat
            INNER JOIN 
               fichaindividual fi ON (mat.codigoaluno = fi.codigoaluno AND fi.grau = 1)
            INNER JOIN 
               cursos_mestre cm ON (mat.curso = cm.CD_CURSO)
            INNER JOIN 
               turmas tu_mat ON (mat.turma = tu_mat.codigo AND mat.anosemestre = tu_mat.anosemestre)
            INNER JOIN 
               cursos_coligadas cc ON (tu_mat.cd_coligada = cc.CD_COLIGADA AND cm.CD_CURSO = cc.CD_CURSO)
            INNER JOIN 
               coligadas col ON (tu_mat.cd_coligada = col.cd_coligada)
            INNER JOIN 
               pessoas al ON (fi.codigoaluno = al.cd_pessoa)
            INNER JOIN
               imp_historico_ensino_fundamental imp ON (imp.cod_aluno = fi.codigoaluno AND imp.cod_disciplina = fi.disciplina)
            LEFT JOIN 
               turmas tu ON (fi.anosemestre = tu.anosemestre AND fi.turma = tu.codigo)
            LEFT JOIN 
               grades_disciplinas gd ON (
                  imp.cod_disciplina = gd.CD_DISCIPLINA AND 
                  imp.nr_etapa = gd.NR_SERIE AND 
                  imp.cod_curso = gd.CD_CURSO AND 
                  imp.cd_grade = gd.CD_GRADE
               )
            INNER JOIN 
               disciplinas di ON (fi.disciplina = di.codigo AND fi.curso = di.curso)
            INNER JOIN 
               situacao sit ON (fi.situacao = sit.cd_situacao)
            LEFT JOIN 
               disciplinas_categorias dc ON (gd.CD_DISCIPLINA_CATEGORIA = dc.cd_categoria)
            LEFT JOIN 
               pessoas pai ON (al.cd_pai = pai.cd_pessoa)
            LEFT JOIN 
               pessoas mae ON (al.cd_mae = mae.cd_pessoa)
            LEFT JOIN
               historico_escolas_series hes ON (hes.codigoaluno = fi.codigoaluno AND hes.grau = 1 AND hes.serie = fi.serie)
            LEFT JOIN
               historico_obs hist_obs ON (hist_obs.codigoaluno = al.cd_pessoa AND hist_obs.curso = fi.curso)
            LEFT JOIN
               situacao sit1 ON (sit1.cd_situacao = imp.cod_sit_1)
            LEFT JOIN
               situacao sit2 ON (sit2.cd_situacao = imp.cod_sit_2)
            LEFT JOIN
               situacao sit3 ON (sit3.cd_situacao = imp.cod_sit_3)
            LEFT JOIN
               situacao sit4 ON (sit4.cd_situacao = imp.cod_sit_4)
            LEFT JOIN
               situacao sit5 ON (sit5.cd_situacao = imp.cod_sit_5)
            LEFT JOIN
               situacao sit6 ON (sit6.cd_situacao = imp.cod_sit_6)
            LEFT JOIN
               situacao sit7 ON (sit7.cd_situacao = imp.cod_sit_7)
            LEFT JOIN
               situacao sit8 ON (sit8.cd_situacao = imp.cod_sit_8)
            LEFT JOIN
               situacao sit9 ON (sit9.cd_situacao = imp.cod_sit_9)
            WHERE
               1 = 1 AND
               fi.situacao <> 8 AND
               fi.grau = 1 AND 
               NOT fi.turma LIKE '%integral%'
            "" .
               ((!empty($arrParametros["":cd_coligada""]))
                  ? ""AND tu_mat.cd_coligada IN (:cd_coligada)""
                  : NULL
               )
            . ""
            "" .
               ((!empty($arrParametros["":cd_polo""]))
                  ? ""AND mat.cd_polo IN (:cd_polo)""
                  :  NULL
               )
            . ""
            "" .
               ((!empty($arrParametros["":nr_anosemestre""]))
                  ? ""AND mat.anosemestre IN (:nr_anosemestre)""
                  : NULL
               )
            . ""
            "" .
               ((!empty($arrParametros["":cd_curso""]))
                  ? ""AND cm.ID_CURSO IN (:cd_curso)""
                  : NULL
               )
            . ""
            "" .
               ((!empty($arrParametros["":cd_turma""]))
                  ? ""AND tu_mat.codigo IN (:cd_turma)""
                  : NULL
               )
            . ""
            "" .
               ((!empty($arrParametros["":cd_aluno""]))
                  ? ""AND mat.codigoaluno IN (:cd_aluno)""
                  : NULL
               )
            . ""
            GROUP BY
               fi.codigoaluno
               , di.descricao
            ORDER BY
               al.cd_pessoa
            ;
         "")
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cod_aluno"" => $arrFormatoInteiro,
                  ""nr_grau"" => $arrFormatoInteiro
               )
            )
         )
         ->saveTo($consulta);

      // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
      $consulta
         ->pipe($this->dataStore(""dados_consulta""));

      $consulta
         ->pipe(new Group(array(
            ""by"" => array(
               ""cod_aluno"",
               ""nr_grau""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cod_aluno"",
            ""nr_grau"",
            ""cd_coligada_cabecalho""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));

         $this->src('unimestre')->query(
            ""
               SELECT
               
                  mat.codigoaluno AS cod_aluno
               ,  mat.turma AS cod_turma
               ,  mat.curso AS cod_curso
               ,  CONCAT(hes.serie,'ª') AS serie
               ,  hes.ano AS ano
               ,  hes.ds_escola AS ds_escola
               ,  CONCAT(hes.ds_escola_cidade,'/',hes.ds_escola_estado) AS ds_cidade_estado

               FROM
                  matriculas mat
               INNER JOIN 
                  cursos_mestre cm ON (mat.curso = cm.CD_CURSO)
               INNER JOIN 
                  turmas tu_mat ON (mat.turma = tu_mat.codigo AND mat.anosemestre = tu_mat.anosemestre)
               INNER JOIN 
                  cursos_coligadas cc ON (tu_mat.cd_coligada = cc.CD_COLIGADA AND cm.CD_CURSO = cc.CD_CURSO)
               INNER JOIN 
                  coligadas col ON (tu_mat.cd_coligada = col.cd_coligada)
               INNER JOIN
                  historico_escolas_series hes ON (hes.codigoaluno = mat.codigoaluno AND hes.grau = 1)
               WHERE
                  1 = 1 AND
                  hes.ano <> 0
               "" .
                  ((!empty($arrParametros["":cd_coligada""]))
                     ? ""AND col.cd_coligada IN (:cd_coligada)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_polo""]))
                     ? ""AND mat.cd_polo IN (:cd_polo)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":nr_anosemestre""]))
                     ? ""AND mat.anosemestre IN (:nr_anosemestre)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_curso""]))
                     ? ""AND cm.id_curso IN (:cd_curso)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_turma""]))
                     ? ""AND tu_mat.codigo IN (:cd_turma)""
                     : NULL
                  )
               . ""
               "" .
                  ((!empty($arrParametros["":cd_aluno""]))
                     ? ""AND mat.codigoaluno IN (:cd_aluno)""
                     : NULL
                  )
               . ""
               GROUP BY
                  hes.codigoaluno
               ,  hes.ano
               ;
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cod_aluno"" => $arrFormatoInteiro,
                  ""serie"" => $arrFormatoInteiro,
                  ""ano"" => $arrFormatoInteiro
               )
            )
         )
         ->saveTo($consulta_historico_anterior);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
         $consulta_historico_anterior->pipe($this->dataStore(""dados_consulta_historico_anterior""));

      $this->src('unimestre')->query(
         ""
            SELECT
               us.cd_pessoa AS cod_usuario
            ,  us.nm_pessoa AS nm_usuario
            ,  IFNULL(rl.ds_chave,'------') AS ds_chave_rel
            FROM
               pessoas us
            INNER JOIN
               rgo_logs_impressoes rli ON (rli.cd_pessoa = us.cd_pessoa)
            INNER JOIN
               rgo_relatorios rl ON (rl.cd_relatorio = rli.cd_relatorio)
            WHERE
               rli.cd_relatorio = "" . $this->arrDadosGerais->cd_relatorio . ""
            ORDER BY
               rli.dt_impressao DESC
            LIMIT 1
         ""
      )
      ->saveTo($dados_footer);

      $dados_footer->pipe($this->dataStore(""dados_rodape""));

require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									
									
   }
}","<?php

use \koolreport\widgets\koolphp\Table;
use \koolreport\processes\Filter;

// path pasta
$path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

// margens
$ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
$ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
$ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
$ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

$sn_geracao = $_POST[""pdf""];

//usuario impressao
$usuario = $this->dataStore(""dados_rodape"")[0][""nm_usuario""];

//chave relatorio
$chave_relatorio = $this->dataStore(""dados_rodape"")[0][""ds_chave_rel""];

?>

<html>
   <head>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>

      <style>
         .borda {
            border: 1px solid #dee2e6;
         }         
         .totalizador {
            min-height: 0cm !important;
         }
         .fonte {
            font-size: 11px !important;
         }
         .b {
            font-weight: bold !important;
         }
         ul li {
            font-size: 11px !important;
         }
         .rodape {
            font-size: 9px !important;
         }
         .fundo {
            background-color: #cccccc !important;
         }
      </style>

   </head>

   <body class=""relatorio"">
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

      <?php

         foreach($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao){
            $dados_pagina = $this->dataStore(""dados_consulta"")
               ->filter(
                  ""cod_aluno"",""="",$visualizacao[""cod_aluno""]
               )
               ->filter(
                  ""nr_grau"",""="",$visualizacao[""nr_grau""]
               );

            $dados_hist_anterior = $this->dataStore(""dados_consulta_historico_anterior"")
               ->filter(
                  ""cod_aluno"",""="",$visualizacao[""cod_aluno""]
               );

      ?>

            <div class=""container"">
               <div
                  class=""conteudo""
                  style=""
                     padding-top: <?=((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm'?>;
                     padding-bottom: <?=((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm'?>;
                     padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                     padding-right: <?=$ds_margem_direita . 'cm'?>;
                     min-height: 28.1cm;
                     ""
               >
                  
                  <div style=""vertical-align: top; min-height: 100;"">

                     <table style=""width: 100%;"">
                        <tr>
                           <td style=""text-align: left; width: 55%;"">
                              <?php
                                 require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','cabecalho.php'));
                              ?>
                           </td>
                           <td style=""text-align: right; max-width: 45%;"">
                              <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','filtro.php')); ?>
                           </td>
                        </tr>
                     </table>

                  </div>

                  <div>

                     <h5 class=""text-center"" style=""margin: 0.25rem;"">
                        <?=$this->arrDadosGerais->nm_relatorio?>
                     </h5>

                     <table class=""table"">
                        <tr>
                           <td colspan=""3"" class=""border p-1 fonte"">
                              Aluno(a): <span class=""fonte b""><?= $dados_pagina[0]['nm_aluno'] ?></span>
                           </td>
                           <td class=""border p-1 fonte"">
                              Gênero: <?= $dados_pagina[0]['ds_sexo_aluno'] ?>
                           </td>
                        </tr>
                        <tr>
                           <td class=""border p-1 fonte"">
                              Matricula: <span class=""fonte b""><?= $dados_pagina[0]['cod_aluno'] ?></span>
                           </td>
                           <td class=""border p-1 fonte"">
                              RG: <span class=""fonte b""><?= $dados_pagina[0]['ds_rg_aluno'] ?></span> / <span class=""fonte b""><?= $dados_pagina[0]['ds_rg_orgao_exp_aluno'] ?></span>
                           </td>
                           <td class=""border p-1 fonte"">
                              CPF: <span class=""fonte b""><?= $dados_pagina[0]['ds_cpf_aluno'] ?></span>
                           </td>
                           <td class=""border p-1 fonte"">
                              Nacionalidade: <?= $dados_pagina[0]['ds_nacionalidade'] ?>
                           </td>
                        </tr>
                        <tr>
                           <td class=""border p-1 fonte"">
                              Data de Nascimento: <?= $dados_pagina[0]['dt_nascimento'] ?>
                           </td>
                           <td colspan=""2"" class=""border p-1 fonte"">
                              Município: <?= $dados_pagina[0]['ds_cidade_nasc'] ?>
                           </td>
                           <td class=""border p-1 fonte"">
                              UF: <?= $dados_pagina[0]['ds_estado_nasc'] ?>
                           </td>
                        </tr>
                        <tr>
                           <td colspan=""2"" class=""border p-1 fonte"">
                              Nome do Pai: <?= $dados_pagina[0]['ds_nome_pai'] ?>
                           </td>
                           <td colspan=""2"" class=""border p-1 fonte"">
                              Nome da Mãe: <?= $dados_pagina[0]['ds_nome_mae'] ?>
                           </td>
                        </tr>
                     </table>

                     <?php
                  
                        Table::create(array(
                           ""dataStore""=>$dados_pagina,
                           ""grouping""=>array(                        
                              ""cod_aluno""=>array(
                                 ""calculate""=>array(
                                    ""{somach1}""=>array(""sum"",""vl_ch_1""),
                                    ""{somach2}""=>array(""sum"",""vl_ch_2""),
                                    ""{somach3}""=>array(""sum"",""vl_ch_3""),
                                    ""{somach4}""=>array(""sum"",""vl_ch_4""),
                                    ""{somach5}""=>array(""sum"",""vl_ch_5""),
                                    ""{somach6}""=>array(""sum"",""vl_ch_6""),
                                    ""{somach7}""=>array(""sum"",""vl_ch_7""),
                                    ""{somach8}""=>array(""sum"",""vl_ch_8""),
                                    ""{somach9}""=>array(""sum"",""vl_ch_9""),
                                    ""{somafaltas1}""=>array(""sum"",""ds_totalfaltas_1""),
                                    ""{somafaltas2}""=>array(""sum"",""ds_totalfaltas_2""),
                                    ""{somafaltas3}""=>array(""sum"",""ds_totalfaltas_3""),
                                    ""{somafaltas4}""=>array(""sum"",""ds_totalfaltas_4""),
                                    ""{somafaltas5}""=>array(""sum"",""ds_totalfaltas_5""),
                                    ""{somafaltas6}""=>array(""sum"",""ds_totalfaltas_6""),
                                    ""{somafaltas7}""=>array(""sum"",""ds_totalfaltas_7""),
                                    ""{somafaltas8}""=>array(""sum"",""ds_totalfaltas_8""),
                                    ""{somafaltas9}""=>array(""sum"",""ds_totalfaltas_9""),
                                    ""{situacao1}""=>array(""max"",""ds_sit_1""),
                                    ""{situacao2}""=>array(""max"",""ds_sit_2""),
                                    ""{situacao3}""=>array(""max"",""ds_sit_3""),
                                    ""{situacao4}""=>array(""max"",""ds_sit_4""),
                                    ""{situacao5}""=>array(""max"",""ds_sit_5""),
                                    ""{situacao6}""=>array(""max"",""ds_sit_6""),
                                    ""{situacao7}""=>array(""max"",""ds_sit_7""),
                                    ""{situacao8}""=>array(""max"",""ds_sit_8""),
                                    ""{situacao9}""=>array(""max"",""ds_sit_9""),
                                    ""{ano1}""=>array(""max"",""ds_ano_1""),
                                    ""{ano2}""=>array(""max"",""ds_ano_2""),
                                    ""{ano3}""=>array(""max"",""ds_ano_3""),
                                    ""{ano4}""=>array(""max"",""ds_ano_4""),
                                    ""{ano5}""=>array(""max"",""ds_ano_5""),
                                    ""{ano6}""=>array(""max"",""ds_ano_6""),
                                    ""{ano7}""=>array(""max"",""ds_ano_7""),
                                    ""{ano8}""=>array(""max"",""ds_ano_8""),
                                    ""{ano9}""=>array(""max"",""ds_ano_9""),
                                    ""{diaslet1}""=>array(""max"",""nr_dias_1""),
                                    ""{diaslet2}""=>array(""max"",""nr_dias_2""),
                                    ""{diaslet3}""=>array(""max"",""nr_dias_3""),
                                    ""{diaslet4}""=>array(""max"",""nr_dias_4""),
                                    ""{diaslet5}""=>array(""max"",""nr_dias_5""),
                                    ""{diaslet6}""=>array(""max"",""nr_dias_6""),
                                    ""{diaslet7}""=>array(""max"",""nr_dias_7""),
                                    ""{diaslet8}""=>array(""max"",""nr_dias_8""),
                                    ""{diaslet9}""=>array(""max"",""nr_dias_9"")
                                 ),
                                 ""top""=>""<td rowspan='2' class='fonte text-center p-1 b borda' style='width: 35%; vertical-align: middle;'>DISCIPLINAS</td>
                                 <td class='fonte b text-center p-1 borda' style='width: 7.2%'>1° Ano</td>
                                 <td class='fonte b text-center p-1 borda' style='width: 7.2%'>2° Ano</td>
                                 <td class='fonte b text-center p-1 borda' style='width: 7.2%'>3° Ano</td>
                                 <td class='fonte b text-center p-1 borda' style='width: 7.2%'>4° Ano</td>
                                 <td class='fonte b text-center p-1 borda' style='width: 7.2%'>5° Ano</td>
                                 <td class='fonte b text-center p-1 borda' style='width: 7.2%'>6° Ano</td>
                                 <td class='fonte b text-center p-1 borda' style='width: 7.2%'>7° Ano</td>
                                 <td class='fonte b text-center p-1 borda' style='width: 7.2%'>8° Ano</td>
                                 <td class='fonte b text-center p-1 borda' style='width: 7.2%'>9° Ano</td>
                                 <tr>
                                    <td class='fonte b text-center p-1 borda fundo' style='width: 7.2%'>{ano1}</td>
                                    <td class='fonte b text-center p-1 borda fundo' style='width: 7.2%'>{ano2}</td>
                                    <td class='fonte b text-center p-1 borda fundo' style='width: 7.2%'>{ano3}</td>
                                    <td class='fonte b text-center p-1 borda fundo' style='width: 7.2%'>{ano4}</td>
                                    <td class='fonte b text-center p-1 borda fundo' style='width: 7.2%'>{ano5}</td>
                                    <td class='fonte b text-center p-1 borda fundo' style='width: 7.2%'>{ano6}</td>
                                    <td class='fonte b text-center p-1 borda fundo' style='width: 7.2%'>{ano7}</td>
                                    <td class='fonte b text-center p-1 borda fundo' style='width: 7.2%'>{ano8}</td>
                                    <td class='fonte b text-center p-1 borda fundo' style='width: 7.2%'>{ano9}</td>
                                 </tr>
                                 "",
                                 ""bottom""=>""<td class='fonte b p-1 borda fundo'>Dias Letivos</td>
                                 <td class='fonte b p-1 text-center borda fundo'>{diaslet1}</td>
                                 <td class='fonte b p-1 text-center borda fundo'>{diaslet2}</td>
                                 <td class='fonte b p-1 text-center borda fundo'>{diaslet3}</td>
                                 <td class='fonte b p-1 text-center borda fundo'>{diaslet4}</td>
                                 <td class='fonte b p-1 text-center borda fundo'>{diaslet5}</td>
                                 <td class='fonte b p-1 text-center borda fundo'>{diaslet6}</td>
                                 <td class='fonte b p-1 text-center borda fundo'>{diaslet7}</td>
                                 <td class='fonte b p-1 text-center borda fundo'>{diaslet8}</td>
                                 <td class='fonte b p-1 text-center borda fundo'>{diaslet9}</td>
                                 <tr>
                                    <td class='fonte b p-1 borda fundo'>Total de Faltas</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{somafaltas1}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{somafaltas2}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{somafaltas3}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{somafaltas4}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{somafaltas5}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{somafaltas6}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{somafaltas7}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{somafaltas8}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{somafaltas9}</td>
                                 </tr>
                                 <tr>
                                    <td class='fonte b p-1 borda fundo'>Carga Horária Total</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{somach1}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{somach2}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{somach3}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{somach4}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{somach5}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{somach6}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{somach7}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{somach8}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{somach9}</td>
                                 </tr>
                                 <tr>
                                    <td class='fonte b p-1 borda fundo'>Resultado Final</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{situacao1}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{situacao2}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{situacao3}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{situacao4}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{situacao5}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{situacao6}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{situacao7}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{situacao8}</td>
                                    <td class='fonte b p-1 text-center borda fundo'>{situacao9}</td>
                                 </tr>
                                 ""
                              )
                        ),
                           ""showHeader""=>false,
                           ""columns""=>array(
                              ""ds_disciplina""=>array(
                                 ""cssStyle""=>""text-align: left;""
                              ),
                              ""ds_media_1""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""ds_media_2""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""ds_media_3""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""ds_media_4""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""ds_media_5""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""ds_media_6""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""ds_media_7""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""ds_media_8""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""ds_media_9""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              )
                           ),
                           ""cssClass""=>array(
                              ""table""=>""table table-striped table-hover"",
                              ""tr""=>""tabela fonte p-1"",
                              ""th""=>""tabela fonte p-1"",
                              ""td""=>""tabela fonte p-1 borda"",
                              ""tf""=>""tabela fonte p-1"",
                           ),
                           ""sorting""=>array(
                              ""nr_ordem""=>""asc"",
                              ""ds_disciplina""=>""asc""
                           )
                        ));

                     ?>

                     <?php

                     if($this->dataStore(""dados_consulta_historico_anterior"")->filter(""cod_aluno"",""="",$visualizacao[""cod_aluno""])->isNotEmpty()){

                        Table::create(array(
                           ""dataStore""=>$dados_hist_anterior,
                           ""grouping""=>array(                        
                              ""cod_aluno""=>array(
                                 ""top""=>""<td class='fonte text-center p-1 b borda' style='width: 10%;'>SÉRIE</td>
                                 <td class='fonte b text-center p-1 borda' style='width: 10%'>ANO</td>
                                 <td class='fonte b text-center p-1 borda' style='width: 60%'>ESTABELECIMENTO DE ENSINO</td>
                                 <td class='fonte b text-center p-1 borda' style='width: 20%'>CIDADE/ESTADO</td>
                                 "",
                                 ""bottom""=>""""
                              )
                           ),
                           ""showHeader""=>false,
                           ""columns""=>array(
                              ""serie""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""ano""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""ds_escola""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              ),
                              ""ds_cidade_estado""=>array(
                                 ""cssStyle""=>""text-align: center;""
                              )
                           ),
                           ""cssClass""=>array(
                              ""table""=>""table table-striped table-hover"",
                              ""tr""=>""tabela fonte p-1"",
                              ""th""=>""tabela fonte p-1"",
                              ""td""=>""tabela fonte p-1 borda"",
                              ""tf""=>""tabela fonte p-1"",
                           ),
                           ""sorting""=>array(
                              ""serie""=>""asc""
                           )
                        ));
                           
                     }

                     ?>

                        <?php
                        
                        if ($this->dataStore(""dados_consulta"")->filter(""cod_aluno"", ""="", $dados_pagina[""cod_aluno""])->isNotEmpty()) {

                           ?>

                        <div class=""text-justify p-2 fonte borda"" style=""min-height: 2cm;"">
                                    <span class=""p-1 b fonte"">Observações</span>
                                    <br />
                                    <br />
                                    <?= $dados_pagina[0]['ds_obs_hist'] ?>
                                 </div>

                        <?php

                           }
                        ?>

                     <div class=""text-right fonte b mt-3"">
                        <?= $dados_pagina[0]['ds_cidade_coligada'] ?>, <?= $dados_pagina[0]['dt_atual'] ?>
                     </div>

                     <table class=""mt-4"" style=""width: 100%;"">
                        <tr>
                           <td style=""width: 50%;"" class=""text-center fonte p-1"">
                              <div style=""width: 80%; margin: auto;"">
                                 <hr style=""margin-bottom: 0.5rem; margin-top 0.5rem;"">
                                 <span class=""fonte b""><?= $dados_pagina[0]['ds_secretaria_coligada'] ?><br />Ato <?= $dados_pagina[0]['ds_ato_secretaria_coligada'] ?></span>
                              </div>
                           </td>
                           <td style=""width: 50%;"" class=""text-center fonte p-1"">
                              <div style=""width: 80%; margin: auto;"">
                                 <hr style=""margin-bottom: 0.5rem; margin-top 0.5rem;"">
                                 <span class=""fonte b""><?= $dados_pagina[0]['ds_diretor_coligada'] ?><br />Ato <?= $dados_pagina[0]['ds_ato_diretor_coligada'] ?></span>
                              </div>
                           </td>
                        </tr>
                     </table>

                  </div>

                  <div class=""page-break"" style=""page-break-after: always;""></div>

               </div>

               <div style=""text-align: right; padding-bottom: <?= $ds_margem_inferior . 'cm' ?>; padding-right: <?= $ds_margem_esquerda . 'cm' ?>; padding-left: <?= $ds_margem_direita . 'cm' ?>;"">
                  <hr>
                  <div class=""float-left rodape text-left"" style=""width: 80%; vertical-align: middle !important;"">
                     <img class=""float-left"" src=""../image/logo_rodape_unimestre_v3"" alt="""">
                     <div class=""ml-3 float-left rodape"">Impresso por: <?= $usuario ?> - <?= $chave_relatorio ?></div>
                  </div>
                  <div class=""float-right rodape text-right"" style=""width: 20%;"">
                  </div>
               </div>

            </div>

         <?php

         }

      ?>

   </body>
</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[
	{
		""tipo"": ""uni-select-coligada-filha"",
		""obrigatorio"": false,
		""label"": ""Unidade"",
		""ds_campo"": ""cd_coligada""
	},
	{
		""tipo"": ""uni-select-polo"",
		""obrigatorio"": false,
		""label"": ""Polo"",
		""ds_campo"": ""cd_polo""
	},
	{
		""tipo"": ""campo-anosemestre"",
		""obrigatorio"": true,
		""label"": ""Ano/semestre"",
		""ds_campo"": ""nr_anosemestre""
	},
	{
		""tipo"": ""uni-select-curso"",
		""obrigatorio"": true,
		""label"": ""Curso"",
		""ds_campo"": ""cd_curso""
	},
	{
		""tipo"": ""uni-busca-turma"",
		""obrigatorio"": false,
		""label"": ""Turma"",
		""ds_campo"": ""cd_turma""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Aluno"",
		""ds_campo"": ""cd_aluno""
	}
]",84,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,10,1,""Histórico Escolar - Ensino Fundamental"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,1, NULL, NULL,""rel_historico_ensino_fund"",""2024-01-26 09:45:52"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Homologação,Boletim - Média/Falta,"<?php
$PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
require_once($PARMS['PASTA'] . 'nucleo.php');
require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
header('Content-type: text/html; charset=UTF-8');

use \koolreport\processes\ColumnMeta;
use \koolreport\processes\Group;
use \koolreport\processes\OnlyColumn;

// classe padrao do relatorio
class Relatorio extends \koolreport\KoolReport
{
   use \koolreport\bootstrap4\Theme;
   use \koolreport\inputs\Bindable;
   use \koolreport\inputs\POSTBinding;
   use \koolreport\export\Exportable;

   public $path_include;
   public $arrDadosFiltro;
   public $arrDadosGerais;

   public function __construct()
   {
      try {
         $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
         parent::__construct();
      } catch (Exception $e) {
         echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
         die;
      }
   }

   // inicializacao dos filtros
   function defaultParamValues()
   {
      return array(
         ""filtros"" => '{}',
         ""gerais"" => '{}'
      );
   }

   // resgate do $_POST para vinculo com os parametros
   function bindParamsToInputs()
   {
      return array(
         ""filtros"",
         ""gerais""
      );
   }

   // funcao responsavel por realizar a conexao com o banco de dados
   // e resgate dos dados tratamento dos dados do $_POST
   public function settings()
   {
      Nucleo::import('relatorios.RelatoriosConexao');
      $objRelatoriosConexao = new RelatoriosConexao;

      return $objRelatoriosConexao->settings();
   }

   // funcao responsavel por manter as consultas a serem executadas pelo relatorio
   // e geracao dos array de dados para uso posterior na visualizacao
   public function setup()
   {
      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

      if (ctype_xdigit($_POST[""filtros""])) {
         $_POST[""filtros""] = hex2bin($_POST[""filtros""]);
      }

      if (ctype_xdigit($_POST[""gerais""])) {
         $_POST[""gerais""] = hex2bin($_POST[""gerais""]);
      }

      if (isset($_POST['filtros'])) {
         $this->arrDadosFiltro = json_decode($_POST['filtros']);
      } else {
         $this->arrDadosFiltro = json_decode($_POST);
      }

      if (isset($_POST['gerais'])) {
         $this->arrDadosGerais = json_decode($_POST['gerais']);
      }

      $arrParametros = [];

      foreach ($this->arrDadosFiltro as $filtro => $valor) {
         if (!empty($valor->ds_valor)) {
            $arrParametros["":"" . $filtro] = $valor->ds_valor;
         }
      }

      $this
         ->src('unimestre')
         ->query(""
            SELECT
               # INFORMAÇÕES DE CABEÇALHO
                t.cd_coligada AS cd_coligada_cabecalho
                ,  p.cd_pessoa AS 'cd_pessoa'
                ,  p.nm_pessoa AS 'nm_pessoa'
                ,  m.anosemestre AS 'nr_anosemestre'
                ,  IF(LENGTH(m.anosemestre) = 5,
                    CONCAT(LEFT(m.anosemestre, 4), '/', RIGHT(m.anosemestre, 1)),
                    m.anosemestre
                    ) AS 'nr_anosemestre_formatado'
                , cm.DS_CURSO AS 'ds_curso'
                ,  t.codigo AS 'cd_turma'

               #NOTAS E DISCIPLINAS
                ,  d.descricao AS 'ds_disciplina'
                ,  tu.descricao AS 'ds_turno'
                ,  s.ds_situacao AS 'ds_situacao_matricula'
                ,  f.frequencia AS 'vl_frequencia'

                # ETAPA 1
                ,  ifnull(if(f.nota1 > 10,f.nota1,format(f.nota1,2)),'-') AS 'vl_nota_d1'
								,  ifnull(if(f.exame1 > 10,f.exame1,format(f.exame1,2)),'-') AS 'vl_rec_d1'										                
                ,  ifnull(if(f.nota_d1 > 10,f.nota_d1,format(f.nota_d1,2)),'-') AS 'vl_mb_d1'
                ,  ifnull(format(f.falta1,0),'-') AS 'nr_falta1'


                # ETAPA 2
                ,  ifnull(if(f.nota2 > 10,f.nota2,format(f.nota2,2)),'-') AS 'vl_nota_d2'
								,  ifnull(if(f.exame2 > 10,f.exame2,format(f.exame2,2)),'-') AS 'vl_rec_d2'
                ,  ifnull(if(f.nota_d2 > 10,f.nota_d2,format(f.nota_d2,2)),'-') AS 'vl_mb_d2'
                ,  ifnull(format(f.falta2,0),'-') AS 'nr_falta2'
								
								#REC. SEMESTRAL
								,  ifnull(format(f.nota_d5,2),'-') AS 'vl_nota_rs1'
								,  ifnull(format(f.nota_d6,2),'-') AS 'vl_nota_rs2'

                # ETAPA 3
                ,  ifnull(if(f.nota3 > 10,f.nota3,format(f.nota3,2)),'-') AS 'vl_nota_d3'
								,  ifnull(if(f.exame3 > 10,f.exame3,format(f.exame3,2)),'-') AS 'vl_rec_d3'
                ,  ifnull(if(f.nota_d3 > 10,f.nota_d3,format(f.nota_d3,2)),'-') AS 'vl_mb_d3'
                ,  ifnull(format(f.falta3,0),'-') AS 'nr_falta3'

                # ETAPA 4
                ,  ifnull(if(f.nota4 > 10,f.nota4,format(f.nota4,2)),'-') AS 'vl_nota_d4'
								,  ifnull(if(f.exame4 > 10,f.exame4,format(f.exame4,2)),'-') AS 'vl_rec_d4'
                ,  ifnull(if(f.nota_d4 > 10,f.nota_d4,format(f.nota_d4,2)),'-') AS 'vl_mb_d4'
                ,  ifnull(format(f.falta4,0),'-') AS 'nr_falta4'


                # ETAPA FINAL
								,  ifnull(if(f.mediaanual > 10,f.mediaanual,format(f.mediaanual,2)),'-') AS 'vl_media_anual'
								,  ifnull(if(f.notaexame > 10,f.notaexame,format(f.notaexame,2)),'-') AS 'vl_nota_exame'
								,  ifnull(if(f.mediaFinal > 10,f.mediaFinal,format(f.mediaFinal,2)),'-') AS 'vl_media_final'
                ,  ifnull(format(f.totalfaltas,0),'-') AS 'total_faltas'
                ,  si.ds_sigla_situacao AS 'ds_situacao_fichaindividual'

                # PARAMETROS DE AVALIACAO
                ,  apm.nr_avaliacoes AS 'nr_avaliacoes'
                ,  cpa.ds_periodo_abreviado AS 'ds_periodo_abreviado'
								,	 cpa.ds_periodicidade AS 'ds_periodicidade'
								
            FROM
                matriculas AS m
                INNER JOIN fichaindividual AS f ON (
                    f.anosemestre = m.anosemestre AND
                    f.turmamatricula = m.turma AND
                    f.codigoaluno = m.codigoaluno
                )
               INNER JOIN situacao AS s ON (s.cd_situacao = m.situacao)
               INNER JOIN situacao AS si ON (si.cd_situacao = f.situacao)
               INNER JOIN pessoas AS p ON (p.cd_pessoa = f.codigoaluno)
               INNER JOIN turmas AS t ON (t.anosemestre = f.anosemestre AND t.codigo = f.turmamatricula)
               INNER JOIN grades AS g ON (g.CD_GRADE = t.cd_grade AND g.CD_CURSO = t.curso)
               INNER JOIN turnos AS tu ON (tu.codigo = t.turno)
               INNER JOIN cursos_coligadas AS cc ON (cc.CD_CURSO = t.curso AND cc.CD_COLIGADA = t.cd_coligada)
               INNER JOIN cursos_mestre AS cm ON (cm.CD_CURSO = cc.CD_CURSO)
               INNER JOIN disciplinas AS d ON (d.codigo = f.disciplina AND d.curso = f.curso)
               INNER JOIN avaliacoes_parametros_matriz AS apm ON (apm.cd_avaliacao = t.cd_avaliacao)
               INNER JOIN cursos_periodos_avaliacoes AS cpa ON (cpa.cd_periodo_avaliacao = apm.cd_periodo_avaliacao)
            WHERE
               1=1
               "" .
               ((!empty($arrParametros["":cd_polo""]))
                  ? ""AND m.cd_polo IN (:cd_polo) ""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":nr_anosemestre""]))
                  ? ""AND f.anosemestre IN (:nr_anosemestre)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":id_curso""]))
                  ? ""AND cm.ID_CURSO IN (:id_curso)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":cd_turma""]))
                  ? ""AND f.turma IN (:cd_turma)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":cd_pessoa""]))
                  ? ""AND f.codigoaluno IN (:cd_pessoa)""
                  : NULL)
               . ""
            GROUP BY
               f.codigoaluno, f.turmamatricula, f.anosemestre, f.disciplina
            ORDER BY
               f.codigoaluno, f.turmamatricula, f.anosemestre, d.ordem
         "")
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_pessoa"" => $arrFormatoInteiro,
                  ""nr_anosemestre"" => $arrFormatoInteiro,
                  ""id_curso"" => $arrFormatoInteiro,
                  ""cd_disciplina"" => $arrFormatoInteiro,
                  ""nr_ordem"" => $arrFormatoInteiro,
                  ""cd_grade"" => $arrFormatoInteiro,
                  ""vl_frequencia"" => $arrFormatoInteiro,
                  ""nr_falta1"" => $arrFormatoInteiro,
                  ""nr_falta2"" => $arrFormatoInteiro,
                  ""nr_falta3"" => $arrFormatoInteiro,
                  ""nr_falta4"" => $arrFormatoInteiro
               )
            )
         )
         ->saveTo($consulta);

      // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
      $consulta
         ->pipe($this->dataStore(""dados_consulta""));

      $consulta
         ->pipe(new Group(array(
            ""by"" => array(
               ""cd_pessoa"",
               ""nr_anosemestre"",
               ""cd_turma""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_pessoa"",
            ""nr_anosemestre"",
            ""cd_turma""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));

require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									
									
   }
}
","<?php

   use \koolreport\widgets\koolphp\Table;
   use \koolreport\processes\Filter;

   // path pasta
   $path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

   // margens
   $ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
   $ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
   $ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
   $ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

   $sn_geracao = $_POST[""pdf""];

?>

<html>
   <head>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
      <style>
         .borda {
            border: 1px solid #dee2e6;
         }         
         .totalizador {
         min-height: 0cm !important;
         }
         .fonte {
            font-size: 11px !important;
         }
         .b {
            font-weight: bold !important;
         }
         ul li {
            font-size: 11px !important;
         }
         .rodape {
            font-size: 9px !important;
         }
      </style>
   </head>

   <body class=""relatorio"">
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

      <?php foreach($this->dataStore(""dados_consulta_agrupado"") as $visualizacao) { ?>
         <?php
            $dados_pagina = $this->dataStore(""dados_consulta"")
               ->filter(
                  ""cd_pessoa"",""="",$visualizacao[""cd_pessoa""]
               )
               ->filter(
                  ""nr_anosemestre"",""="",$visualizacao[""nr_anosemestre""]
               )
               ->filter(
                  ""cd_turma"",""="",$visualizacao[""cd_turma""]
               );
         ?>

         <div class=""container"">
            <div
               class=""conteudo""
               style=""
                  padding-top: <?=((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm'?>;
                  padding-bottom: <?=((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm'?>;
                  padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                  padding-right: <?=$ds_margem_direita . 'cm'?>;
                  min-height: 28.1cm;
            "">

               <div style=""vertical-align: top; min-height: 100;"">
                  <table style=""width: 100%;"">
                     <tr>
                        <td style=""text-align: left; width: 55%;"">
                           <?php
                              require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','cabecalho.php'));
                           ?>
                        </td>
                        <td style=""text-align: right; max-width: 45%;"">
                           <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','filtro.php')); ?>
                        </td>
                     </tr>
                  </table>
               </div>

                <h5 class=""text-center"" style=""margin: 0.25rem;"">
                    Boletim Escolar
                </h5>

               <table class=""table table-bordered"">
                  <tr>
                     <td colspan=""2"" class=""text-left fonte p-1"">Nome: <?=$dados_pagina[0]['nm_pessoa']?></td>
                     <td class=""text-left fonte p-1"">Matrícula: <?=$dados_pagina[0]['cd_pessoa']?></td>
                  </tr>
                  <tr>
                     <td colspan=""2"" class=""text-left fonte p-1"">Curso: <?=$dados_pagina[0]['ds_curso']?></td>
                     <td class=""text-left fonte p-1"">Período: <?=$dados_pagina[0]['nr_anosemestre_formatado']?></td>
                  </tr>
                  <tr>
                     <td class=""text-left fonte p-1"">Turma: <?=$dados_pagina[0]['cd_turma']?></td>
                     <td class=""text-left fonte p-1"">Turno: <?=$dados_pagina[0]['ds_turno']?></td>
                     <td class=""text-left fonte p-1"">Situação: <?=$dados_pagina[0]['ds_situacao_matricula']?></td>
                  </tr>
               </table>

               <?php
                  // Definicao dos campos que irao compor o relatorio
                  $htmlCamposCabecalho1 = ""<td rowspan='2' style='vertical-align : middle;'>Disciplinas</td>"";
                  $htmlCamposCabecalho2 = """";

                  $arrCamposDetalhe = [];
                  $arrCamposDetalhe[""ds_disciplina""] = array(""cssStyle""=>""text-align:left;"");

                  for ($i = 1; $i <= $dados_pagina[0]['nr_avaliacoes']; $i++) {
                    $htmlCamposCabecalho1 .= ""<td class='text-center' colspan='2'>"" . $i . ""º "" . $dados_pagina[0]['ds_periodo_abreviado'] . ""</td>"";
                    $htmlCamposCabecalho2 .= ""<td class='text-center text-label'>MB</td><td class='text-center text-label'>F</td>"";
					          $arrCamposDetalhe['vl_mb_d' . $i] = array(""cssStyle""=>""text-align:center;"");	
										$arrCamposDetalhe['nr_falta'  . $i] = array(""cssStyle""=>""text-align:center;"");
                  }

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>MA</td>"";
                  $arrCamposDetalhe['vl_media_anual'] = array(""cssStyle""=>""text-align:center;"");
                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>RF</td>"";
                  $arrCamposDetalhe['vl_nota_exame'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>MF</td>"";
                  $arrCamposDetalhe['vl_media_final'] = array(""cssStyle""=>""text-align:center;"");
									
				          $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>TF</td>"";
                  $arrCamposDetalhe['total_faltas'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>Fr.(%)</td>"";
                  $arrCamposDetalhe['vl_frequencia'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>Sit</td>"";
                  $arrCamposDetalhe['ds_situacao_fichaindividual'] = array(""cssStyle""=>""text-align:center;"");

                  Table::create(array(
                     ""dataSource""=>$dados_pagina,
                     ""grouping""=>array(
                        ""cd_pessoa""=>array(
                           ""calculate""=>"""",
                           ""top""=>$htmlCamposCabecalho1,
                           ""bottom""=>"""",
                        ),
                        ""cd_curso""=>array(
                           ""calculate""=>"""",
                           ""top""=>$htmlCamposCabecalho2,
                           ""bottom""=>"""",
                        ),
                     ),
                     ""showHeader""=>false,
                     ""showFooter""=>false,
                     ""columns""=>$arrCamposDetalhe,
                     ""cssClass""=>array(
                        ""table""=>""table-bordered table-striped table-sm fonte p-1"",
                        ""tf""=>""darker"",
                        ""tr"" => ""fonte p-1"",
                        ""td"" => ""fonte p-1""
                     ),
                     ""sorting""=>array(
                        ""nr_ordem""=>""asc""
                     )
                  ));
               ?>

                <table class=""table table-bordered"">
                  <tr>
                      <td rowspan=""3"" class=""text-left fonte p-1"" style=""vertical-align: middle !important;"">Legendas</td>
                  </tr>
                  <tr>
                     <td class=""text-left fonte p-1"" style=""border: none;"">MB: Média <?= $dados_pagina[0]['ds_periodicidade'] ?></td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">F: Faltas <?= $dados_pagina[0]['ds_periodicidade'] ?></td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">MA: Média Anual</td>
										 <td class=""text-left fonte p-1"" style=""border: none;"">F: Recuperação Final</td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">MF: Média final</td>
										 <td class=""text-left fonte p-1"" style=""border: none;"">TF: Total de faltas</td>
                  </tr>
                  <tr>
                     <td class=""text-left fonte p-1"" style=""border: none;"">Fr.(%): Frequência anual</td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">Sit: Situação na disciplina</td>
                  </tr>
               </table>

				<div style=""text-align: right; padding-bottom: <?= $ds_margem_inferior . 'cm' ?>;"">
				    <hr>
					<div class=""float-left rodape text-left"" style=""width: 80%; vertical-align: middle !important;"">
						<img class=""float-left"" src=""../image/logo_rodape_unimestre_v3"" alt="""">
                        <div class=""ml-3 float-left rodape"">Impresso por: <?= $usuario ?> - <?= $chave_relatorio ?></div>
					</div>
               <div class=""float-right rodape text-right"" style=""width: 20%;""></div>
		
            </div>
        </div>

            <div class=""page-break"" style=""page-break-after: always;""></div>
         </div>

      <?php } ?>
   </body>
</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[ { ""tipo"": ""uni-select-polo"", ""obrigatorio"": false, ""label"": ""Polo"", ""ds_campo"": ""cd_polo"" }, { ""tipo"": ""campo-anosemestre"", ""obrigatorio"": true, ""label"": ""Ano/Semestre"", ""ds_campo"": ""nr_anosemestre"" }, { ""tipo"": ""uni-select-curso"", ""obrigatorio"": false, ""label"": ""Curso"", ""ds_campo"": ""id_curso"" }, { ""tipo"": ""uni-busca-turma"", ""obrigatorio"": false, ""label"": ""Turma"", ""ds_campo"": ""cd_turma"" }, { ""tipo"": ""uni-busca-pessoa"", ""obrigatorio"": false, ""label"": ""Aluno"", ""ds_campo"": ""cd_pessoa"" } ]",87,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,10,1,""Boletim - Média/Falta"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL, NULL,""O relatório de Boletim apresenta informações referentes ao histórico de disciplinas dos alunos com base em um ano/semestre e turma de referência.  Serão listadas as médias e faltas do aluno conforme a periodicidade informada no parâmetro de avaliação da turma correspondente. O relatório também apresentará as notas de exame final e segunda época para as instituições que utilizam essa estrutura de avaliação."", NULL, NULL,""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Homologação,Boletim - Nota/Recup./Média,"<?php
$PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
require_once($PARMS['PASTA'] . 'nucleo.php');
require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
header('Content-type: text/html; charset=UTF-8');

use \koolreport\processes\ColumnMeta;
use \koolreport\processes\Group;
use \koolreport\processes\OnlyColumn;

// classe padrao do relatorio
class Relatorio extends \koolreport\KoolReport
{
   use \koolreport\bootstrap4\Theme;
   use \koolreport\inputs\Bindable;
   use \koolreport\inputs\POSTBinding;
   use \koolreport\export\Exportable;

   public $path_include;
   public $arrDadosFiltro;
   public $arrDadosGerais;

   public function __construct()
   {
      try {
         $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
         parent::__construct();
      } catch (Exception $e) {
         echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
         die;
      }
   }

   // inicializacao dos filtros
   function defaultParamValues()
   {
      return array(
         ""filtros"" => '{}',
         ""gerais"" => '{}'
      );
   }

   // resgate do $_POST para vinculo com os parametros
   function bindParamsToInputs()
   {
      return array(
         ""filtros"",
         ""gerais""
      );
   }

   // funcao responsavel por realizar a conexao com o banco de dados
   // e resgate dos dados tratamento dos dados do $_POST
   public function settings()
   {
      Nucleo::import('relatorios.RelatoriosConexao');
      $objRelatoriosConexao = new RelatoriosConexao;

      return $objRelatoriosConexao->settings();
   }

   // funcao responsavel por manter as consultas a serem executadas pelo relatorio
   // e geracao dos array de dados para uso posterior na visualizacao
   public function setup()
   {
      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

      if (ctype_xdigit($_POST[""filtros""])) {
         $_POST[""filtros""] = hex2bin($_POST[""filtros""]);
      }

      if (ctype_xdigit($_POST[""gerais""])) {
         $_POST[""gerais""] = hex2bin($_POST[""gerais""]);
      }

      if (isset($_POST['filtros'])) {
         $this->arrDadosFiltro = json_decode($_POST['filtros']);
      } else {
         $this->arrDadosFiltro = json_decode($_POST);
      }

      if (isset($_POST['gerais'])) {
         $this->arrDadosGerais = json_decode($_POST['gerais']);
      }

      $arrParametros = [];

      foreach ($this->arrDadosFiltro as $filtro => $valor) {
         if (!empty($valor->ds_valor)) {
            $arrParametros["":"" . $filtro] = $valor->ds_valor;
         }
      }

      $this
         ->src('unimestre')
         ->query(""
            SELECT
                # INFORMAÇÕES DE CABEÇALHO
                t.cd_coligada AS cd_coligada_cabecalho
                ,  p.cd_pessoa AS 'cd_pessoa'
                ,  p.nm_pessoa AS 'nm_pessoa'
                ,  m.anosemestre AS 'nr_anosemestre'
                ,  IF(LENGTH(m.anosemestre) = 5,
                    CONCAT(LEFT(m.anosemestre, 4), '/', RIGHT(m.anosemestre, 1)),
                    m.anosemestre
                    ) AS 'nr_anosemestre_formatado'
                , cm.DS_CURSO AS 'ds_curso'
                ,  t.codigo AS 'cd_turma'

               #NOTAS E DISCIPLINAS
                ,  d.descricao AS 'ds_disciplina'
                ,  tu.descricao AS 'ds_turno'
                ,  s.ds_situacao AS 'ds_situacao_matricula'
                ,  f.frequencia AS 'vl_frequencia'

                # ETAPA 1
                ,  ifnull(if(f.nota1 > 10,f.nota1,format(f.nota1,2)),'-') AS 'vl_nota_d1'
								,  ifnull(if(f.exame1 > 10,f.exame1,format(f.exame1,2)),'-') AS 'vl_rec_d1'										                
                ,  ifnull(if(f.nota_d1 > 10,f.nota_d1,format(f.nota_d1,2)),'-') AS 'vl_mb_d1'
                ,  ifnull(format(f.falta1,0),'-') AS 'nr_falta1'


                # ETAPA 2
                ,  ifnull(if(f.nota2 > 10,f.nota2,format(f.nota2,2)),'-') AS 'vl_nota_d2'
								,  ifnull(if(f.exame2 > 10,f.exame2,format(f.exame2,2)),'-') AS 'vl_rec_d2'
                ,  ifnull(if(f.nota_d2 > 10,f.nota_d2,format(f.nota_d2,2)),'-') AS 'vl_mb_d2'
                ,  ifnull(format(f.falta2,0),'-') AS 'nr_falta2'
								
								#REC. SEMESTRAL
								,  ifnull(format(f.nota_d5,2),'-') AS 'vl_nota_rs1'
								,  ifnull(format(f.nota_d6,2),'-') AS 'vl_nota_rs2'

                # ETAPA 3
                ,  ifnull(if(f.nota3 > 10,f.nota3,format(f.nota3,2)),'-') AS 'vl_nota_d3'
								,  ifnull(if(f.exame3 > 10,f.exame3,format(f.exame3,2)),'-') AS 'vl_rec_d3'
                ,  ifnull(if(f.nota_d3 > 10,f.nota_d3,format(f.nota_d3,2)),'-') AS 'vl_mb_d3'
                ,  ifnull(format(f.falta3,0),'-') AS 'nr_falta3'

                # ETAPA 4
                ,  ifnull(if(f.nota4 > 10,f.nota4,format(f.nota4,2)),'-') AS 'vl_nota_d4'
								,  ifnull(if(f.exame4 > 10,f.exame4,format(f.exame4,2)),'-') AS 'vl_rec_d4'
                ,  ifnull(if(f.nota_d4 > 10,f.nota_d4,format(f.nota_d4,2)),'-') AS 'vl_mb_d4'
                ,  ifnull(format(f.falta4,0),'-') AS 'nr_falta4'


                # ETAPA FINAL
								,  ifnull(if(f.mediaanual > 10,f.mediaanual,format(f.mediaanual,2)),'-') AS 'vl_media_anual'
								,  ifnull(if(f.notaexame > 10,f.notaexame,format(f.notaexame,2)),'-') AS 'vl_nota_exame'
								,  ifnull(if(f.mediaFinal > 10,f.mediaFinal,format(f.mediaFinal,2)),'-') AS 'vl_media_final'
                ,  ifnull(format(f.totalfaltas,0),'-') AS 'total_faltas'
                ,  si.ds_sigla_situacao AS 'ds_situacao_fichaindividual'

                # PARAMETROS DE AVALIACAO
                ,  apm.nr_avaliacoes AS 'nr_avaliacoes'
                ,  cpa.ds_periodo_abreviado AS 'ds_periodo_abreviado'
								,	 cpa.ds_periodicidade AS 'ds_periodicidade'
								
            FROM
                matriculas AS m
                INNER JOIN fichaindividual AS f ON (
                    f.anosemestre = m.anosemestre AND
                    f.turmamatricula = m.turma AND
                    f.codigoaluno = m.codigoaluno
                )
               INNER JOIN situacao AS s ON (s.cd_situacao = m.situacao)
               INNER JOIN situacao AS si ON (si.cd_situacao = f.situacao)
               INNER JOIN pessoas AS p ON (p.cd_pessoa = f.codigoaluno)
               INNER JOIN turmas AS t ON (t.anosemestre = f.anosemestre AND t.codigo = f.turmamatricula)
               INNER JOIN grades AS g ON (g.CD_GRADE = t.cd_grade AND g.CD_CURSO = t.curso)
               INNER JOIN turnos AS tu ON (tu.codigo = t.turno)
               INNER JOIN cursos_coligadas AS cc ON (cc.CD_CURSO = t.curso AND cc.CD_COLIGADA = t.cd_coligada)
               INNER JOIN cursos_mestre AS cm ON (cm.CD_CURSO = cc.CD_CURSO)
               INNER JOIN disciplinas AS d ON (d.codigo = f.disciplina AND d.curso = f.curso)
               INNER JOIN avaliacoes_parametros_matriz AS apm ON (apm.cd_avaliacao = t.cd_avaliacao)
               INNER JOIN cursos_periodos_avaliacoes AS cpa ON (cpa.cd_periodo_avaliacao = apm.cd_periodo_avaliacao)
            WHERE
               1=1
               "" .
               ((!empty($arrParametros["":cd_polo""]))
                  ? ""AND m.cd_polo IN (:cd_polo) ""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":nr_anosemestre""]))
                  ? ""AND f.anosemestre IN (:nr_anosemestre)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":id_curso""]))
                  ? ""AND cm.ID_CURSO IN (:id_curso)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":cd_turma""]))
                  ? ""AND f.turma IN (:cd_turma)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":cd_pessoa""]))
                  ? ""AND f.codigoaluno IN (:cd_pessoa)""
                  : NULL)
               . ""
            GROUP BY
               f.codigoaluno, f.turmamatricula, f.anosemestre, f.disciplina
            ORDER BY
               f.codigoaluno, f.turmamatricula, f.anosemestre, d.ordem
         "")
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_pessoa"" => $arrFormatoInteiro,
                  ""nr_anosemestre"" => $arrFormatoInteiro,
                  ""id_curso"" => $arrFormatoInteiro,
                  ""cd_disciplina"" => $arrFormatoInteiro,
                  ""nr_ordem"" => $arrFormatoInteiro,
                  ""cd_grade"" => $arrFormatoInteiro,
                  ""vl_frequencia"" => $arrFormatoInteiro,
                  ""nr_falta1"" => $arrFormatoInteiro,
                  ""nr_falta2"" => $arrFormatoInteiro,
                  ""nr_falta3"" => $arrFormatoInteiro,
                  ""nr_falta4"" => $arrFormatoInteiro
               )
            )
         )
         ->saveTo($consulta);

      // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
      $consulta
         ->pipe($this->dataStore(""dados_consulta""));

      $consulta
         ->pipe(new Group(array(
            ""by"" => array(
               ""cd_pessoa"",
               ""nr_anosemestre"",
               ""cd_turma""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_pessoa"",
            ""nr_anosemestre"",
            ""cd_turma""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));

				require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									
									
   }
}
","<?php

   use \koolreport\widgets\koolphp\Table;
   use \koolreport\processes\Filter;

   // path pasta
   $path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

   // margens
   $ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
   $ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
   $ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
   $ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

   $sn_geracao = $_POST[""pdf""];

?>

<html>
   <head>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
      <style>
         .borda {
            border: 1px solid #dee2e6;
         }         
         .totalizador {
         min-height: 0cm !important;
         }
         .fonte {
            font-size: 11px !important;
         }
         .b {
            font-weight: bold !important;
         }
         ul li {
            font-size: 11px !important;
         }
         .rodape {
            font-size: 9px !important;
         }
      </style>
   </head>

   <body class=""relatorio"">
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

      <?php foreach($this->dataStore(""dados_consulta_agrupado"") as $visualizacao) { ?>
         <?php
            $dados_pagina = $this->dataStore(""dados_consulta"")
               ->filter(
                  ""cd_pessoa"",""="",$visualizacao[""cd_pessoa""]
               )
               ->filter(
                  ""nr_anosemestre"",""="",$visualizacao[""nr_anosemestre""]
               )
               ->filter(
                  ""cd_turma"",""="",$visualizacao[""cd_turma""]
               );
         ?>

         <div class=""container"">
            <div
               class=""conteudo""
               style=""
                  padding-top: <?=((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm'?>;
                  padding-bottom: <?=((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm'?>;
                  padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                  padding-right: <?=$ds_margem_direita . 'cm'?>;
                  min-height: 28.1cm;
            "">

               <div style=""vertical-align: top; min-height: 100;"">
                  <table style=""width: 100%;"">
                     <tr>
                        <td style=""text-align: left; width: 55%;"">
                           <?php
                              require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','cabecalho.php'));
                           ?>
                        </td>
                        <td style=""text-align: right; max-width: 45%;"">
                           <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','filtro.php')); ?>
                        </td>
                     </tr>
                  </table>
               </div>

                <h5 class=""text-center"" style=""margin: 0.25rem;"">
                    Boletim Escolar
                </h5>

               <table class=""table table-bordered"">
                  <tr>
                     <td colspan=""2"" class=""text-left fonte p-1"">Nome: <?=$dados_pagina[0]['nm_pessoa']?></td>
                     <td class=""text-left fonte p-1"">Matrícula: <?=$dados_pagina[0]['cd_pessoa']?></td>
                  </tr>
                  <tr>
                     <td colspan=""2"" class=""text-left fonte p-1"">Curso: <?=$dados_pagina[0]['ds_curso']?></td>
                     <td class=""text-left fonte p-1"">Período: <?=$dados_pagina[0]['nr_anosemestre_formatado']?></td>
                  </tr>
                  <tr>
                     <td class=""text-left fonte p-1"">Turma: <?=$dados_pagina[0]['cd_turma']?></td>
                     <td class=""text-left fonte p-1"">Turno: <?=$dados_pagina[0]['ds_turno']?></td>
                     <td class=""text-left fonte p-1"">Situação: <?=$dados_pagina[0]['ds_situacao_matricula']?></td>
                  </tr>
               </table>

               <?php
                  // Definicao dos campos que irao compor o relatorio
                  $htmlCamposCabecalho1 = ""<td rowspan='2' style='vertical-align : middle;'>Disciplinas</td>"";
                  $htmlCamposCabecalho2 = """";

                  $arrCamposDetalhe = [];
                  $arrCamposDetalhe[""ds_disciplina""] = array(""cssStyle""=>""text-align:left;"");

                  for ($i = 1; $i <= $dados_pagina[0]['nr_avaliacoes']; $i++) {
                    $htmlCamposCabecalho1 .= ""<td class='text-center' colspan='3'>"" . $i . ""º "" . $dados_pagina[0]['ds_periodo_abreviado'] . ""</td>"";
                    $htmlCamposCabecalho2 .= ""<td class='text-center text-label'>NB</td><td class='text-center text-label'>RC</td><td class='text-center text-label'>MB</td>"";
                    $arrCamposDetalhe['vl_nota_d' . $i] = array(""cssStyle""=>""text-align:center;"");
					          $arrCamposDetalhe['vl_rec_d' . $i] = array(""cssStyle""=>""text-align:center;"");
					          $arrCamposDetalhe['vl_mb_d' . $i] = array(""cssStyle""=>""text-align:center;"");	

                  }

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>MA</td>"";
                  $arrCamposDetalhe['vl_media_anual'] = array(""cssStyle""=>""text-align:center;"");
                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>RF</td>"";
                  $arrCamposDetalhe['vl_nota_exame'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>MF</td>"";
                  $arrCamposDetalhe['vl_media_final'] = array(""cssStyle""=>""text-align:center;"");
									
				          $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>TF</td>"";
                  $arrCamposDetalhe['total_faltas'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>Fr.(%)</td>"";
                  $arrCamposDetalhe['vl_frequencia'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>Sit.</td>"";
                  $arrCamposDetalhe['ds_situacao_fichaindividual'] = array(""cssStyle""=>""text-align:center;"");

                  Table::create(array(
                     ""dataSource""=>$dados_pagina,
                     ""grouping""=>array(
                        ""cd_pessoa""=>array(
                           ""calculate""=>"""",
                           ""top""=>$htmlCamposCabecalho1,
                           ""bottom""=>"""",
                        ),
                        ""cd_curso""=>array(
                           ""calculate""=>"""",
                           ""top""=>$htmlCamposCabecalho2,
                           ""bottom""=>"""",
                        ),
                     ),
                     ""showHeader""=>false,
                     ""showFooter""=>false,
                     ""columns""=>$arrCamposDetalhe,
                     ""cssClass""=>array(
                        ""table""=>""table-bordered table-striped table-sm fonte p-1"",
                        ""tf""=>""darker"",
                        ""tr"" => ""fonte p-1"",
                        ""td"" => ""fonte p-1""
                     ),
                     ""sorting""=>array(
                        ""nr_ordem""=>""asc""
                     )
                  ));
               ?>

                <table class=""table table-bordered"">
                  <tr>
                      <td rowspan=""3"" class=""text-left fonte p-1"" style=""vertical-align: middle !important;"">Legendas</td>
                  </tr>
                  <tr>
                     <td class=""text-left fonte p-1"" style=""border: none;"">NB: Nota <?= $dados_pagina[0]['ds_periodicidade'] ?></td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">RC: Recuperação <?= $dados_pagina[0]['ds_periodicidade'] ?></td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">MB: Média b<?= $dados_pagina[0]['ds_periodicidade'] ?></td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">MA: Média Anual</td>
										 <td class=""text-left fonte p-1"" style=""border: none;"">F: Recuperação Final</td>
										 <td class=""text-left fonte p-1"" style=""border: none;"">MF: Média final</td>
                  </tr>
                  <tr>
                    <td class=""text-left fonte p-1"" style=""border: none;"">TF: Total de faltas</td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">Fr.(%): Frequência anual</td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">Sit: Situação na disciplina</td>
                  </tr>
               </table>

				<div style=""text-align: right; padding-bottom: <?= $ds_margem_inferior . 'cm' ?>;"">
				    <hr>
					<div class=""float-left rodape text-left"" style=""width: 80%; vertical-align: middle !important;"">
						<img class=""float-left"" src=""../image/logo_rodape_unimestre_v3"" alt="""">
                        <div class=""ml-3 float-left rodape"">Impresso por: <?= $usuario ?> - <?= $chave_relatorio ?></div>
					</div>
               <div class=""float-right rodape text-right"" style=""width: 20%;""></div>
		
            </div>
        </div>

            <div class=""page-break"" style=""page-break-after: always;""></div>
         </div>

      <?php } ?>
   </body>
</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[ { ""tipo"": ""uni-select-polo"", ""obrigatorio"": false, ""label"": ""Polo"", ""ds_campo"": ""cd_polo"" }, { ""tipo"": ""campo-anosemestre"", ""obrigatorio"": true, ""label"": ""Ano/Semestre"", ""ds_campo"": ""nr_anosemestre"" }, { ""tipo"": ""uni-select-curso"", ""obrigatorio"": false, ""label"": ""Curso"", ""ds_campo"": ""id_curso"" }, { ""tipo"": ""uni-busca-turma"", ""obrigatorio"": false, ""label"": ""Turma"", ""ds_campo"": ""cd_turma"" }, { ""tipo"": ""uni-busca-pessoa"", ""obrigatorio"": false, ""label"": ""Aluno"", ""ds_campo"": ""cd_pessoa"" } ]",88,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,10,1,""Boletim - Nota/Recup./Média"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL, NULL,""O relatório de Boletim apresenta informações referentes ao histórico de disciplinas dos alunos com base em um ano/semestre e turma de referência.  Serão listadas as médias e faltas do aluno conforme a periodicidade informada no parâmetro de avaliação da turma correspondente. O relatório também apresentará as notas de exame final e segunda época para as instituições que utilizam essa estrutura de avaliação."", NULL, NULL,""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Homologação,Boletim - Nota/Recup./Média/Falta,"<?php
$PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
require_once($PARMS['PASTA'] . 'nucleo.php');
require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
header('Content-type: text/html; charset=UTF-8');

use \koolreport\processes\ColumnMeta;
use \koolreport\processes\Group;
use \koolreport\processes\OnlyColumn;

// classe padrao do relatorio
class Relatorio extends \koolreport\KoolReport
{
   use \koolreport\bootstrap4\Theme;
   use \koolreport\inputs\Bindable;
   use \koolreport\inputs\POSTBinding;
   use \koolreport\export\Exportable;

   public $path_include;
   public $arrDadosFiltro;
   public $arrDadosGerais;

   public function __construct()
   {
      try {
         $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
         parent::__construct();
      } catch (Exception $e) {
         echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
         die;
      }
   }

   // inicializacao dos filtros
   function defaultParamValues()
   {
      return array(
         ""filtros"" => '{}',
         ""gerais"" => '{}'
      );
   }

   // resgate do $_POST para vinculo com os parametros
   function bindParamsToInputs()
   {
      return array(
         ""filtros"",
         ""gerais""
      );
   }

   // funcao responsavel por realizar a conexao com o banco de dados
   // e resgate dos dados tratamento dos dados do $_POST
   public function settings()
   {
      Nucleo::import('relatorios.RelatoriosConexao');
      $objRelatoriosConexao = new RelatoriosConexao;

      return $objRelatoriosConexao->settings();
   }

   // funcao responsavel por manter as consultas a serem executadas pelo relatorio
   // e geracao dos array de dados para uso posterior na visualizacao
   public function setup()
   {
      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

      if (ctype_xdigit($_POST[""filtros""])) {
         $_POST[""filtros""] = hex2bin($_POST[""filtros""]);
      }

      if (ctype_xdigit($_POST[""gerais""])) {
         $_POST[""gerais""] = hex2bin($_POST[""gerais""]);
      }

      if (isset($_POST['filtros'])) {
         $this->arrDadosFiltro = json_decode($_POST['filtros']);
      } else {
         $this->arrDadosFiltro = json_decode($_POST);
      }

      if (isset($_POST['gerais'])) {
         $this->arrDadosGerais = json_decode($_POST['gerais']);
      }

      $arrParametros = [];

      foreach ($this->arrDadosFiltro as $filtro => $valor) {
         if (!empty($valor->ds_valor)) {
            $arrParametros["":"" . $filtro] = $valor->ds_valor;
         }
      }

      $this
         ->src('unimestre')
         ->query(""
            SELECT
                # INFORMAÇÕES DE CABEÇALHO
                t.cd_coligada AS cd_coligada_cabecalho
                ,  p.cd_pessoa AS 'cd_pessoa'
                ,  p.nm_pessoa AS 'nm_pessoa'
                ,  m.anosemestre AS 'nr_anosemestre'
                ,  IF(LENGTH(m.anosemestre) = 5,
                    CONCAT(LEFT(m.anosemestre, 4), '/', RIGHT(m.anosemestre, 1)),
                    m.anosemestre
                    ) AS 'nr_anosemestre_formatado'
                , cm.DS_CURSO AS 'ds_curso'
                ,  t.codigo AS 'cd_turma'

               #NOTAS E DISCIPLINAS
                ,  d.descricao AS 'ds_disciplina'
                ,  tu.descricao AS 'ds_turno'
                ,  s.ds_situacao AS 'ds_situacao_matricula'
                ,  f.frequencia AS 'vl_frequencia'

                # ETAPA 1
                ,  ifnull(if(f.nota1 > 10,f.nota1,format(f.nota1,2)),'-') AS 'vl_nota_d1'
								,  ifnull(if(f.exame1 > 10,f.exame1,format(f.exame1,2)),'-') AS 'vl_rec_d1'										                
                ,  ifnull(if(f.nota_d1 > 10,f.nota_d1,format(f.nota_d1,2)),'-') AS 'vl_mb_d1'
                ,  ifnull(format(f.falta1,0),'-') AS 'nr_falta1'


                # ETAPA 2
                ,  ifnull(if(f.nota2 > 10,f.nota2,format(f.nota2,2)),'-') AS 'vl_nota_d2'
								,  ifnull(if(f.exame2 > 10,f.exame2,format(f.exame2,2)),'-') AS 'vl_rec_d2'
                ,  ifnull(if(f.nota_d2 > 10,f.nota_d2,format(f.nota_d2,2)),'-') AS 'vl_mb_d2'
                ,  ifnull(format(f.falta2,0),'-') AS 'nr_falta2'
								
								#REC. SEMESTRAL
								,  ifnull(format(f.nota_d5,2),'-') AS 'vl_nota_rs1'
								,  ifnull(format(f.nota_d6,2),'-') AS 'vl_nota_rs2'

                # ETAPA 3
                ,  ifnull(if(f.nota3 > 10,f.nota3,format(f.nota3,2)),'-') AS 'vl_nota_d3'
								,  ifnull(if(f.exame3 > 10,f.exame3,format(f.exame3,2)),'-') AS 'vl_rec_d3'
                ,  ifnull(if(f.nota_d3 > 10,f.nota_d3,format(f.nota_d3,2)),'-') AS 'vl_mb_d3'
                ,  ifnull(format(f.falta3,0),'-') AS 'nr_falta3'

                # ETAPA 4
                ,  ifnull(if(f.nota4 > 10,f.nota4,format(f.nota4,2)),'-') AS 'vl_nota_d4'
								,  ifnull(if(f.exame4 > 10,f.exame4,format(f.exame4,2)),'-') AS 'vl_rec_d4'
                ,  ifnull(if(f.nota_d4 > 10,f.nota_d4,format(f.nota_d4,2)),'-') AS 'vl_mb_d4'
                ,  ifnull(format(f.falta4,0),'-') AS 'nr_falta4'


                # ETAPA FINAL
								,  ifnull(if(f.mediaanual > 10,f.mediaanual,format(f.mediaanual,2)),'-') AS 'vl_media_anual'
								,  ifnull(if(f.notaexame > 10,f.notaexame,format(f.notaexame,2)),'-') AS 'vl_nota_exame'
								,  ifnull(if(f.mediaFinal > 10,f.mediaFinal,format(f.mediaFinal,2)),'-') AS 'vl_media_final'
                ,  ifnull(format(f.totalfaltas,0),'-') AS 'total_faltas'
                ,  si.ds_sigla_situacao AS 'ds_situacao_fichaindividual'

                # PARAMETROS DE AVALIACAO
                ,  apm.nr_avaliacoes AS 'nr_avaliacoes'
                ,  cpa.ds_periodo_abreviado AS 'ds_periodo_abreviado'
								,	 cpa.ds_periodicidade AS 'ds_periodicidade'
								
            FROM
                matriculas AS m
                INNER JOIN fichaindividual AS f ON (
                    f.anosemestre = m.anosemestre AND
                    f.turmamatricula = m.turma AND
                    f.codigoaluno = m.codigoaluno
                )
               INNER JOIN situacao AS s ON (s.cd_situacao = m.situacao)
               INNER JOIN situacao AS si ON (si.cd_situacao = f.situacao)
               INNER JOIN pessoas AS p ON (p.cd_pessoa = f.codigoaluno)
               INNER JOIN turmas AS t ON (t.anosemestre = f.anosemestre AND t.codigo = f.turmamatricula)
               INNER JOIN grades AS g ON (g.CD_GRADE = t.cd_grade AND g.CD_CURSO = t.curso)
               INNER JOIN turnos AS tu ON (tu.codigo = t.turno)
               INNER JOIN cursos_coligadas AS cc ON (cc.CD_CURSO = t.curso AND cc.CD_COLIGADA = t.cd_coligada)
               INNER JOIN cursos_mestre AS cm ON (cm.CD_CURSO = cc.CD_CURSO)
               INNER JOIN disciplinas AS d ON (d.codigo = f.disciplina AND d.curso = f.curso)
               INNER JOIN avaliacoes_parametros_matriz AS apm ON (apm.cd_avaliacao = t.cd_avaliacao)
               INNER JOIN cursos_periodos_avaliacoes AS cpa ON (cpa.cd_periodo_avaliacao = apm.cd_periodo_avaliacao)
            WHERE
               1=1
               "" .
               ((!empty($arrParametros["":cd_polo""]))
                  ? ""AND m.cd_polo IN (:cd_polo) ""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":nr_anosemestre""]))
                  ? ""AND f.anosemestre IN (:nr_anosemestre)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":id_curso""]))
                  ? ""AND cm.ID_CURSO IN (:id_curso)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":cd_turma""]))
                  ? ""AND f.turma IN (:cd_turma)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":cd_pessoa""]))
                  ? ""AND f.codigoaluno IN (:cd_pessoa)""
                  : NULL)
               . ""
            GROUP BY
               f.codigoaluno, f.turmamatricula, f.anosemestre, f.disciplina
            ORDER BY
               f.codigoaluno, f.turmamatricula, f.anosemestre, d.ordem
         "")
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_pessoa"" => $arrFormatoInteiro,
                  ""nr_anosemestre"" => $arrFormatoInteiro,
                  ""id_curso"" => $arrFormatoInteiro,
                  ""cd_disciplina"" => $arrFormatoInteiro,
                  ""nr_ordem"" => $arrFormatoInteiro,
                  ""cd_grade"" => $arrFormatoInteiro,
                  ""vl_frequencia"" => $arrFormatoInteiro,
                  ""nr_falta1"" => $arrFormatoInteiro,
                  ""nr_falta2"" => $arrFormatoInteiro,
                  ""nr_falta3"" => $arrFormatoInteiro,
                  ""nr_falta4"" => $arrFormatoInteiro
               )
            )
         )
         ->saveTo($consulta);

      // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
      $consulta
         ->pipe($this->dataStore(""dados_consulta""));

      $consulta
         ->pipe(new Group(array(
            ""by"" => array(
               ""cd_pessoa"",
               ""nr_anosemestre"",
               ""cd_turma""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_pessoa"",
            ""nr_anosemestre"",
            ""cd_turma""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));

require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									
									
   }
}
","<?php

   use \koolreport\widgets\koolphp\Table;
   use \koolreport\processes\Filter;

   // path pasta
   $path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

   // margens
   $ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
   $ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
   $ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
   $ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

   $sn_geracao = $_POST[""pdf""];

?>

<html>
   <head>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
      <style>
         .borda {
            border: 1px solid #dee2e6;
         }         
         .totalizador {
         min-height: 0cm !important;
         }
         .fonte {
            font-size: 11px !important;
         }
         .b {
            font-weight: bold !important;
         }
         ul li {
            font-size: 11px !important;
         }
         .rodape {
            font-size: 9px !important;
         }
      </style>
   </head>

   <body class=""relatorio"">
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

      <?php foreach($this->dataStore(""dados_consulta_agrupado"") as $visualizacao) { ?>
         <?php
            $dados_pagina = $this->dataStore(""dados_consulta"")
               ->filter(
                  ""cd_pessoa"",""="",$visualizacao[""cd_pessoa""]
               )
               ->filter(
                  ""nr_anosemestre"",""="",$visualizacao[""nr_anosemestre""]
               )
               ->filter(
                  ""cd_turma"",""="",$visualizacao[""cd_turma""]
               );
         ?>

         <div class=""container"">
            <div
               class=""conteudo""
               style=""
                  padding-top: <?=((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm'?>;
                  padding-bottom: <?=((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm'?>;
                  padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                  padding-right: <?=$ds_margem_direita . 'cm'?>;
                  min-height: 28.1cm;
            "">

               <div style=""vertical-align: top; min-height: 100;"">
                  <table style=""width: 100%;"">
                     <tr>
                        <td style=""text-align: left; width: 55%;"">
                           <?php
                              require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','cabecalho.php'));
                           ?>
                        </td>
                        <td style=""text-align: right; max-width: 45%;"">
                           <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','filtro.php')); ?>
                        </td>
                     </tr>
                  </table>
               </div>

                <h5 class=""text-center"" style=""margin: 0.25rem;"">
                    Boletim Escolar
                </h5>

               <table class=""table table-bordered"">
                  <tr>
                     <td colspan=""2"" class=""text-left fonte p-1"">Nome: <?=$dados_pagina[0]['nm_pessoa']?></td>
                     <td class=""text-left fonte p-1"">Matrícula: <?=$dados_pagina[0]['cd_pessoa']?></td>
                  </tr>
                  <tr>
                     <td colspan=""2"" class=""text-left fonte p-1"">Curso: <?=$dados_pagina[0]['ds_curso']?></td>
                     <td class=""text-left fonte p-1"">Período: <?=$dados_pagina[0]['nr_anosemestre_formatado']?></td>
                  </tr>
                  <tr>
                     <td class=""text-left fonte p-1"">Turma: <?=$dados_pagina[0]['cd_turma']?></td>
                     <td class=""text-left fonte p-1"">Turno: <?=$dados_pagina[0]['ds_turno']?></td>
                     <td class=""text-left fonte p-1"">Situação: <?=$dados_pagina[0]['ds_situacao_matricula']?></td>
                  </tr>
               </table>

               <?php
                  // Definicao dos campos que irao compor o relatorio
                  $htmlCamposCabecalho1 = ""<td rowspan='2' style='vertical-align : middle;'>Disciplinas</td>"";
                  $htmlCamposCabecalho2 = """";

                  $arrCamposDetalhe = [];
                  $arrCamposDetalhe[""ds_disciplina""] = array(""cssStyle""=>""text-align:left;"");

                  for ($i = 1; $i <= $dados_pagina[0]['nr_avaliacoes']; $i++) {
                    $htmlCamposCabecalho1 .= ""<td class='text-center' colspan='4'>"" . $i . ""º "" . $dados_pagina[0]['ds_periodo_abreviado'] . ""</td>"";
                    $htmlCamposCabecalho2 .= ""<td class='text-center text-label'>NB</td><td class='text-center text-label'>RC</td><td class='text-center text-label'>MB</td><td class='text-center text-label'>F</td>"";
                    $arrCamposDetalhe['vl_nota_d' . $i] = array(""cssStyle""=>""text-align:center;"");
					          $arrCamposDetalhe['vl_rec_d' . $i] = array(""cssStyle""=>""text-align:center;"");
					          $arrCamposDetalhe['vl_mb_d' . $i] = array(""cssStyle""=>""text-align:center;"");	
										$arrCamposDetalhe['nr_falta'  . $i] = array(""cssStyle""=>""text-align:center;"");
                  }

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>MA</td>"";
                  $arrCamposDetalhe['vl_media_anual'] = array(""cssStyle""=>""text-align:center;"");
                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>RF</td>"";
                  $arrCamposDetalhe['vl_nota_exame'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>MF</td>"";
                  $arrCamposDetalhe['vl_media_final'] = array(""cssStyle""=>""text-align:center;"");
									
				          $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>TF</td>"";
                  $arrCamposDetalhe['total_faltas'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>Fr.(%)</td>"";
                  $arrCamposDetalhe['vl_frequencia'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>Sit.</td>"";
                  $arrCamposDetalhe['ds_situacao_fichaindividual'] = array(""cssStyle""=>""text-align:center;"");

                  Table::create(array(
                     ""dataSource""=>$dados_pagina,
                     ""grouping""=>array(
                        ""cd_pessoa""=>array(
                           ""calculate""=>"""",
                           ""top""=>$htmlCamposCabecalho1,
                           ""bottom""=>"""",
                        ),
                        ""cd_curso""=>array(
                           ""calculate""=>"""",
                           ""top""=>$htmlCamposCabecalho2,
                           ""bottom""=>"""",
                        ),
                     ),
                     ""showHeader""=>false,
                     ""showFooter""=>false,
                     ""columns""=>$arrCamposDetalhe,
                     ""cssClass""=>array(
                        ""table""=>""table-bordered table-striped table-sm fonte p-1"",
                        ""tf""=>""darker"",
                        ""tr"" => ""fonte p-1"",
                        ""td"" => ""fonte p-1""
                     ),
                     ""sorting""=>array(
                        ""nr_ordem""=>""asc""
                     )
                  ));
               ?>

                <table class=""table table-bordered"">
                  <tr>
                      <td rowspan=""3"" class=""text-left fonte p-1"" style=""vertical-align: middle !important;"">Legendas</td>
                  </tr>
                  <tr>
                     <td class=""text-left fonte p-1"" style=""border: none;"">NB: Nota <?= $dados_pagina[0]['ds_periodicidade'] ?></td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">RC: Recuperação <?= $dados_pagina[0]['ds_periodicidade'] ?></td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">MB: Média <?= $dados_pagina[0]['ds_periodicidade'] ?></td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">F: Faltas <?= $dados_pagina[0]['ds_periodicidade'] ?></td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">MA: Média Anual</td>
                  </tr>
                  <tr>
                    <td class=""text-left fonte p-1"" style=""border: none;"">F: Recuperação Final</td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">MF: Média final</td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">TF: Total de faltas</td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">Fr.(%): Frequência anual</td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">Sit: Situação na disciplina</td>
                  </tr>
               </table>

				<div style=""text-align: right; padding-bottom: <?= $ds_margem_inferior . 'cm' ?>;"">
				    <hr>
					<div class=""float-left rodape text-left"" style=""width: 80%; vertical-align: middle !important;"">
						<img class=""float-left"" src=""../image/logo_rodape_unimestre_v3"" alt="""">
                        <div class=""ml-3 float-left rodape"">Impresso por: <?= $usuario ?> - <?= $chave_relatorio ?></div>
					</div>
               <div class=""float-right rodape text-right"" style=""width: 20%;""></div>
		
            </div>
        </div>

            <div class=""page-break"" style=""page-break-after: always;""></div>
         </div>

      <?php } ?>
   </body>
</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[ { ""tipo"": ""uni-select-polo"", ""obrigatorio"": false, ""label"": ""Polo"", ""ds_campo"": ""cd_polo"" }, { ""tipo"": ""campo-anosemestre"", ""obrigatorio"": true, ""label"": ""Ano/Semestre"", ""ds_campo"": ""nr_anosemestre"" }, { ""tipo"": ""uni-select-curso"", ""obrigatorio"": false, ""label"": ""Curso"", ""ds_campo"": ""id_curso"" }, { ""tipo"": ""uni-busca-turma"", ""obrigatorio"": false, ""label"": ""Turma"", ""ds_campo"": ""cd_turma"" }, { ""tipo"": ""uni-busca-pessoa"", ""obrigatorio"": false, ""label"": ""Aluno"", ""ds_campo"": ""cd_pessoa"" } ]",89,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,10,1,""Boletim - Nota/Recup./Média/Falta"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL, NULL,""O relatório de Boletim apresenta informações referentes ao histórico de disciplinas dos alunos com base em um ano/semestre e turma de referência.  Serão listadas as médias e faltas do aluno conforme a periodicidade informada no parâmetro de avaliação da turma correspondente. O relatório também apresentará as notas de exame final e segunda época para as instituições que utilizam essa estrutura de avaliação."", NULL, NULL,""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Homologação,Boletim - Nota/Média/Falta,"<?php
$PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
require_once($PARMS['PASTA'] . 'nucleo.php');
require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
header('Content-type: text/html; charset=UTF-8');

use \koolreport\processes\ColumnMeta;
use \koolreport\processes\Group;
use \koolreport\processes\OnlyColumn;

// classe padrao do relatorio
class Relatorio extends \koolreport\KoolReport
{
   use \koolreport\bootstrap4\Theme;
   use \koolreport\inputs\Bindable;
   use \koolreport\inputs\POSTBinding;
   use \koolreport\export\Exportable;

   public $path_include;
   public $arrDadosFiltro;
   public $arrDadosGerais;

   public function __construct()
   {
      try {
         $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
         parent::__construct();
      } catch (Exception $e) {
         echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
         die;
      }
   }

   // inicializacao dos filtros
   function defaultParamValues()
   {
      return array(
         ""filtros"" => '{}',
         ""gerais"" => '{}'
      );
   }

   // resgate do $_POST para vinculo com os parametros
   function bindParamsToInputs()
   {
      return array(
         ""filtros"",
         ""gerais""
      );
   }

   // funcao responsavel por realizar a conexao com o banco de dados
   // e resgate dos dados tratamento dos dados do $_POST
   public function settings()
   {
      Nucleo::import('relatorios.RelatoriosConexao');
      $objRelatoriosConexao = new RelatoriosConexao;

      return $objRelatoriosConexao->settings();
   }

   // funcao responsavel por manter as consultas a serem executadas pelo relatorio
   // e geracao dos array de dados para uso posterior na visualizacao
   public function setup()
   {
      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

      if (ctype_xdigit($_POST[""filtros""])) {
         $_POST[""filtros""] = hex2bin($_POST[""filtros""]);
      }

      if (ctype_xdigit($_POST[""gerais""])) {
         $_POST[""gerais""] = hex2bin($_POST[""gerais""]);
      }

      if (isset($_POST['filtros'])) {
         $this->arrDadosFiltro = json_decode($_POST['filtros']);
      } else {
         $this->arrDadosFiltro = json_decode($_POST);
      }

      if (isset($_POST['gerais'])) {
         $this->arrDadosGerais = json_decode($_POST['gerais']);
      }

      $arrParametros = [];

      foreach ($this->arrDadosFiltro as $filtro => $valor) {
         if (!empty($valor->ds_valor)) {
            $arrParametros["":"" . $filtro] = $valor->ds_valor;
         }
      }

      $this
         ->src('unimestre')
         ->query(""
            SELECT
               # INFORMAÇÕES DE CABEÇALHO
                t.cd_coligada AS cd_coligada_cabecalho
                ,  p.cd_pessoa AS 'cd_pessoa'
                ,  p.nm_pessoa AS 'nm_pessoa'
                ,  m.anosemestre AS 'nr_anosemestre'
                ,  IF(LENGTH(m.anosemestre) = 5,
                    CONCAT(LEFT(m.anosemestre, 4), '/', RIGHT(m.anosemestre, 1)),
                    m.anosemestre
                    ) AS 'nr_anosemestre_formatado'
                , cm.DS_CURSO AS 'ds_curso'
                ,  t.codigo AS 'cd_turma'

               #NOTAS E DISCIPLINAS
                ,  d.descricao AS 'ds_disciplina'
                ,  tu.descricao AS 'ds_turno'
                ,  s.ds_situacao AS 'ds_situacao_matricula'
                ,  f.frequencia AS 'vl_frequencia'

                # ETAPA 1
                ,  ifnull(if(f.nota1 > 10,f.nota1,format(f.nota1,2)),'-') AS 'vl_nota_d1'
								,  ifnull(if(f.exame1 > 10,f.exame1,format(f.exame1,2)),'-') AS 'vl_rec_d1'										                
                ,  ifnull(if(f.nota_d1 > 10,f.nota_d1,format(f.nota_d1,2)),'-') AS 'vl_mb_d1'
                ,  ifnull(format(f.falta1,0),'-') AS 'nr_falta1'


                # ETAPA 2
                ,  ifnull(if(f.nota2 > 10,f.nota2,format(f.nota2,2)),'-') AS 'vl_nota_d2'
								,  ifnull(if(f.exame2 > 10,f.exame2,format(f.exame2,2)),'-') AS 'vl_rec_d2'
                ,  ifnull(if(f.nota_d2 > 10,f.nota_d2,format(f.nota_d2,2)),'-') AS 'vl_mb_d2'
                ,  ifnull(format(f.falta2,0),'-') AS 'nr_falta2'
								
								#REC. SEMESTRAL
								,  ifnull(format(f.nota_d5,2),'-') AS 'vl_nota_rs1'
								,  ifnull(format(f.nota_d6,2),'-') AS 'vl_nota_rs2'

                # ETAPA 3
                ,  ifnull(if(f.nota3 > 10,f.nota3,format(f.nota3,2)),'-') AS 'vl_nota_d3'
								,  ifnull(if(f.exame3 > 10,f.exame3,format(f.exame3,2)),'-') AS 'vl_rec_d3'
                ,  ifnull(if(f.nota_d3 > 10,f.nota_d3,format(f.nota_d3,2)),'-') AS 'vl_mb_d3'
                ,  ifnull(format(f.falta3,0),'-') AS 'nr_falta3'

                # ETAPA 4
                ,  ifnull(if(f.nota4 > 10,f.nota4,format(f.nota4,2)),'-') AS 'vl_nota_d4'
								,  ifnull(if(f.exame4 > 10,f.exame4,format(f.exame4,2)),'-') AS 'vl_rec_d4'
                ,  ifnull(if(f.nota_d4 > 10,f.nota_d4,format(f.nota_d4,2)),'-') AS 'vl_mb_d4'
                ,  ifnull(format(f.falta4,0),'-') AS 'nr_falta4'


                # ETAPA FINAL
								,  ifnull(if(f.mediaanual > 10,f.mediaanual,format(f.mediaanual,2)),'-') AS 'vl_media_anual'
								,  ifnull(if(f.notaexame > 10,f.notaexame,format(f.notaexame,2)),'-') AS 'vl_nota_exame'
								,  ifnull(if(f.mediaFinal > 10,f.mediaFinal,format(f.mediaFinal,2)),'-') AS 'vl_media_final'
                ,  ifnull(format(f.totalfaltas,0),'-') AS 'total_faltas'
                ,  si.ds_sigla_situacao AS 'ds_situacao_fichaindividual'

                # PARAMETROS DE AVALIACAO
                ,  apm.nr_avaliacoes AS 'nr_avaliacoes'
                ,  cpa.ds_periodo_abreviado AS 'ds_periodo_abreviado'
								,	 cpa.ds_periodicidade AS 'ds_periodicidade'
								
            FROM
                matriculas AS m
                INNER JOIN fichaindividual AS f ON (
                    f.anosemestre = m.anosemestre AND
                    f.turmamatricula = m.turma AND
                    f.codigoaluno = m.codigoaluno
                )
               INNER JOIN situacao AS s ON (s.cd_situacao = m.situacao)
               INNER JOIN situacao AS si ON (si.cd_situacao = f.situacao)
               INNER JOIN pessoas AS p ON (p.cd_pessoa = f.codigoaluno)
               INNER JOIN turmas AS t ON (t.anosemestre = f.anosemestre AND t.codigo = f.turmamatricula)
               INNER JOIN grades AS g ON (g.CD_GRADE = t.cd_grade AND g.CD_CURSO = t.curso)
               INNER JOIN turnos AS tu ON (tu.codigo = t.turno)
               INNER JOIN cursos_coligadas AS cc ON (cc.CD_CURSO = t.curso AND cc.CD_COLIGADA = t.cd_coligada)
               INNER JOIN cursos_mestre AS cm ON (cm.CD_CURSO = cc.CD_CURSO)
               INNER JOIN disciplinas AS d ON (d.codigo = f.disciplina AND d.curso = f.curso)
               INNER JOIN avaliacoes_parametros_matriz AS apm ON (apm.cd_avaliacao = t.cd_avaliacao)
               INNER JOIN cursos_periodos_avaliacoes AS cpa ON (cpa.cd_periodo_avaliacao = apm.cd_periodo_avaliacao)
            WHERE
               1=1
               "" .
               ((!empty($arrParametros["":cd_polo""]))
                  ? ""AND m.cd_polo IN (:cd_polo) ""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":nr_anosemestre""]))
                  ? ""AND f.anosemestre IN (:nr_anosemestre)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":id_curso""]))
                  ? ""AND cm.ID_CURSO IN (:id_curso)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":cd_turma""]))
                  ? ""AND f.turma IN (:cd_turma)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":cd_pessoa""]))
                  ? ""AND f.codigoaluno IN (:cd_pessoa)""
                  : NULL)
               . ""
            GROUP BY
               f.codigoaluno, f.turmamatricula, f.anosemestre, f.disciplina
            ORDER BY
               f.codigoaluno, f.turmamatricula, f.anosemestre, d.ordem
         "")
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_pessoa"" => $arrFormatoInteiro,
                  ""nr_anosemestre"" => $arrFormatoInteiro,
                  ""id_curso"" => $arrFormatoInteiro,
                  ""cd_disciplina"" => $arrFormatoInteiro,
                  ""nr_ordem"" => $arrFormatoInteiro,
                  ""cd_grade"" => $arrFormatoInteiro,
                  ""vl_frequencia"" => $arrFormatoInteiro,
                  ""nr_falta1"" => $arrFormatoInteiro,
                  ""nr_falta2"" => $arrFormatoInteiro,
                  ""nr_falta3"" => $arrFormatoInteiro,
                  ""nr_falta4"" => $arrFormatoInteiro
               )
            )
         )
         ->saveTo($consulta);

      // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
      $consulta
         ->pipe($this->dataStore(""dados_consulta""));

      $consulta
         ->pipe(new Group(array(
            ""by"" => array(
               ""cd_pessoa"",
               ""nr_anosemestre"",
               ""cd_turma""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_pessoa"",
            ""nr_anosemestre"",
            ""cd_turma""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));

require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									
									
   }
}
","<?php

   use \koolreport\widgets\koolphp\Table;
   use \koolreport\processes\Filter;

   // path pasta
   $path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

   // margens
   $ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
   $ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
   $ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
   $ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

   $sn_geracao = $_POST[""pdf""];

?>

<html>
   <head>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
      <style>
         .borda {
            border: 1px solid #dee2e6;
         }         
         .totalizador {
         min-height: 0cm !important;
         }
         .fonte {
            font-size: 11px !important;
         }
         .b {
            font-weight: bold !important;
         }
         ul li {
            font-size: 11px !important;
         }
         .rodape {
            font-size: 9px !important;
         }
      </style>
   </head>

   <body class=""relatorio"">
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

      <?php foreach($this->dataStore(""dados_consulta_agrupado"") as $visualizacao) { ?>
         <?php
            $dados_pagina = $this->dataStore(""dados_consulta"")
               ->filter(
                  ""cd_pessoa"",""="",$visualizacao[""cd_pessoa""]
               )
               ->filter(
                  ""nr_anosemestre"",""="",$visualizacao[""nr_anosemestre""]
               )
               ->filter(
                  ""cd_turma"",""="",$visualizacao[""cd_turma""]
               );
         ?>

         <div class=""container"">
            <div
               class=""conteudo""
               style=""
                  padding-top: <?=((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm'?>;
                  padding-bottom: <?=((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm'?>;
                  padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                  padding-right: <?=$ds_margem_direita . 'cm'?>;
                  min-height: 28.1cm;
            "">

               <div style=""vertical-align: top; min-height: 100;"">
                  <table style=""width: 100%;"">
                     <tr>
                        <td style=""text-align: left; width: 55%;"">
                           <?php
                              require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','cabecalho.php'));
                           ?>
                        </td>
                        <td style=""text-align: right; max-width: 45%;"">
                           <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','filtro.php')); ?>
                        </td>
                     </tr>
                  </table>
               </div>

                <h5 class=""text-center"" style=""margin: 0.25rem;"">
                    Boletim Escolar
                </h5>

               <table class=""table table-bordered"">
                  <tr>
                     <td colspan=""2"" class=""text-left fonte p-1"">Nome: <?=$dados_pagina[0]['nm_pessoa']?></td>
                     <td class=""text-left fonte p-1"">Matrícula: <?=$dados_pagina[0]['cd_pessoa']?></td>
                  </tr>
                  <tr>
                     <td colspan=""2"" class=""text-left fonte p-1"">Curso: <?=$dados_pagina[0]['ds_curso']?></td>
                     <td class=""text-left fonte p-1"">Período: <?=$dados_pagina[0]['nr_anosemestre_formatado']?></td>
                  </tr>
                  <tr>
                     <td class=""text-left fonte p-1"">Turma: <?=$dados_pagina[0]['cd_turma']?></td>
                     <td class=""text-left fonte p-1"">Turno: <?=$dados_pagina[0]['ds_turno']?></td>
                     <td class=""text-left fonte p-1"">Situação: <?=$dados_pagina[0]['ds_situacao_matricula']?></td>
                  </tr>
               </table>

               <?php
                  // Definicao dos campos que irao compor o relatorio
                  $htmlCamposCabecalho1 = ""<td rowspan='2' style='vertical-align : middle;'>Disciplinas</td>"";
                  $htmlCamposCabecalho2 = """";

                  $arrCamposDetalhe = [];
                  $arrCamposDetalhe[""ds_disciplina""] = array(""cssStyle""=>""text-align:left;"");

                  for ($i = 1; $i <= $dados_pagina[0]['nr_avaliacoes']; $i++) {
                    $htmlCamposCabecalho1 .= ""<td class='text-center' colspan='3'>"" . $i . ""º "" . $dados_pagina[0]['ds_periodo_abreviado'] . ""</td>"";
                    $htmlCamposCabecalho2 .= ""<td class='text-center text-label'>NB</td><td class='text-center text-label'>MB</td><td class='text-center text-label'>F</td>"";
                    $arrCamposDetalhe['vl_nota_d' . $i] = array(""cssStyle""=>""text-align:center;"");
					          $arrCamposDetalhe['vl_mb_d' . $i] = array(""cssStyle""=>""text-align:center;"");	
										$arrCamposDetalhe['nr_falta'  . $i] = array(""cssStyle""=>""text-align:center;"");
                  }

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>MA</td>"";
                  $arrCamposDetalhe['vl_media_anual'] = array(""cssStyle""=>""text-align:center;"");
                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>RF</td>"";
                  $arrCamposDetalhe['vl_nota_exame'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>MF</td>"";
                  $arrCamposDetalhe['vl_media_final'] = array(""cssStyle""=>""text-align:center;"");
									
				          $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>TF</td>"";
                  $arrCamposDetalhe['total_faltas'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>Fr.(%)</td>"";
                  $arrCamposDetalhe['vl_frequencia'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>Sit.</td>"";
                  $arrCamposDetalhe['ds_situacao_fichaindividual'] = array(""cssStyle""=>""text-align:center;"");

                  Table::create(array(
                     ""dataSource""=>$dados_pagina,
                     ""grouping""=>array(
                        ""cd_pessoa""=>array(
                           ""calculate""=>"""",
                           ""top""=>$htmlCamposCabecalho1,
                           ""bottom""=>"""",
                        ),
                        ""cd_curso""=>array(
                           ""calculate""=>"""",
                           ""top""=>$htmlCamposCabecalho2,
                           ""bottom""=>"""",
                        ),
                     ),
                     ""showHeader""=>false,
                     ""showFooter""=>false,
                     ""columns""=>$arrCamposDetalhe,
                     ""cssClass""=>array(
                        ""table""=>""table-bordered table-striped table-sm fonte p-1"",
                        ""tf""=>""darker"",
                        ""tr"" => ""fonte p-1"",
                        ""td"" => ""fonte p-1""
                     ),
                     ""sorting""=>array(
                        ""nr_ordem""=>""asc""
                     )
                  ));
               ?>

                <table class=""table table-bordered"">
                  <tr>
                      <td rowspan=""3"" class=""text-left fonte p-1"" style=""vertical-align: middle !important;"">Legendas</td>
                  </tr>
                  <tr>
                    <td class=""text-left fonte p-1"" style=""border: none;"">NB: Nota <?= $dados_pagina[0]['ds_periodicidade'] ?></td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">MB: Média <?= $dados_pagina[0]['ds_periodicidade'] ?></td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">F: Faltas <?= $dados_pagina[0]['ds_periodicidade'] ?></td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">MA: Média Anual</td>
										<td class=""text-left fonte p-1"" style=""border: none;"">F: Recuperação Final</td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">MF: Média final</td>
                  </tr>
                  <tr>
                    <td class=""text-left fonte p-1"" style=""border: none;"">TF: Total de faltas</td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">Fr.(%): Frequência anual</td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">Sit: Situação na disciplina</td>
                  </tr>
               </table>

				<div style=""text-align: right; padding-bottom: <?= $ds_margem_inferior . 'cm' ?>;"">
				    <hr>
					<div class=""float-left rodape text-left"" style=""width: 80%; vertical-align: middle !important;"">
						<img class=""float-left"" src=""../image/logo_rodape_unimestre_v3"" alt="""">
                        <div class=""ml-3 float-left rodape"">Impresso por: <?= $usuario ?> - <?= $chave_relatorio ?></div>
					</div>
               <div class=""float-right rodape text-right"" style=""width: 20%;""></div>
		
            </div>
        </div>

            <div class=""page-break"" style=""page-break-after: always;""></div>
         </div>

      <?php } ?>
   </body>
</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[ { ""tipo"": ""uni-select-polo"", ""obrigatorio"": false, ""label"": ""Polo"", ""ds_campo"": ""cd_polo"" }, { ""tipo"": ""campo-anosemestre"", ""obrigatorio"": true, ""label"": ""Ano/Semestre"", ""ds_campo"": ""nr_anosemestre"" }, { ""tipo"": ""uni-select-curso"", ""obrigatorio"": false, ""label"": ""Curso"", ""ds_campo"": ""id_curso"" }, { ""tipo"": ""uni-busca-turma"", ""obrigatorio"": false, ""label"": ""Turma"", ""ds_campo"": ""cd_turma"" }, { ""tipo"": ""uni-busca-pessoa"", ""obrigatorio"": false, ""label"": ""Aluno"", ""ds_campo"": ""cd_pessoa"" } ]",90,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,10,1,""Boletim - Nota/Média/Falta"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL, NULL,""O relatório de Boletim apresenta informações referentes ao histórico de disciplinas dos alunos com base em um ano/semestre e turma de referência.  Serão listadas as médias e faltas do aluno conforme a periodicidade informada no parâmetro de avaliação da turma correspondente. O relatório também apresentará as notas de exame final e segunda época para as instituições que utilizam essa estrutura de avaliação."", NULL, NULL,""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Homologação,Boletim - Média/Falta - Recup. 2 Semestres,"<?php
$PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
require_once($PARMS['PASTA'] . 'nucleo.php');
require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
header('Content-type: text/html; charset=UTF-8');

use \koolreport\processes\ColumnMeta;
use \koolreport\processes\Group;
use \koolreport\processes\OnlyColumn;

// classe padrao do relatorio
class Relatorio extends \koolreport\KoolReport
{
   use \koolreport\bootstrap4\Theme;
   use \koolreport\inputs\Bindable;
   use \koolreport\inputs\POSTBinding;
   use \koolreport\export\Exportable;

   public $path_include;
   public $arrDadosFiltro;
   public $arrDadosGerais;

   public function __construct()
   {
      try {
         $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
         parent::__construct();
      } catch (Exception $e) {
         echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
         die;
      }
   }

   // inicializacao dos filtros
   function defaultParamValues()
   {
      return array(
         ""filtros"" => '{}',
         ""gerais"" => '{}'
      );
   }

   // resgate do $_POST para vinculo com os parametros
   function bindParamsToInputs()
   {
      return array(
         ""filtros"",
         ""gerais""
      );
   }

   // funcao responsavel por realizar a conexao com o banco de dados
   // e resgate dos dados tratamento dos dados do $_POST
   public function settings()
   {
      Nucleo::import('relatorios.RelatoriosConexao');
      $objRelatoriosConexao = new RelatoriosConexao;

      return $objRelatoriosConexao->settings();
   }

   // funcao responsavel por manter as consultas a serem executadas pelo relatorio
   // e geracao dos array de dados para uso posterior na visualizacao
   public function setup()
   {
      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

      if (ctype_xdigit($_POST[""filtros""])) {
         $_POST[""filtros""] = hex2bin($_POST[""filtros""]);
      }

      if (ctype_xdigit($_POST[""gerais""])) {
         $_POST[""gerais""] = hex2bin($_POST[""gerais""]);
      }

      if (isset($_POST['filtros'])) {
         $this->arrDadosFiltro = json_decode($_POST['filtros']);
      } else {
         $this->arrDadosFiltro = json_decode($_POST);
      }

      if (isset($_POST['gerais'])) {
         $this->arrDadosGerais = json_decode($_POST['gerais']);
      }

      $arrParametros = [];

      foreach ($this->arrDadosFiltro as $filtro => $valor) {
         if (!empty($valor->ds_valor)) {
            $arrParametros["":"" . $filtro] = $valor->ds_valor;
         }
      }

      $this
         ->src('unimestre')
         ->query(""
            SELECT
               # INFORMAÇÕES DE CABEÇALHO
                t.cd_coligada AS cd_coligada_cabecalho
                ,  p.cd_pessoa AS 'cd_pessoa'
                ,  p.nm_pessoa AS 'nm_pessoa'
                ,  m.anosemestre AS 'nr_anosemestre'
                ,  IF(LENGTH(m.anosemestre) = 5,
                    CONCAT(LEFT(m.anosemestre, 4), '/', RIGHT(m.anosemestre, 1)),
                    m.anosemestre
                    ) AS 'nr_anosemestre_formatado'
                , cm.DS_CURSO AS 'ds_curso'
                ,  t.codigo AS 'cd_turma'

               #NOTAS E DISCIPLINAS
                ,  d.descricao AS 'ds_disciplina'
                ,  tu.descricao AS 'ds_turno'
                ,  s.ds_situacao AS 'ds_situacao_matricula'
                ,  f.frequencia AS 'vl_frequencia'

                # ETAPA 1
                ,  ifnull(if(f.nota1 > 10,f.nota1,format(f.nota1,2)),'-') AS 'vl_nota_d1'
								,  ifnull(if(f.exame1 > 10,f.exame1,format(f.exame1,2)),'-') AS 'vl_rec_d1'										                
                ,  ifnull(if(f.nota_d1 > 10,f.nota_d1,format(f.nota_d1,2)),'-') AS 'vl_mb_d1'
                ,  ifnull(format(f.falta1,0),'-') AS 'nr_falta1'


                # ETAPA 2
                ,  ifnull(if(f.nota2 > 10,f.nota2,format(f.nota2,2)),'-') AS 'vl_nota_d2'
								,  ifnull(if(f.exame2 > 10,f.exame2,format(f.exame2,2)),'-') AS 'vl_rec_d2'
                ,  ifnull(if(f.nota_d2 > 10,f.nota_d2,format(f.nota_d2,2)),'-') AS 'vl_mb_d2'
                ,  ifnull(format(f.falta2,0),'-') AS 'nr_falta2'
								
								#REC. SEMESTRAL
								,  ifnull(format(f.nota_d5,2),'-') AS 'vl_nota_rs1'
								,  ifnull(format(f.nota_d6,2),'-') AS 'vl_nota_rs2'

                # ETAPA 3
                ,  ifnull(if(f.nota3 > 10,f.nota3,format(f.nota3,2)),'-') AS 'vl_nota_d3'
								,  ifnull(if(f.exame3 > 10,f.exame3,format(f.exame3,2)),'-') AS 'vl_rec_d3'
                ,  ifnull(if(f.nota_d3 > 10,f.nota_d3,format(f.nota_d3,2)),'-') AS 'vl_mb_d3'
                ,  ifnull(format(f.falta3,0),'-') AS 'nr_falta3'

                # ETAPA 4
                ,  ifnull(if(f.nota4 > 10,f.nota4,format(f.nota4,2)),'-') AS 'vl_nota_d4'
								,  ifnull(if(f.exame4 > 10,f.exame4,format(f.exame4,2)),'-') AS 'vl_rec_d4'
                ,  ifnull(if(f.nota_d4 > 10,f.nota_d4,format(f.nota_d4,2)),'-') AS 'vl_mb_d4'
                ,  ifnull(format(f.falta4,0),'-') AS 'nr_falta4'


                # ETAPA FINAL
								,  ifnull(if(f.mediaanual > 10,f.mediaanual,format(f.mediaanual,2)),'-') AS 'vl_media_anual'
								,  ifnull(if(f.notaexame > 10,f.notaexame,format(f.notaexame,2)),'-') AS 'vl_nota_exame'
								,  ifnull(if(f.mediaFinal > 10,f.mediaFinal,format(f.mediaFinal,2)),'-') AS 'vl_media_final'
                ,  ifnull(format(f.totalfaltas,0),'-') AS 'total_faltas'
                ,  si.ds_sigla_situacao AS 'ds_situacao_fichaindividual'

                # PARAMETROS DE AVALIACAO
                ,  apm.nr_avaliacoes AS 'nr_avaliacoes'
                ,  cpa.ds_periodo_abreviado AS 'ds_periodo_abreviado'
								,	 cpa.ds_periodicidade AS 'ds_periodicidade'
																
            FROM
                matriculas AS m
                INNER JOIN fichaindividual AS f ON (
                    f.anosemestre = m.anosemestre AND
                    f.turmamatricula = m.turma AND
                    f.codigoaluno = m.codigoaluno
                )
               INNER JOIN situacao AS s ON (s.cd_situacao = m.situacao)
               INNER JOIN situacao AS si ON (si.cd_situacao = f.situacao)
               INNER JOIN pessoas AS p ON (p.cd_pessoa = f.codigoaluno)
               INNER JOIN turmas AS t ON (t.anosemestre = f.anosemestre AND t.codigo = f.turmamatricula)
               INNER JOIN grades AS g ON (g.CD_GRADE = t.cd_grade AND g.CD_CURSO = t.curso)
               INNER JOIN turnos AS tu ON (tu.codigo = t.turno)
               INNER JOIN cursos_coligadas AS cc ON (cc.CD_CURSO = t.curso AND cc.CD_COLIGADA = t.cd_coligada)
               INNER JOIN cursos_mestre AS cm ON (cm.CD_CURSO = cc.CD_CURSO)
               INNER JOIN disciplinas AS d ON (d.codigo = f.disciplina AND d.curso = f.curso)
               INNER JOIN avaliacoes_parametros_matriz AS apm ON (apm.cd_avaliacao = t.cd_avaliacao)
               INNER JOIN cursos_periodos_avaliacoes AS cpa ON (cpa.cd_periodo_avaliacao = apm.cd_periodo_avaliacao)
            WHERE
               1=1
               "" .
               ((!empty($arrParametros["":cd_polo""]))
                  ? ""AND m.cd_polo IN (:cd_polo) ""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":nr_anosemestre""]))
                  ? ""AND f.anosemestre IN (:nr_anosemestre)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":id_curso""]))
                  ? ""AND cm.ID_CURSO IN (:id_curso)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":cd_turma""]))
                  ? ""AND f.turma IN (:cd_turma)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":cd_pessoa""]))
                  ? ""AND f.codigoaluno IN (:cd_pessoa)""
                  : NULL)
               . ""
            GROUP BY
               f.codigoaluno, f.turmamatricula, f.anosemestre, f.disciplina
            ORDER BY
               f.codigoaluno, f.turmamatricula, f.anosemestre, d.ordem
         "")
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_pessoa"" => $arrFormatoInteiro,
                  ""nr_anosemestre"" => $arrFormatoInteiro,
                  ""id_curso"" => $arrFormatoInteiro,
                  ""cd_disciplina"" => $arrFormatoInteiro,
                  ""nr_ordem"" => $arrFormatoInteiro,
                  ""cd_grade"" => $arrFormatoInteiro,
                  ""vl_frequencia"" => $arrFormatoInteiro,
                  ""nr_falta1"" => $arrFormatoInteiro,
                  ""nr_falta2"" => $arrFormatoInteiro,
                  ""nr_falta3"" => $arrFormatoInteiro,
                  ""nr_falta4"" => $arrFormatoInteiro
               )
            )
         )
         ->saveTo($consulta);

      // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
      $consulta
         ->pipe($this->dataStore(""dados_consulta""));

      $consulta
         ->pipe(new Group(array(
            ""by"" => array(
               ""cd_pessoa"",
               ""nr_anosemestre"",
               ""cd_turma""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_pessoa"",
            ""nr_anosemestre"",
            ""cd_turma""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));

require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									
									
   }
}
","<?php

   use \koolreport\widgets\koolphp\Table;
   use \koolreport\processes\Filter;

   // path pasta
   $path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

   // margens
   $ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
   $ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
   $ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
   $ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

   $sn_geracao = $_POST[""pdf""];

?>

<html>
   <head>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
      <style>
         .borda {
            border: 1px solid #dee2e6;
         }         
         .totalizador {
         min-height: 0cm !important;
         }
         .fonte {
            font-size: 11px !important;
         }
         .b {
            font-weight: bold !important;
         }
         ul li {
            font-size: 11px !important;
         }
         .rodape {
            font-size: 9px !important;
         }
      </style>
   </head>

   <body class=""relatorio"">
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

      <?php foreach($this->dataStore(""dados_consulta_agrupado"") as $visualizacao) { ?>
         <?php
            $dados_pagina = $this->dataStore(""dados_consulta"")
               ->filter(
                  ""cd_pessoa"",""="",$visualizacao[""cd_pessoa""]
               )
               ->filter(
                  ""nr_anosemestre"",""="",$visualizacao[""nr_anosemestre""]
               )
               ->filter(
                  ""cd_turma"",""="",$visualizacao[""cd_turma""]
               );
         ?>

         <div class=""container"">
            <div
               class=""conteudo""
               style=""
                  padding-top: <?=((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm'?>;
                  padding-bottom: <?=((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm'?>;
                  padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                  padding-right: <?=$ds_margem_direita . 'cm'?>;
                  min-height: 28.1cm;
            "">

               <div style=""vertical-align: top; min-height: 100;"">
                  <table style=""width: 100%;"">
                     <tr>
                        <td style=""text-align: left; width: 55%;"">
                           <?php
                              require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','cabecalho.php'));
                           ?>
                        </td>
                        <td style=""text-align: right; max-width: 45%;"">
                           <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','filtro.php')); ?>
                        </td>
                     </tr>
                  </table>
               </div>

                <h5 class=""text-center"" style=""margin: 0.25rem;"">
                    Boletim Escolar
                </h5>

               <table class=""table table-bordered"">
                  <tr>
                     <td colspan=""2"" class=""text-left fonte p-1"">Nome: <?=$dados_pagina[0]['nm_pessoa']?></td>
                     <td class=""text-left fonte p-1"">Matrícula: <?=$dados_pagina[0]['cd_pessoa']?></td>
                  </tr>
                  <tr>
                     <td colspan=""2"" class=""text-left fonte p-1"">Curso: <?=$dados_pagina[0]['ds_curso']?></td>
                     <td class=""text-left fonte p-1"">Período: <?=$dados_pagina[0]['nr_anosemestre_formatado']?></td>
                  </tr>
                  <tr>
                     <td class=""text-left fonte p-1"">Turma: <?=$dados_pagina[0]['cd_turma']?></td>
                     <td class=""text-left fonte p-1"">Turno: <?=$dados_pagina[0]['ds_turno']?></td>
                     <td class=""text-left fonte p-1"">Situação: <?=$dados_pagina[0]['ds_situacao_matricula']?></td>
                  </tr>
               </table>

               <?php
                  // Definicao dos campos que irao compor o relatorio
                  $htmlCamposCabecalho1 = ""<td rowspan='2' style='vertical-align : middle;'>Disciplinas</td>"";
                  $htmlCamposCabecalho2 = """";

                  $arrCamposDetalhe = [];
                  $arrCamposDetalhe[""ds_disciplina""] = array(""cssStyle""=>""text-align:left;"");

                  for ($i = 1; $i <= 2; $i++) {
                    $htmlCamposCabecalho1 .= ""<td class='text-center' colspan='2'>"" . $i . ""º "" . $dados_pagina[0]['ds_periodo_abreviado'] . ""</td>"";
                    $htmlCamposCabecalho2 .= ""<td class='text-center text-label'>MB</td><td class='text-center text-label'>F</td>"";
					          $arrCamposDetalhe['vl_mb_d' . $i] = array(""cssStyle""=>""text-align:center;"");	
										$arrCamposDetalhe['nr_falta'  . $i] = array(""cssStyle""=>""text-align:center;"");
                  }

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>RS1</td>"";
                  $arrCamposDetalhe['vl_nota_rs1'] = array(""cssStyle""=>""text-align:center;"");

                  for ($i = 3; $i <= $dados_pagina[0]['nr_avaliacoes']; $i++) {
                    $htmlCamposCabecalho1 .= ""<td class='text-center' colspan='2'>"" . $i . ""º "" . $dados_pagina[0]['ds_periodo_abreviado'] . ""</td>"";
                    $htmlCamposCabecalho2 .= ""<td class='text-center text-label'>MB</td><td class='text-center text-label'>F</td>"";
					          $arrCamposDetalhe['vl_mb_d' . $i] = array(""cssStyle""=>""text-align:center;"");	
										$arrCamposDetalhe['nr_falta'  . $i] = array(""cssStyle""=>""text-align:center;"");
                  }

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>RS2</td>"";
                  $arrCamposDetalhe['vl_nota_rs2'] = array(""cssStyle""=>""text-align:center;"");
									
                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>MA</td>"";
                  $arrCamposDetalhe['vl_media_anual'] = array(""cssStyle""=>""text-align:center;"");
                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>RF</td>"";
                  $arrCamposDetalhe['vl_nota_exame'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>MF</td>"";
                  $arrCamposDetalhe['vl_media_final'] = array(""cssStyle""=>""text-align:center;"");
									
				          $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>TF</td>"";
                  $arrCamposDetalhe['total_faltas'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>Fr.(%)</td>"";
                  $arrCamposDetalhe['vl_frequencia'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>Sit.</td>"";
                  $arrCamposDetalhe['ds_situacao_fichaindividual'] = array(""cssStyle""=>""text-align:center;"");

                  Table::create(array(
                     ""dataSource""=>$dados_pagina,
                     ""grouping""=>array(
                        ""cd_pessoa""=>array(
                           ""calculate""=>"""",
                           ""top""=>$htmlCamposCabecalho1,
                           ""bottom""=>"""",
                        ),
                        ""cd_curso""=>array(
                           ""calculate""=>"""",
                           ""top""=>$htmlCamposCabecalho2,
                           ""bottom""=>"""",
                        ),
                     ),
                     ""showHeader""=>false,
                     ""showFooter""=>false,
                     ""columns""=>$arrCamposDetalhe,
                     ""cssClass""=>array(
                        ""table""=>""table-bordered table-striped table-sm fonte p-1"",
                        ""tf""=>""darker"",
                        ""tr"" => ""fonte p-1"",
                        ""td"" => ""fonte p-1""
                     ),
                     ""sorting""=>array(
                        ""nr_ordem""=>""asc""
                     )
                  ));
               ?>

                <table class=""table table-bordered"">
                  <tr>
                      <td rowspan=""4"" class=""text-left fonte p-1"" style=""vertical-align: middle !important;"">Legendas</td>
                  </tr>
                  <tr>
                    <td class=""text-left fonte p-1"" style=""border: none;"">NB: Nota <?= $dados_pagina[0]['ds_periodicidade'] ?></td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">MB: Média <?= $dados_pagina[0]['ds_periodicidade'] ?></td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">F: Faltas <?= $dados_pagina[0]['ds_periodicidade'] ?></td>
										<td class=""text-left fonte p-1"" style=""border: none;"">RS1: Recuperação Semestral 1</td>
                  </tr>
                  <tr>
									  <td class=""text-left fonte p-1"" style=""border: none;"">MA: Média Anual</td>
										<td class=""text-left fonte p-1"" style=""border: none;"">RS2: Recuperação Semestral 2</td>
										<td class=""text-left fonte p-1"" style=""border: none;"">F: Recuperação Final</td>
										<td class=""text-left fonte p-1"" style=""border: none;"">MF: Média final</td>               
                  </tr>
									<tr>
										<td class=""text-left fonte p-1"" style=""border: none;"">TF: Total de faltas</td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">Fr.(%): Frequência anual</td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">Sit: Situação na disciplina</td>
									</tr>
               </table>

				<div style=""text-align: right; padding-bottom: <?= $ds_margem_inferior . 'cm' ?>;"">
				    <hr>
					<div class=""float-left rodape text-left"" style=""width: 80%; vertical-align: middle !important;"">
						<img class=""float-left"" src=""../image/logo_rodape_unimestre_v3"" alt="""">
                        <div class=""ml-3 float-left rodape"">Impresso por: <?= $usuario ?> - <?= $chave_relatorio ?></div>
					</div>
               <div class=""float-right rodape text-right"" style=""width: 20%;""></div>
		
            </div>
        </div>

            <div class=""page-break"" style=""page-break-after: always;""></div>
         </div>

      <?php } ?>
   </body>
</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[ { ""tipo"": ""uni-select-polo"", ""obrigatorio"": false, ""label"": ""Polo"", ""ds_campo"": ""cd_polo"" }, { ""tipo"": ""campo-anosemestre"", ""obrigatorio"": true, ""label"": ""Ano/Semestre"", ""ds_campo"": ""nr_anosemestre"" }, { ""tipo"": ""uni-select-curso"", ""obrigatorio"": false, ""label"": ""Curso"", ""ds_campo"": ""id_curso"" }, { ""tipo"": ""uni-busca-turma"", ""obrigatorio"": false, ""label"": ""Turma"", ""ds_campo"": ""cd_turma"" }, { ""tipo"": ""uni-busca-pessoa"", ""obrigatorio"": false, ""label"": ""Aluno"", ""ds_campo"": ""cd_pessoa"" } ]",93,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,10,1,""Boletim - Média/Falta - Recup. 2 Semestres"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL, NULL,""O relatório de Boletim apresenta informações referentes ao histórico de disciplinas dos alunos com base em um ano/semestre e turma de referência.  Serão listadas as médias e faltas do aluno conforme a periodicidade informada no parâmetro de avaliação da turma correspondente. O relatório também apresentará as notas de exame final e segunda época para as instituições que utilizam essa estrutura de avaliação."", NULL, NULL,""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Homologação,Boletim - Média/Falta - Recup. Semestral,"<?php
$PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
require_once($PARMS['PASTA'] . 'nucleo.php');
require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
header('Content-type: text/html; charset=UTF-8');

use \koolreport\processes\ColumnMeta;
use \koolreport\processes\Group;
use \koolreport\processes\OnlyColumn;

// classe padrao do relatorio
class Relatorio extends \koolreport\KoolReport
{
   use \koolreport\bootstrap4\Theme;
   use \koolreport\inputs\Bindable;
   use \koolreport\inputs\POSTBinding;
   use \koolreport\export\Exportable;

   public $path_include;
   public $arrDadosFiltro;
   public $arrDadosGerais;

   public function __construct()
   {
      try {
         $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
         parent::__construct();
      } catch (Exception $e) {
         echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
         die;
      }
   }

   // inicializacao dos filtros
   function defaultParamValues()
   {
      return array(
         ""filtros"" => '{}',
         ""gerais"" => '{}'
      );
   }

   // resgate do $_POST para vinculo com os parametros
   function bindParamsToInputs()
   {
      return array(
         ""filtros"",
         ""gerais""
      );
   }

   // funcao responsavel por realizar a conexao com o banco de dados
   // e resgate dos dados tratamento dos dados do $_POST
   public function settings()
   {
      Nucleo::import('relatorios.RelatoriosConexao');
      $objRelatoriosConexao = new RelatoriosConexao;

      return $objRelatoriosConexao->settings();
   }

   // funcao responsavel por manter as consultas a serem executadas pelo relatorio
   // e geracao dos array de dados para uso posterior na visualizacao
   public function setup()
   {
      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

      if (ctype_xdigit($_POST[""filtros""])) {
         $_POST[""filtros""] = hex2bin($_POST[""filtros""]);
      }

      if (ctype_xdigit($_POST[""gerais""])) {
         $_POST[""gerais""] = hex2bin($_POST[""gerais""]);
      }

      if (isset($_POST['filtros'])) {
         $this->arrDadosFiltro = json_decode($_POST['filtros']);
      } else {
         $this->arrDadosFiltro = json_decode($_POST);
      }

      if (isset($_POST['gerais'])) {
         $this->arrDadosGerais = json_decode($_POST['gerais']);
      }

      $arrParametros = [];

      foreach ($this->arrDadosFiltro as $filtro => $valor) {
         if (!empty($valor->ds_valor)) {
            $arrParametros["":"" . $filtro] = $valor->ds_valor;
         }
      }

      $this
         ->src('unimestre')
         ->query(""
            SELECT
                # INFORMAÇÕES DE CABEÇALHO
                t.cd_coligada AS cd_coligada_cabecalho
                ,  p.cd_pessoa AS 'cd_pessoa'
                ,  p.nm_pessoa AS 'nm_pessoa'
                ,  m.anosemestre AS 'nr_anosemestre'
                ,  IF(LENGTH(m.anosemestre) = 5,
                    CONCAT(LEFT(m.anosemestre, 4), '/', RIGHT(m.anosemestre, 1)),
                    m.anosemestre
                    ) AS 'nr_anosemestre_formatado'
                , cm.DS_CURSO AS 'ds_curso'
                ,  t.codigo AS 'cd_turma'

               #NOTAS E DISCIPLINAS
                ,  d.descricao AS 'ds_disciplina'
                ,  tu.descricao AS 'ds_turno'
                ,  s.ds_situacao AS 'ds_situacao_matricula'
                ,  f.frequencia AS 'vl_frequencia'

                # ETAPA 1
                ,  ifnull(if(f.nota1 > 10,f.nota1,format(f.nota1,2)),'-') AS 'vl_nota_d1'
								,  ifnull(if(f.exame1 > 10,f.exame1,format(f.exame1,2)),'-') AS 'vl_rec_d1'										                
                ,  ifnull(if(f.nota_d1 > 10,f.nota_d1,format(f.nota_d1,2)),'-') AS 'vl_mb_d1'
                ,  ifnull(format(f.falta1,0),'-') AS 'nr_falta1'


                # ETAPA 2
                ,  ifnull(if(f.nota2 > 10,f.nota2,format(f.nota2,2)),'-') AS 'vl_nota_d2'
								,  ifnull(if(f.exame2 > 10,f.exame2,format(f.exame2,2)),'-') AS 'vl_rec_d2'
                ,  ifnull(if(f.nota_d2 > 10,f.nota_d2,format(f.nota_d2,2)),'-') AS 'vl_mb_d2'
                ,  ifnull(format(f.falta2,0),'-') AS 'nr_falta2'
								
								#REC. SEMESTRAL
								,  ifnull(format(f.nota_d5,2),'-') AS 'vl_nota_rs1'
								,  ifnull(format(f.nota_d6,2),'-') AS 'vl_nota_rs2'

                # ETAPA 3
                ,  ifnull(if(f.nota3 > 10,f.nota3,format(f.nota3,2)),'-') AS 'vl_nota_d3'
								,  ifnull(if(f.exame3 > 10,f.exame3,format(f.exame3,2)),'-') AS 'vl_rec_d3'
                ,  ifnull(if(f.nota_d3 > 10,f.nota_d3,format(f.nota_d3,2)),'-') AS 'vl_mb_d3'
                ,  ifnull(format(f.falta3,0),'-') AS 'nr_falta3'

                # ETAPA 4
                ,  ifnull(if(f.nota4 > 10,f.nota4,format(f.nota4,2)),'-') AS 'vl_nota_d4'
								,  ifnull(if(f.exame4 > 10,f.exame4,format(f.exame4,2)),'-') AS 'vl_rec_d4'
                ,  ifnull(if(f.nota_d4 > 10,f.nota_d4,format(f.nota_d4,2)),'-') AS 'vl_mb_d4'
                ,  ifnull(format(f.falta4,0),'-') AS 'nr_falta4'


                # ETAPA FINAL
								,  ifnull(if(f.mediaanual > 10,f.mediaanual,format(f.mediaanual,2)),'-') AS 'vl_media_anual'
								,  ifnull(if(f.notaexame > 10,f.notaexame,format(f.notaexame,2)),'-') AS 'vl_nota_exame'
								,  ifnull(if(f.mediaFinal > 10,f.mediaFinal,format(f.mediaFinal,2)),'-') AS 'vl_media_final'
                ,  ifnull(format(f.totalfaltas,0),'-') AS 'total_faltas'
                ,  si.ds_sigla_situacao AS 'ds_situacao_fichaindividual'

                # PARAMETROS DE AVALIACAO
                ,  apm.nr_avaliacoes AS 'nr_avaliacoes'
                ,  cpa.ds_periodo_abreviado AS 'ds_periodo_abreviado'
								,	 cpa.ds_periodicidade AS 'ds_periodicidade'
								
            FROM
                matriculas AS m
                INNER JOIN fichaindividual AS f ON (
                    f.anosemestre = m.anosemestre AND
                    f.turmamatricula = m.turma AND
                    f.codigoaluno = m.codigoaluno
                )
               INNER JOIN situacao AS s ON (s.cd_situacao = m.situacao)
               INNER JOIN situacao AS si ON (si.cd_situacao = f.situacao)
               INNER JOIN pessoas AS p ON (p.cd_pessoa = f.codigoaluno)
               INNER JOIN turmas AS t ON (t.anosemestre = f.anosemestre AND t.codigo = f.turmamatricula)
               INNER JOIN grades AS g ON (g.CD_GRADE = t.cd_grade AND g.CD_CURSO = t.curso)
               INNER JOIN turnos AS tu ON (tu.codigo = t.turno)
               INNER JOIN cursos_coligadas AS cc ON (cc.CD_CURSO = t.curso AND cc.CD_COLIGADA = t.cd_coligada)
               INNER JOIN cursos_mestre AS cm ON (cm.CD_CURSO = cc.CD_CURSO)
               INNER JOIN disciplinas AS d ON (d.codigo = f.disciplina AND d.curso = f.curso)
               INNER JOIN avaliacoes_parametros_matriz AS apm ON (apm.cd_avaliacao = t.cd_avaliacao)
               INNER JOIN cursos_periodos_avaliacoes AS cpa ON (cpa.cd_periodo_avaliacao = apm.cd_periodo_avaliacao)
            WHERE
               1=1
               "" .
               ((!empty($arrParametros["":cd_polo""]))
                  ? ""AND m.cd_polo IN (:cd_polo) ""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":nr_anosemestre""]))
                  ? ""AND f.anosemestre IN (:nr_anosemestre)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":id_curso""]))
                  ? ""AND cm.ID_CURSO IN (:id_curso)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":cd_turma""]))
                  ? ""AND f.turma IN (:cd_turma)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":cd_pessoa""]))
                  ? ""AND f.codigoaluno IN (:cd_pessoa)""
                  : NULL)
               . ""
            GROUP BY
               f.codigoaluno, f.turmamatricula, f.anosemestre, f.disciplina
            ORDER BY
               f.codigoaluno, f.turmamatricula, f.anosemestre, d.ordem
         "")
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_pessoa"" => $arrFormatoInteiro,
                  ""nr_anosemestre"" => $arrFormatoInteiro,
                  ""id_curso"" => $arrFormatoInteiro,
                  ""cd_disciplina"" => $arrFormatoInteiro,
                  ""nr_ordem"" => $arrFormatoInteiro,
                  ""cd_grade"" => $arrFormatoInteiro,
                  ""vl_frequencia"" => $arrFormatoInteiro,
                  ""nr_falta1"" => $arrFormatoInteiro,
                  ""nr_falta2"" => $arrFormatoInteiro,
                  ""nr_falta3"" => $arrFormatoInteiro,
                  ""nr_falta4"" => $arrFormatoInteiro
               )
            )
         )
         ->saveTo($consulta);

      // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
      $consulta
         ->pipe($this->dataStore(""dados_consulta""));

      $consulta
         ->pipe(new Group(array(
            ""by"" => array(
               ""cd_pessoa"",
               ""nr_anosemestre"",
               ""cd_turma""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_pessoa"",
            ""nr_anosemestre"",
            ""cd_turma""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));

require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									
									
   }
}
","<?php

   use \koolreport\widgets\koolphp\Table;
   use \koolreport\processes\Filter;

   // path pasta
   $path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

   // margens
   $ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
   $ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
   $ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
   $ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

   $sn_geracao = $_POST[""pdf""];

?>

<html>
   <head>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
      <style>
         .borda {
            border: 1px solid #dee2e6;
         }         
         .totalizador {
         min-height: 0cm !important;
         }
         .fonte {
            font-size: 11px !important;
         }
         .b {
            font-weight: bold !important;
         }
         ul li {
            font-size: 11px !important;
         }
         .rodape {
            font-size: 9px !important;
         }
      </style>
   </head>

   <body class=""relatorio"">
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

      <?php foreach($this->dataStore(""dados_consulta_agrupado"") as $visualizacao) { ?>
         <?php
            $dados_pagina = $this->dataStore(""dados_consulta"")
               ->filter(
                  ""cd_pessoa"",""="",$visualizacao[""cd_pessoa""]
               )
               ->filter(
                  ""nr_anosemestre"",""="",$visualizacao[""nr_anosemestre""]
               )
               ->filter(
                  ""cd_turma"",""="",$visualizacao[""cd_turma""]
               );
         ?>

         <div class=""container"">
            <div
               class=""conteudo""
               style=""
                  padding-top: <?=((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm'?>;
                  padding-bottom: <?=((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm'?>;
                  padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                  padding-right: <?=$ds_margem_direita . 'cm'?>;
                  min-height: 28.1cm;
            "">

               <div style=""vertical-align: top; min-height: 100;"">
                  <table style=""width: 100%;"">
                     <tr>
                        <td style=""text-align: left; width: 55%;"">
                           <?php
                              require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','cabecalho.php'));
                           ?>
                        </td>
                        <td style=""text-align: right; max-width: 45%;"">
                           <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','filtro.php')); ?>
                        </td>
                     </tr>
                  </table>
               </div>

                <h5 class=""text-center"" style=""margin: 0.25rem;"">
                    Boletim Escolar
                </h5>

               <table class=""table table-bordered"">
                  <tr>
                     <td colspan=""2"" class=""text-left fonte p-1"">Nome: <?=$dados_pagina[0]['nm_pessoa']?></td>
                     <td class=""text-left fonte p-1"">Matrícula: <?=$dados_pagina[0]['cd_pessoa']?></td>
                  </tr>
                  <tr>
                     <td colspan=""2"" class=""text-left fonte p-1"">Curso: <?=$dados_pagina[0]['ds_curso']?></td>
                     <td class=""text-left fonte p-1"">Período: <?=$dados_pagina[0]['nr_anosemestre_formatado']?></td>
                  </tr>
                  <tr>
                     <td class=""text-left fonte p-1"">Turma: <?=$dados_pagina[0]['cd_turma']?></td>
                     <td class=""text-left fonte p-1"">Turno: <?=$dados_pagina[0]['ds_turno']?></td>
                     <td class=""text-left fonte p-1"">Situação: <?=$dados_pagina[0]['ds_situacao_matricula']?></td>
                  </tr>
               </table>

               <?php
                  // Definicao dos campos que irao compor o relatorio
                  $htmlCamposCabecalho1 = ""<td rowspan='2' style='vertical-align : middle;'>Disciplinas</td>"";
                  $htmlCamposCabecalho2 = """";

                  $arrCamposDetalhe = [];
                  $arrCamposDetalhe[""ds_disciplina""] = array(""cssStyle""=>""text-align:left;"");

                  for ($i = 1; $i <= 2; $i++) {
                    $htmlCamposCabecalho1 .= ""<td class='text-center' colspan='2'>"" . $i . ""º "" . $dados_pagina[0]['ds_periodo_abreviado'] . ""</td>"";
                    $htmlCamposCabecalho2 .= ""<td class='text-center text-label'>MB</td><td class='text-center text-label'>F</td>"";
					          $arrCamposDetalhe['vl_mb_d' . $i] = array(""cssStyle""=>""text-align:center;"");	
										$arrCamposDetalhe['nr_falta'  . $i] = array(""cssStyle""=>""text-align:center;"");
                  }
									
									$htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>RS</td>"";
                  $arrCamposDetalhe['vl_nota_rs'] = array(""cssStyle""=>""text-align:center;"");
									
									for ($i = 3; $i <= $dados_pagina[0]['nr_avaliacoes']; $i++) {
                    $htmlCamposCabecalho1 .= ""<td class='text-center' colspan='2'>"" . $i . ""º "" . $dados_pagina[0]['ds_periodo_abreviado'] . ""</td>"";
                    $htmlCamposCabecalho2 .= ""<td class='text-center text-label'>MB</td><td class='text-center text-label'>F</td>"";
					          $arrCamposDetalhe['vl_mb_d' . $i] = array(""cssStyle""=>""text-align:center;"");	
										$arrCamposDetalhe['nr_falta'  . $i] = array(""cssStyle""=>""text-align:center;"");
                  }
									
                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>MA</td>"";
                  $arrCamposDetalhe['vl_media_anual'] = array(""cssStyle""=>""text-align:center;"");
									
                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>RF</td>"";
                  $arrCamposDetalhe['vl_nota_exame'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>MF</td>"";
                  $arrCamposDetalhe['vl_media_final'] = array(""cssStyle""=>""text-align:center;"");
									
				          $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>TF</td>"";
                  $arrCamposDetalhe['total_faltas'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>Fr.(%)</td>"";
                  $arrCamposDetalhe['vl_frequencia'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>Sit</td>"";
                  $arrCamposDetalhe['ds_situacao_fichaindividual'] = array(""cssStyle""=>""text-align:center;"");

                  Table::create(array(
                     ""dataSource""=>$dados_pagina,
                     ""grouping""=>array(
                        ""cd_pessoa""=>array(
                           ""calculate""=>"""",
                           ""top""=>$htmlCamposCabecalho1,
                           ""bottom""=>"""",
                        ),
                        ""cd_curso""=>array(
                           ""calculate""=>"""",
                           ""top""=>$htmlCamposCabecalho2,
                           ""bottom""=>"""",
                        ),
                     ),
                     ""showHeader""=>false,
                     ""showFooter""=>false,
                     ""columns""=>$arrCamposDetalhe,
                     ""cssClass""=>array(
                        ""table""=>""table-bordered table-striped table-sm fonte p-1"",
                        ""tf""=>""darker"",
                        ""tr"" => ""fonte p-1"",
                        ""td"" => ""fonte p-1""
                     ),
                     ""sorting""=>array(
                        ""nr_ordem""=>""asc""
                     )
                  ));
               ?>

                <table class=""table table-bordered"">
                  <tr>
                      <td rowspan=""3"" class=""text-left fonte p-1"" style=""vertical-align: middle !important;"">Legendas</td>
                  </tr>
                  <tr>
                     <td class=""text-left fonte p-1"" style=""border: none;"">MB: Média <?= $dados_pagina[0]['ds_periodicidade'] ?></td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">F: Faltas <?= $dados_pagina[0]['ds_periodicidade'] ?></td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">MA: Média Anual</td>
										 <td class=""text-left fonte p-1"" style=""border: none;"">RS: Recuperação Semestral</td>
										 <td class=""text-left fonte p-1"" style=""border: none;"">F: Recuperação Final</td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">MF: Média final</td>
                  </tr>
                  <tr>
										 <td class=""text-left fonte p-1"" style=""border: none;"">TF: Total de faltas</td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">Fr.(%): Frequência anual</td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">Sit: Situação na disciplina</td>
                  </tr>
               </table>

				<div style=""text-align: right; padding-bottom: <?= $ds_margem_inferior . 'cm' ?>;"">
				    <hr>
					<div class=""float-left rodape text-left"" style=""width: 80%; vertical-align: middle !important;"">
						<img class=""float-left"" src=""../image/logo_rodape_unimestre_v3"" alt="""">
                        <div class=""ml-3 float-left rodape"">Impresso por: <?= $usuario ?> - <?= $chave_relatorio ?></div>
					</div>
               <div class=""float-right rodape text-right"" style=""width: 20%;""></div>
		
            </div>
        </div>

            <div class=""page-break"" style=""page-break-after: always;""></div>
         </div>

      <?php } ?>
   </body>
</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[ { ""tipo"": ""uni-select-polo"", ""obrigatorio"": false, ""label"": ""Polo"", ""ds_campo"": ""cd_polo"" }, { ""tipo"": ""campo-anosemestre"", ""obrigatorio"": true, ""label"": ""Ano/Semestre"", ""ds_campo"": ""nr_anosemestre"" }, { ""tipo"": ""uni-select-curso"", ""obrigatorio"": false, ""label"": ""Curso"", ""ds_campo"": ""id_curso"" }, { ""tipo"": ""uni-busca-turma"", ""obrigatorio"": false, ""label"": ""Turma"", ""ds_campo"": ""cd_turma"" }, { ""tipo"": ""uni-busca-pessoa"", ""obrigatorio"": false, ""label"": ""Aluno"", ""ds_campo"": ""cd_pessoa"" } ]",94,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,10,1,""Boletim - Média/Falta - Recup. Semestral"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL, NULL,""O relatório de Boletim apresenta informações referentes ao histórico de disciplinas dos alunos com base em um ano/semestre e turma de referência.  Serão listadas as médias e faltas do aluno conforme a periodicidade informada no parâmetro de avaliação da turma correspondente. O relatório também apresentará as notas de exame final e segunda época para as instituições que utilizam essa estrutura de avaliação."", NULL, NULL,""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Homologação,Boletim - Nota/Recup./Somatória,"<?php
$PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
require_once($PARMS['PASTA'] . 'nucleo.php');
require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
header('Content-type: text/html; charset=UTF-8');

use \koolreport\processes\ColumnMeta;
use \koolreport\processes\Group;
use \koolreport\processes\OnlyColumn;

// classe padrao do relatorio
class Relatorio extends \koolreport\KoolReport
{
   use \koolreport\bootstrap4\Theme;
   use \koolreport\inputs\Bindable;
   use \koolreport\inputs\POSTBinding;
   use \koolreport\export\Exportable;

   public $path_include;
   public $arrDadosFiltro;
   public $arrDadosGerais;

   public function __construct()
   {
      try {
         $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
         parent::__construct();
      } catch (Exception $e) {
         echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
         die;
      }
   }

   // inicializacao dos filtros
   function defaultParamValues()
   {
      return array(
         ""filtros"" => '{}',
         ""gerais"" => '{}'
      );
   }

   // resgate do $_POST para vinculo com os parametros
   function bindParamsToInputs()
   {
      return array(
         ""filtros"",
         ""gerais""
      );
   }

   // funcao responsavel por realizar a conexao com o banco de dados
   // e resgate dos dados tratamento dos dados do $_POST
   public function settings()
   {
      Nucleo::import('relatorios.RelatoriosConexao');
      $objRelatoriosConexao = new RelatoriosConexao;

      return $objRelatoriosConexao->settings();
   }

   // funcao responsavel por manter as consultas a serem executadas pelo relatorio
   // e geracao dos array de dados para uso posterior na visualizacao
   public function setup()
   {
      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

      if (ctype_xdigit($_POST[""filtros""])) {
         $_POST[""filtros""] = hex2bin($_POST[""filtros""]);
      }

      if (ctype_xdigit($_POST[""gerais""])) {
         $_POST[""gerais""] = hex2bin($_POST[""gerais""]);
      }

      if (isset($_POST['filtros'])) {
         $this->arrDadosFiltro = json_decode($_POST['filtros']);
      } else {
         $this->arrDadosFiltro = json_decode($_POST);
      }

      if (isset($_POST['gerais'])) {
         $this->arrDadosGerais = json_decode($_POST['gerais']);
      }

      $arrParametros = [];

      foreach ($this->arrDadosFiltro as $filtro => $valor) {
         if (!empty($valor->ds_valor)) {
            $arrParametros["":"" . $filtro] = $valor->ds_valor;
         }
      }

      $this
         ->src('unimestre')
         ->query(""
            SELECT
                # INFORMAÇÕES DE CABEÇALHO
                t.cd_coligada AS cd_coligada_cabecalho
                ,  p.cd_pessoa AS 'cd_pessoa'
                ,  p.nm_pessoa AS 'nm_pessoa'
                ,  m.anosemestre AS 'nr_anosemestre'
                ,  IF(LENGTH(m.anosemestre) = 5,
                    CONCAT(LEFT(m.anosemestre, 4), '/', RIGHT(m.anosemestre, 1)),
                    m.anosemestre
                    ) AS 'nr_anosemestre_formatado'
                , cm.DS_CURSO AS 'ds_curso'
                ,  t.codigo AS 'cd_turma'

               #NOTAS E DISCIPLINAS
                ,  d.descricao AS 'ds_disciplina'
                ,  tu.descricao AS 'ds_turno'
                ,  s.ds_situacao AS 'ds_situacao_matricula'
                ,  f.frequencia AS 'vl_frequencia'

                # ETAPA 1
                ,  ifnull(if(f.nota1 > 10,f.nota1,format(f.nota1,2)),'-') AS 'vl_nota_d1'
								,  ifnull(if(f.exame1 > 10,f.exame1,format(f.exame1,2)),'-') AS 'vl_rec_d1'										                
                ,  ifnull(if(f.nota_d1 > 10,f.nota_d1,format(f.nota_d1,2)),'-') AS 'vl_mb_d1'
                ,  ifnull(format(f.falta1,0),'-') AS 'nr_falta1'


                # ETAPA 2
                ,  ifnull(if(f.nota2 > 10,f.nota2,format(f.nota2,2)),'-') AS 'vl_nota_d2'
								,  ifnull(if(f.exame2 > 10,f.exame2,format(f.exame2,2)),'-') AS 'vl_rec_d2'
                ,  ifnull(if(f.nota_d2 > 10,f.nota_d2,format(f.nota_d2,2)),'-') AS 'vl_mb_d2'
                ,  ifnull(format(f.falta2,0),'-') AS 'nr_falta2'
								
								#REC. SEMESTRAL
								,  ifnull(format(f.nota_d5,2),'-') AS 'vl_nota_rs1'
								,  ifnull(format(f.nota_d6,2),'-') AS 'vl_nota_rs2'

                # ETAPA 3
                ,  ifnull(if(f.nota3 > 10,f.nota3,format(f.nota3,2)),'-') AS 'vl_nota_d3'
								,  ifnull(if(f.exame3 > 10,f.exame3,format(f.exame3,2)),'-') AS 'vl_rec_d3'
                ,  ifnull(if(f.nota_d3 > 10,f.nota_d3,format(f.nota_d3,2)),'-') AS 'vl_mb_d3'
                ,  ifnull(format(f.falta3,0),'-') AS 'nr_falta3'

                # ETAPA 4
                ,  ifnull(if(f.nota4 > 10,f.nota4,format(f.nota4,2)),'-') AS 'vl_nota_d4'
								,  ifnull(if(f.exame4 > 10,f.exame4,format(f.exame4,2)),'-') AS 'vl_rec_d4'
                ,  ifnull(if(f.nota_d4 > 10,f.nota_d4,format(f.nota_d4,2)),'-') AS 'vl_mb_d4'
                ,  ifnull(format(f.falta4,0),'-') AS 'nr_falta4'


                # ETAPA FINAL
								,  ifnull(if(f.mediaanual > 10,f.mediaanual,format(f.mediaanual,2)),'-') AS 'vl_media_anual'
								,  ifnull(if(f.notaexame > 10,f.notaexame,format(f.notaexame,2)),'-') AS 'vl_nota_exame'
								,  ifnull(if(f.mediaFinal > 10,f.mediaFinal,format(f.mediaFinal,2)),'-') AS 'vl_media_final'
                ,  ifnull(format(f.totalfaltas,0),'-') AS 'total_faltas'
                ,  si.ds_sigla_situacao AS 'ds_situacao_fichaindividual'

                # PARAMETROS DE AVALIACAO
                ,  apm.nr_avaliacoes AS 'nr_avaliacoes'
                ,  cpa.ds_periodo_abreviado AS 'ds_periodo_abreviado'
								,	 cpa.ds_periodicidade AS 'ds_periodicidade'
								
            FROM
                matriculas AS m
                INNER JOIN fichaindividual AS f ON (
                    f.anosemestre = m.anosemestre AND
                    f.turmamatricula = m.turma AND
                    f.codigoaluno = m.codigoaluno
                )
               INNER JOIN situacao AS s ON (s.cd_situacao = m.situacao)
               INNER JOIN situacao AS si ON (si.cd_situacao = f.situacao)
               INNER JOIN pessoas AS p ON (p.cd_pessoa = f.codigoaluno)
               INNER JOIN turmas AS t ON (t.anosemestre = f.anosemestre AND t.codigo = f.turmamatricula)
               INNER JOIN grades AS g ON (g.CD_GRADE = t.cd_grade AND g.CD_CURSO = t.curso)
               INNER JOIN turnos AS tu ON (tu.codigo = t.turno)
               INNER JOIN cursos_coligadas AS cc ON (cc.CD_CURSO = t.curso AND cc.CD_COLIGADA = t.cd_coligada)
               INNER JOIN cursos_mestre AS cm ON (cm.CD_CURSO = cc.CD_CURSO)
               INNER JOIN disciplinas AS d ON (d.codigo = f.disciplina AND d.curso = f.curso)
               INNER JOIN avaliacoes_parametros_matriz AS apm ON (apm.cd_avaliacao = t.cd_avaliacao)
               INNER JOIN cursos_periodos_avaliacoes AS cpa ON (cpa.cd_periodo_avaliacao = apm.cd_periodo_avaliacao)
            WHERE
               1=1
               "" .
               ((!empty($arrParametros["":cd_polo""]))
                  ? ""AND m.cd_polo IN (:cd_polo) ""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":nr_anosemestre""]))
                  ? ""AND f.anosemestre IN (:nr_anosemestre)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":id_curso""]))
                  ? ""AND cm.ID_CURSO IN (:id_curso)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":cd_turma""]))
                  ? ""AND f.turma IN (:cd_turma)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":cd_pessoa""]))
                  ? ""AND f.codigoaluno IN (:cd_pessoa)""
                  : NULL)
               . ""
            GROUP BY
               f.codigoaluno, f.turmamatricula, f.anosemestre, f.disciplina
            ORDER BY
               f.codigoaluno, f.turmamatricula, f.anosemestre, d.ordem
         "")
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_pessoa"" => $arrFormatoInteiro,
                  ""nr_anosemestre"" => $arrFormatoInteiro,
                  ""id_curso"" => $arrFormatoInteiro,
                  ""cd_disciplina"" => $arrFormatoInteiro,
                  ""nr_ordem"" => $arrFormatoInteiro,
                  ""cd_grade"" => $arrFormatoInteiro,
                  ""vl_frequencia"" => $arrFormatoInteiro,
                  ""nr_falta1"" => $arrFormatoInteiro,
                  ""nr_falta2"" => $arrFormatoInteiro,
                  ""nr_falta3"" => $arrFormatoInteiro,
                  ""nr_falta4"" => $arrFormatoInteiro
               )
            )
         )
         ->saveTo($consulta);

      // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
      $consulta
         ->pipe($this->dataStore(""dados_consulta""));

      $consulta
         ->pipe(new Group(array(
            ""by"" => array(
               ""cd_pessoa"",
               ""nr_anosemestre"",
               ""cd_turma""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_pessoa"",
            ""nr_anosemestre"",
            ""cd_turma""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));

require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									
									
   }
}
","<?php

   use \koolreport\widgets\koolphp\Table;
   use \koolreport\processes\Filter;

   // path pasta
   $path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

   // margens
   $ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
   $ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
   $ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
   $ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

   $sn_geracao = $_POST[""pdf""];

?>

<html>
   <head>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
      <style>
         .borda {
            border: 1px solid #dee2e6;
         }         
         .totalizador {
         min-height: 0cm !important;
         }
         .fonte {
            font-size: 11px !important;
         }
         .b {
            font-weight: bold !important;
         }
         ul li {
            font-size: 11px !important;
         }
         .rodape {
            font-size: 9px !important;
         }
      </style>
   </head>

   <body class=""relatorio"">
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

      <?php foreach($this->dataStore(""dados_consulta_agrupado"") as $visualizacao) { ?>
         <?php
            $dados_pagina = $this->dataStore(""dados_consulta"")
               ->filter(
                  ""cd_pessoa"",""="",$visualizacao[""cd_pessoa""]
               )
               ->filter(
                  ""nr_anosemestre"",""="",$visualizacao[""nr_anosemestre""]
               )
               ->filter(
                  ""cd_turma"",""="",$visualizacao[""cd_turma""]
               );
         ?>

         <div class=""container"">
            <div
               class=""conteudo""
               style=""
                  padding-top: <?=((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm'?>;
                  padding-bottom: <?=((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm'?>;
                  padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                  padding-right: <?=$ds_margem_direita . 'cm'?>;
                  min-height: 28.1cm;
            "">

               <div style=""vertical-align: top; min-height: 100;"">
                  <table style=""width: 100%;"">
                     <tr>
                        <td style=""text-align: left; width: 55%;"">
                           <?php
                              require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','cabecalho.php'));
                           ?>
                        </td>
                        <td style=""text-align: right; max-width: 45%;"">
                           <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','filtro.php')); ?>
                        </td>
                     </tr>
                  </table>
               </div>

                <h5 class=""text-center"" style=""margin: 0.25rem;"">
                    Boletim Escolar
                </h5>

               <table class=""table table-bordered"">
                  <tr>
                     <td colspan=""2"" class=""text-left fonte p-1"">Nome: <?=$dados_pagina[0]['nm_pessoa']?></td>
                     <td class=""text-left fonte p-1"">Matrícula: <?=$dados_pagina[0]['cd_pessoa']?></td>
                  </tr>
                  <tr>
                     <td colspan=""2"" class=""text-left fonte p-1"">Curso: <?=$dados_pagina[0]['ds_curso']?></td>
                     <td class=""text-left fonte p-1"">Período: <?=$dados_pagina[0]['nr_anosemestre_formatado']?></td>
                  </tr>
                  <tr>
                     <td class=""text-left fonte p-1"">Turma: <?=$dados_pagina[0]['cd_turma']?></td>
                     <td class=""text-left fonte p-1"">Turno: <?=$dados_pagina[0]['ds_turno']?></td>
                     <td class=""text-left fonte p-1"">Situação: <?=$dados_pagina[0]['ds_situacao_matricula']?></td>
                  </tr>
               </table>

               <?php
                  // Definicao dos campos que irao compor o relatorio
                  $htmlCamposCabecalho1 = ""<td rowspan='2' style='vertical-align : middle;'>Disciplinas</td>"";
                  $htmlCamposCabecalho2 = """";

                  $arrCamposDetalhe = [];
                  $arrCamposDetalhe[""ds_disciplina""] = array(""cssStyle""=>""text-align:left;"");

                  for ($i = 1; $i <= 2; $i++) {
                    $htmlCamposCabecalho1 .= ""<td class='text-center' colspan='4'>"" . $i . ""º Trim </td>"";
                    $htmlCamposCabecalho2 .= ""<td class='text-center text-label'>NB</td><td class='text-center text-label'>RC</td><td class='text-center text-label'>SB</td><td class='text-center text-label'>F</td>"";
                    $arrCamposDetalhe['vl_nota_d' . $i] = array(""cssStyle""=>""text-align:center;"");
					          $arrCamposDetalhe['vl_rec_d' . $i] = array(""cssStyle""=>""text-align:center;"");
					          $arrCamposDetalhe['vl_mb_d' . $i] = array(""cssStyle""=>""text-align:center;"");	
										$arrCamposDetalhe['nr_falta'  . $i] = array(""cssStyle""=>""text-align:center;"");
                  }
									
									for ($i = 3; $i <= 3; $i++) {
                    $htmlCamposCabecalho1 .= ""<td class='text-center' colspan='3'>"" . $i . ""º Trim </td>"";
                    $htmlCamposCabecalho2 .= ""<td class='text-center text-label'>NB</td><td class='text-center text-label'>SB</td><td class='text-center text-label'>F</td>"";
                    $arrCamposDetalhe['vl_nota_d' . $i] = array(""cssStyle""=>""text-align:center;"");
					          $arrCamposDetalhe['vl_mb_d' . $i] = array(""cssStyle""=>""text-align:center;"");	
										$arrCamposDetalhe['nr_falta'  . $i] = array(""cssStyle""=>""text-align:center;"");
                  }

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>SA</td>"";
                  $arrCamposDetalhe['vl_media_anual'] = array(""cssStyle""=>""text-align:center;"");
                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>RF</td>"";
                  $arrCamposDetalhe['vl_nota_exame'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>SF</td>"";
                  $arrCamposDetalhe['vl_media_final'] = array(""cssStyle""=>""text-align:center;"");
									
				          $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>TF</td>"";
                  $arrCamposDetalhe['total_faltas'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>Fr.(%)</td>"";
                  $arrCamposDetalhe['vl_frequencia'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>Sit.</td>"";
                  $arrCamposDetalhe['ds_situacao_fichaindividual'] = array(""cssStyle""=>""text-align:center;"");

                  Table::create(array(
                     ""dataSource""=>$dados_pagina,
                     ""grouping""=>array(
                        ""cd_pessoa""=>array(
                           ""calculate""=>"""",
                           ""top""=>$htmlCamposCabecalho1,
                           ""bottom""=>"""",
                        ),
                        ""cd_curso""=>array(
                           ""calculate""=>"""",
                           ""top""=>$htmlCamposCabecalho2,
                           ""bottom""=>"""",
                        ),
                     ),
                     ""showHeader""=>false,
                     ""showFooter""=>false,
                     ""columns""=>$arrCamposDetalhe,
                     ""cssClass""=>array(
                        ""table""=>""table-bordered table-striped table-sm fonte p-1"",
                        ""tf""=>""darker"",
                        ""tr"" => ""fonte p-1"",
                        ""td"" => ""fonte p-1""
                     ),
                     ""sorting""=>array(
                        ""nr_ordem""=>""asc""
                     )
                  ));
               ?>

                <table class=""table table-bordered"">
                  <tr>
                      <td rowspan=""3"" class=""text-left fonte p-1"" style=""vertical-align: middle !important;"">Legendas</td>
                  </tr>
                  <tr>
                     <td class=""text-left fonte p-1"" style=""border: none;"">NT: Nota Trimestral </td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">RT: Recuperação Trimestral </td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">ST: Somatório Trimestral </td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">F: Faltas Trimestral </td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">SA: Somatório Anual</td>
                  </tr>
                  <tr>
                    <td class=""text-left fonte p-1"" style=""border: none;"">F: Recuperação Final</td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">SF: Somatório Final</td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">TF: Total de faltas</td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">Fr.(%): Frequência anual</td>
                    <td class=""text-left fonte p-1"" style=""border: none;"">Sit: Situação na disciplina</td>
                  </tr>
               </table>

				<div style=""text-align: right; padding-bottom: <?= $ds_margem_inferior . 'cm' ?>;"">
				    <hr>
					<div class=""float-left rodape text-left"" style=""width: 80%; vertical-align: middle !important;"">
						<img class=""float-left"" src=""../image/logo_rodape_unimestre_v3"" alt="""">
                        <div class=""ml-3 float-left rodape"">Impresso por: <?= $usuario ?> - <?= $chave_relatorio ?></div>
					</div>
               <div class=""float-right rodape text-right"" style=""width: 20%;""></div>
		
            </div>
        </div>

            <div class=""page-break"" style=""page-break-after: always;""></div>
         </div>

      <?php } ?>
   </body>
</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[ { ""tipo"": ""uni-select-polo"", ""obrigatorio"": false, ""label"": ""Polo"", ""ds_campo"": ""cd_polo"" }, { ""tipo"": ""campo-anosemestre"", ""obrigatorio"": true, ""label"": ""Ano/Semestre"", ""ds_campo"": ""nr_anosemestre"" }, { ""tipo"": ""uni-select-curso"", ""obrigatorio"": false, ""label"": ""Curso"", ""ds_campo"": ""id_curso"" }, { ""tipo"": ""uni-busca-turma"", ""obrigatorio"": false, ""label"": ""Turma"", ""ds_campo"": ""cd_turma"" }, { ""tipo"": ""uni-busca-pessoa"", ""obrigatorio"": false, ""label"": ""Aluno"", ""ds_campo"": ""cd_pessoa"" } ]",95,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,10,1,""Boletim - Nota/Recup./Somatória"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL, NULL,""O relatório de Boletim apresenta informações referentes ao histórico de disciplinas dos alunos com base em um ano/semestre e turma de referência.  Serão listadas as médias e faltas do aluno conforme a periodicidade informada no parâmetro de avaliação da turma correspondente. O relatório também apresentará as notas de exame final e segunda época para as instituições que utilizam essa estrutura de avaliação."", NULL, NULL,""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Homologação,Boletim - Média/Falta/Recup. Anual,"<?php
$PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
require_once($PARMS['PASTA'] . 'nucleo.php');
require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
header('Content-type: text/html; charset=UTF-8');

use \koolreport\processes\ColumnMeta;
use \koolreport\processes\Group;
use \koolreport\processes\OnlyColumn;

// classe padrao do relatorio
class Relatorio extends \koolreport\KoolReport
{
   use \koolreport\bootstrap4\Theme;
   use \koolreport\inputs\Bindable;
   use \koolreport\inputs\POSTBinding;
   use \koolreport\export\Exportable;

   public $path_include;
   public $arrDadosFiltro;
   public $arrDadosGerais;

   public function __construct()
   {
      try {
         $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
         parent::__construct();
      } catch (Exception $e) {
         echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
         die;
      }
   }

   // inicializacao dos filtros
   function defaultParamValues()
   {
      return array(
         ""filtros"" => '{}',
         ""gerais"" => '{}'
      );
   }

   // resgate do $_POST para vinculo com os parametros
   function bindParamsToInputs()
   {
      return array(
         ""filtros"",
         ""gerais""
      );
   }

   // funcao responsavel por realizar a conexao com o banco de dados
   // e resgate dos dados tratamento dos dados do $_POST
   public function settings()
   {
      Nucleo::import('relatorios.RelatoriosConexao');
      $objRelatoriosConexao = new RelatoriosConexao;

      return $objRelatoriosConexao->settings();
   }

   // funcao responsavel por manter as consultas a serem executadas pelo relatorio
   // e geracao dos array de dados para uso posterior na visualizacao
   public function setup()
   {
      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

      if (ctype_xdigit($_POST[""filtros""])) {
         $_POST[""filtros""] = hex2bin($_POST[""filtros""]);
      }

      if (ctype_xdigit($_POST[""gerais""])) {
         $_POST[""gerais""] = hex2bin($_POST[""gerais""]);
      }

      if (isset($_POST['filtros'])) {
         $this->arrDadosFiltro = json_decode($_POST['filtros']);
      } else {
         $this->arrDadosFiltro = json_decode($_POST);
      }

      if (isset($_POST['gerais'])) {
         $this->arrDadosGerais = json_decode($_POST['gerais']);
      }

      $arrParametros = [];

      foreach ($this->arrDadosFiltro as $filtro => $valor) {
         if (!empty($valor->ds_valor)) {
            $arrParametros["":"" . $filtro] = $valor->ds_valor;
         }
      }

      $this
         ->src('unimestre')
         ->query(""
            SELECT
               # INFORMAÇÕES DE CABEÇALHO
                t.cd_coligada AS cd_coligada_cabecalho
                ,  p.cd_pessoa AS 'cd_pessoa'
                ,  p.nm_pessoa AS 'nm_pessoa'
                ,  m.anosemestre AS 'nr_anosemestre'
                ,  IF(LENGTH(m.anosemestre) = 5,
                    CONCAT(LEFT(m.anosemestre, 4), '/', RIGHT(m.anosemestre, 1)),
                    m.anosemestre
                    ) AS 'nr_anosemestre_formatado'
                , cm.DS_CURSO AS 'ds_curso'
                ,  t.codigo AS 'cd_turma'

               #NOTAS E DISCIPLINAS
                ,  d.descricao AS 'ds_disciplina'
                ,  tu.descricao AS 'ds_turno'
                ,  s.ds_situacao AS 'ds_situacao_matricula'
                ,  f.frequencia AS 'vl_frequencia'

                # ETAPA 1
                ,  ifnull(if(f.nota1 > 10,f.nota1,format(f.nota1,1)),'-') AS 'vl_nota_d1'
								,  ifnull(if(f.exame1 > 10,f.exame1,format(f.exame1,1)),'-') AS 'vl_rec_d1'										                
                ,  ifnull(if(f.nota_d1 > 10,f.nota_d1,format(f.nota_d1,1)),'-') AS 'vl_mb_d1'
                ,  ifnull(format(f.falta1,0),'-') AS 'nr_falta1'


                # ETAPA 2
                ,  ifnull(if(f.nota2 > 10,f.nota2,format(f.nota2,1)),'-') AS 'vl_nota_d2'
								,  ifnull(if(f.exame2 > 10,f.exame2,format(f.exame2,1)),'-') AS 'vl_rec_d2'
                ,  ifnull(if(f.nota_d2 > 10,f.nota_d2,format(f.nota_d2,1)),'-') AS 'vl_mb_d2'
                ,  ifnull(format(f.falta2,0),'-') AS 'nr_falta2'
								
								#REC. SEMESTRAL
								,  ifnull(format(f.nota_d5,1),'-') AS 'vl_nota_rs1'
								,  ifnull(format(f.nota_d6,1),'-') AS 'vl_nota_rs2'

                # ETAPA 3
                ,  ifnull(if(f.nota3 > 10,f.nota3,format(f.nota3,1)),'-') AS 'vl_nota_d3'
								,  ifnull(if(f.exame3 > 10,f.exame3,format(f.exame3,1)),'-') AS 'vl_rec_d3'
                ,  ifnull(if(f.nota_d3 > 10,f.nota_d3,format(f.nota_d3,1)),'-') AS 'vl_mb_d3'
                ,  ifnull(format(f.falta3,0),'-') AS 'nr_falta3'

                # ETAPA 4
                ,  ifnull(if(f.nota4 > 10,f.nota4,format(f.nota4,1)),'-') AS 'vl_nota_d4'
								,  ifnull(if(f.exame4 > 10,f.exame4,format(f.exame4,1)),'-') AS 'vl_rec_d4'
                ,  ifnull(if(f.nota_d4 > 10,f.nota_d4,format(f.nota_d4,1)),'-') AS 'vl_mb_d4'
                ,  ifnull(format(f.falta4,0),'-') AS 'nr_falta4'


                # ETAPA FINAL
								,  ifnull(if(f.mediaanual > 10,f.mediaanual,format(f.mediaanual,1)),'-') AS 'vl_media_anual'
								,  ifnull(if(f.notaexame > 10,f.notaexame,format(f.notaexame,1)),'-') AS 'vl_nota_exame'
								,  '-' AS 'vl_nota_apos_exame'
								,	 '-' AS 'vl_nota_recup'
								,	 '-' AS 'vl_nota_apos_recup'
								,  ifnull(if(f.mediaFinal > 10,f.mediaFinal,format(f.mediaFinal,1)),'-') AS 'vl_media_final'
                ,  ifnull(format(f.totalfaltas,0),'-') AS 'total_faltas'
                ,  si.ds_sigla_situacao AS 'ds_situacao_fichaindividual'

                # PARAMETROS DE AVALIACAO
                ,  apm.nr_avaliacoes AS 'nr_avaliacoes'
                ,  cpa.ds_periodo_abreviado AS 'ds_periodo_abreviado'
								,	 cpa.ds_periodicidade AS 'ds_periodicidade'
								
            FROM
                matriculas AS m
                INNER JOIN fichaindividual AS f ON (
                    f.anosemestre = m.anosemestre AND
                    f.turmamatricula = m.turma AND
                    f.codigoaluno = m.codigoaluno
                )
               INNER JOIN situacao AS s ON (s.cd_situacao = m.situacao)
               INNER JOIN situacao AS si ON (si.cd_situacao = f.situacao)
               INNER JOIN pessoas AS p ON (p.cd_pessoa = f.codigoaluno)
               INNER JOIN turmas AS t ON (t.anosemestre = f.anosemestre AND t.codigo = f.turmamatricula)
               INNER JOIN grades AS g ON (g.CD_GRADE = t.cd_grade AND g.CD_CURSO = t.curso)
               INNER JOIN turnos AS tu ON (tu.codigo = t.turno)
               INNER JOIN cursos_coligadas AS cc ON (cc.CD_CURSO = t.curso AND cc.CD_COLIGADA = t.cd_coligada)
               INNER JOIN cursos_mestre AS cm ON (cm.CD_CURSO = cc.CD_CURSO)
               INNER JOIN disciplinas AS d ON (d.codigo = f.disciplina AND d.curso = f.curso)
               INNER JOIN avaliacoes_parametros_matriz AS apm ON (apm.cd_avaliacao = t.cd_avaliacao)
               INNER JOIN cursos_periodos_avaliacoes AS cpa ON (cpa.cd_periodo_avaliacao = apm.cd_periodo_avaliacao)
            WHERE
               1=1
               "" .
               ((!empty($arrParametros["":cd_polo""]))
                  ? ""AND m.cd_polo IN (:cd_polo) ""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":nr_anosemestre""]))
                  ? ""AND f.anosemestre IN (:nr_anosemestre)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":id_curso""]))
                  ? ""AND cm.ID_CURSO IN (:id_curso)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":cd_turma""]))
                  ? ""AND f.turma IN (:cd_turma)""
                  : NULL)
               . "" "" .
               ((!empty($arrParametros["":cd_pessoa""]))
                  ? ""AND f.codigoaluno IN (:cd_pessoa)""
                  : NULL)
               . ""
            GROUP BY
               f.codigoaluno, f.turmamatricula, f.anosemestre, f.disciplina
            ORDER BY
               f.codigoaluno, f.turmamatricula, f.anosemestre, d.ordem
         "")
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_pessoa"" => $arrFormatoInteiro,
                  ""nr_anosemestre"" => $arrFormatoInteiro,
                  ""id_curso"" => $arrFormatoInteiro,
                  ""cd_disciplina"" => $arrFormatoInteiro,
                  ""nr_ordem"" => $arrFormatoInteiro,
                  ""cd_grade"" => $arrFormatoInteiro,
                  ""vl_frequencia"" => $arrFormatoInteiro,
                  ""nr_falta1"" => $arrFormatoInteiro,
                  ""nr_falta2"" => $arrFormatoInteiro,
                  ""nr_falta3"" => $arrFormatoInteiro,
                  ""nr_falta4"" => $arrFormatoInteiro
               )
            )
         )
         ->saveTo($consulta);

      // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
      $consulta
         ->pipe($this->dataStore(""dados_consulta""));

      $consulta
         ->pipe(new Group(array(
            ""by"" => array(
               ""cd_pessoa"",
               ""nr_anosemestre"",
               ""cd_turma""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_pessoa"",
            ""nr_anosemestre"",
            ""cd_turma""
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));

require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									
									
   }
}
","<?php

   use \koolreport\widgets\koolphp\Table;
   use \koolreport\processes\Filter;

   // path pasta
   $path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

   // margens
   $ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
   $ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
   $ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
   $ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

   $sn_geracao = $_POST[""pdf""];

?>

<html>
   <head>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
      <style>
         .borda {
            border: 1px solid #dee2e6;
         }         
         .totalizador {
         min-height: 0cm !important;
         }
         .fonte {
            font-size: 11px !important;
         }
         .b {
            font-weight: bold !important;
         }
         ul li {
            font-size: 11px !important;
         }
         .rodape {
            font-size: 9px !important;
         }
      </style>
   </head>

   <body class=""relatorio"">
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
      <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

      <?php foreach($this->dataStore(""dados_consulta_agrupado"") as $visualizacao) { ?>
         <?php
            $dados_pagina = $this->dataStore(""dados_consulta"")
               ->filter(
                  ""cd_pessoa"",""="",$visualizacao[""cd_pessoa""]
               )
               ->filter(
                  ""nr_anosemestre"",""="",$visualizacao[""nr_anosemestre""]
               )
               ->filter(
                  ""cd_turma"",""="",$visualizacao[""cd_turma""]
               );
         ?>

         <div class=""container"">
            <div
               class=""conteudo""
               style=""
                  padding-top: <?=((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm'?>;
                  padding-bottom: <?=((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm'?>;
                  padding-left: <?=$ds_margem_esquerda . 'cm'?>;
                  padding-right: <?=$ds_margem_direita . 'cm'?>;
                  min-height: 28.1cm;
            "">

               <div style=""vertical-align: top; min-height: 100;"">
                  <table style=""width: 100%;"">
                     <tr>
                        <td style=""text-align: left; width: 55%;"">
                           <?php
                              require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','cabecalho.php'));
                           ?>
                        </td>
                        <td style=""text-align: right; max-width: 45%;"">
                           <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes','filtro.php')); ?>
                        </td>
                     </tr>
                  </table>
               </div>

                <h5 class=""text-center"" style=""margin: 0.25rem;"">
                    Boletim Escolar
                </h5>

               <table class=""table table-bordered"">
                  <tr>
                     <td colspan=""2"" class=""text-left fonte p-1"">Nome: <?=$dados_pagina[0]['nm_pessoa']?></td>
                     <td class=""text-left fonte p-1"">Matrícula: <?=$dados_pagina[0]['cd_pessoa']?></td>
                  </tr>
                  <tr>
                     <td colspan=""2"" class=""text-left fonte p-1"">Curso: <?=$dados_pagina[0]['ds_curso']?></td>
                     <td class=""text-left fonte p-1"">Período: <?=$dados_pagina[0]['nr_anosemestre_formatado']?></td>
                  </tr>
                  <tr>
                     <td class=""text-left fonte p-1"">Turma: <?=$dados_pagina[0]['cd_turma']?></td>
                     <td class=""text-left fonte p-1"">Turno: <?=$dados_pagina[0]['ds_turno']?></td>
                     <td class=""text-left fonte p-1"">Situação: <?=$dados_pagina[0]['ds_situacao_matricula']?></td>
                  </tr>
               </table>

               <?php
                  // Definicao dos campos que irao compor o relatorio
                  $htmlCamposCabecalho1 = ""<td rowspan='2' style='vertical-align : middle;'>Disciplinas</td>"";
                  $htmlCamposCabecalho2 = """";

                  $arrCamposDetalhe = [];
                  $arrCamposDetalhe[""ds_disciplina""] = array(""cssStyle""=>""text-align:left;"");

                  for ($i = 1; $i <= $dados_pagina[0]['nr_avaliacoes']; $i++) {
                    $htmlCamposCabecalho1 .= ""<td class='text-center' colspan='2'>"" . $i . ""º "" . $dados_pagina[0]['ds_periodo_abreviado'] . ""</td>"";
                    $htmlCamposCabecalho2 .= ""<td class='text-center text-label'>MB</td><td class='text-center text-label'>F</td>"";
					          $arrCamposDetalhe['vl_mb_d' . $i] = array(""cssStyle""=>""text-align:center;"");	
										$arrCamposDetalhe['nr_falta'  . $i] = array(""cssStyle""=>""text-align:center;"");
                  }

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>MA</td>"";
                  $arrCamposDetalhe['vl_media_anual'] = array(""cssStyle""=>""text-align:center;"");
									
									$htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>EF</td>"";
                  $arrCamposDetalhe['vl_nota_exame'] = array(""cssStyle""=>""text-align:center;"");
									
									$htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>MAEF</td>"";
                  $arrCamposDetalhe['vl_nota_apos_exame'] = array(""cssStyle""=>""text-align:center;"");
									
                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>RF</td>"";
                  $arrCamposDetalhe['vl_nota_recup'] = array(""cssStyle""=>""text-align:center;"");
									
									$htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>MARF</td>"";
                  $arrCamposDetalhe['vl_nota_apos_recup'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>MF</td>"";
                  $arrCamposDetalhe['vl_media_final'] = array(""cssStyle""=>""text-align:center;"");
									
				          $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>TF</td>"";
                  $arrCamposDetalhe['total_faltas'] = array(""cssStyle""=>""text-align:center;"");

                  $htmlCamposCabecalho1 .= ""<td rowspan='2'class='text-center' style='vertical-align : middle;text-align:center;'>Sit</td>"";
                  $arrCamposDetalhe['ds_situacao_fichaindividual'] = array(""cssStyle""=>""text-align:center;"");

                  Table::create(array(
                     ""dataSource""=>$dados_pagina,
                     ""grouping""=>array(
                        ""cd_pessoa""=>array(
                           ""calculate""=>"""",
                           ""top""=>$htmlCamposCabecalho1,
                           ""bottom""=>"""",
                        ),
                        ""cd_curso""=>array(
                           ""calculate""=>"""",
                           ""top""=>$htmlCamposCabecalho2,
                           ""bottom""=>"""",
                        ),
                     ),
                     ""showHeader""=>false,
                     ""showFooter""=>false,
                     ""columns""=>$arrCamposDetalhe,
                     ""cssClass""=>array(
                        ""table""=>""table-bordered table-striped table-sm fonte p-1"",
                        ""tf""=>""darker"",
                        ""tr"" => ""fonte p-1"",
                        ""td"" => ""fonte p-1""
                     ),
                     ""sorting""=>array(
                        ""nr_ordem""=>""asc""
                     )
                  ));
               ?>

                <table class=""table table-bordered"">
                  <tr>
                      <td rowspan=""4"" class=""text-left fonte p-1"" style=""vertical-align: middle !important;"">Legendas</td>
                  </tr>
                  <tr>
                     <td class=""text-left fonte p-1"" style=""border: none;"">MB: Média <?= $dados_pagina[0]['ds_periodicidade'] ?></td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">F: Faltas <?= $dados_pagina[0]['ds_periodicidade'] ?></td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">MA: Média Anual</td>
										 <td class=""text-left fonte p-1"" style=""border: none;"">EF: Exame Final</td>								 
                  </tr>
									<tr>
										 <td class=""text-left fonte p-1"" style=""border: none;"">MAEF: Média Após Exame Final</td>
										 <td class=""text-left fonte p-1"" style=""border: none;"">RF: Recuperação Final</td>
										 <td class=""text-left fonte p-1"" style=""border: none;"">MARF: Média Após Recuperação Final</td>
									</tr>
                  <tr>
										<td class=""text-left fonte p-1"" style=""border: none;"">MF: Média final</td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">TF: Total de faltas</td>
                     <td class=""text-left fonte p-1"" style=""border: none;"">Sit: Situação na disciplina</td>
                  </tr>
               </table>

				<div style=""text-align: right; padding-bottom: <?= $ds_margem_inferior . 'cm' ?>;"">
				    <hr>
					<div class=""float-left rodape text-left"" style=""width: 80%; vertical-align: middle !important;"">
						<img class=""float-left"" src=""../image/logo_rodape_unimestre_v3"" alt="""">
                        <div class=""ml-3 float-left rodape"">Impresso por: <?= $usuario ?> - <?= $chave_relatorio ?></div>
					</div>
               <div class=""float-right rodape text-right"" style=""width: 20%;""></div>
		
            </div>
        </div>

            <div class=""page-break"" style=""page-break-after: always;""></div>
         </div>

      <?php } ?>
   </body>
</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[ { ""tipo"": ""uni-select-polo"", ""obrigatorio"": false, ""label"": ""Polo"", ""ds_campo"": ""cd_polo"" }, { ""tipo"": ""campo-anosemestre"", ""obrigatorio"": true, ""label"": ""Ano/Semestre"", ""ds_campo"": ""nr_anosemestre"" }, { ""tipo"": ""uni-select-curso"", ""obrigatorio"": false, ""label"": ""Curso"", ""ds_campo"": ""id_curso"" }, { ""tipo"": ""uni-busca-turma"", ""obrigatorio"": false, ""label"": ""Turma"", ""ds_campo"": ""cd_turma"" }, { ""tipo"": ""uni-busca-pessoa"", ""obrigatorio"": false, ""label"": ""Aluno"", ""ds_campo"": ""cd_pessoa"" } ]",96,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,10,1,""Boletim - Média/Falta/Recup. Anual"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL, NULL,""O relatório de Boletim apresenta informações referentes ao histórico de disciplinas dos alunos com base em um ano/semestre e turma de referência.  Serão listadas as médias e faltas do aluno conforme a periodicidade informada no parâmetro de avaliação da turma correspondente. O relatório também apresentará as notas de exame final e segunda época para as instituições que utilizam essa estrutura de avaliação."", NULL, NULL,""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Homologação,Relatório de matrícula com disciplinas e horários,"<?php
$PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
require_once($PARMS['PASTA'] . 'nucleo.php');
require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
header('Content-type: text/html; charset=UTF-8');

use \koolreport\processes\ColumnMeta;
use \koolreport\processes\Group;
use \koolreport\processes\OnlyColumn;

// classe padrao do relatorio
class Relatorio extends \koolreport\KoolReport
{
      use \koolreport\bootstrap4\Theme;
      use \koolreport\inputs\Bindable;
      use \koolreport\inputs\POSTBinding;
      use \koolreport\cloudexport\Exportable;

      const C_SN_CLOUD_EXPORT = true;

    public $path_include;
    public $arrDadosFiltro;
    public $arrDadosGerais;
    public $sn_autenticado = true;

    public function __construct()
    {
        try {
            $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
            parent::__construct();
        } catch (Exception $e) {
            echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
            die;
        }
    }

    // inicializacao dos filtros
    function defaultParamValues()
    {
        return array(
            ""filtros"" => '{}',
            ""gerais"" => '{}'
        );
    }

    // resgate do $_POST para vinculo com os parametros
    function bindParamsToInputs()
    {
        return array(
            ""filtros"",
            ""gerais""
        );
    }

    // funcao responsavel por realizar a conexao com o banco de dados
    // e resgate dos dados tratamento dos dados do $_POST
    public function settings()
    {
        Nucleo::import('relatorios.RelatoriosConexao');
        $objRelatoriosConexao = new RelatoriosConexao;

        return $objRelatoriosConexao->settings();
    }

    // funcao responsavel por manter as consultas a serem executadas pelo relatorio
    // e geracao dos array de dados para uso posterior na visualizacao
    public function setup()
    {
        require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

        if (isset($_POST['filtros'])) {
            $this->arrDadosFiltro = json_decode($_POST['filtros']);
        } else {
            $this->arrDadosFiltro = json_decode($_POST);
        }

        if (isset($_POST['gerais'])) {
            $this->arrDadosGerais = json_decode($_POST['gerais']);
        }

        $arrParametros = [];

        foreach ($this->arrDadosFiltro as $filtro => $valor) {
            if (!empty($valor->ds_valor)) {
                $arrParametros["":"" . $filtro] = $valor->ds_valor;
            }
        }

        $this->src('unimestre')->query(
			""
            SELECT
                fi.codigoaluno AS cd_pessoa,
                p.nm_pessoa AS nm_aluno,
                fi.anosemestre AS nr_anosemestre,
                fi.curso AS cd_curso,
                fi.turma AS cd_turma,
                fi.turmamatricula AS turmamatricula,
                cm.DS_CURSO AS ds_curso,
                fi.disciplina AS cd_disciplina,
                d.descricao AS disc_desc,
                IFNULL(us.ds_sala,'NI') AS sala,
                fi.serie AS fase,
                c.cd_coligada AS cd_unidade,
                s.ds_situacao AS ds_situacao,
                gd.VL_VALOR AS vl_ch,
                gd.CD_GRADE AS matriz_grade,
                max( gd.NR_AULAS ) AS nr_creditos_financeiros,
                CONCAT(
                    LEFT ( fi.anosemestre, 4 ),
                    '/',
                RIGHT ( fi.anosemestre, 1 )) AS anosem,
				-- FUNCOES DO FINANCEIRO
                GET_COUNT_PARCELAS ( fi.anosemestre, fi.curso, fi.turmamatricula, fi.codigoaluno ) AS qtde_parcelas,
                REPLACE(GET_VL_PARCELAS ( fi.anosemestre, fi.curso, fi.turmamatricula, fi.codigoaluno),',','.') AS vl_tot_parcelas,
                GET_VENC_FIRST_PARC ( fi.anosemestre, fi.curso, fi.turmamatricula, fi.codigoaluno ) AS venc_first_parc,
                GET_REL_175_GESTAO ( fi.codigoaluno, fi.turmamatricula, fi.anosemestre ) AS total_vl_table,
                GET_DIA_DEMAIS_PARCELAS ( fi.anosemestre, fi.curso, fi.turmamatricula, fi.codigoaluno ) AS demais_parcelas,
                GET_SUM_CREDIT_FIN ( fi.codigoaluno, fi.turmamatricula, fi.anosemestre ) AS sum_credit_finan,
                -- FUNCAO DOS DIAS DA SEMANA seg - sab
                IFNULL(GET_VERIFICA_TURNO(fi.anosemestre, fi.codigoaluno, fi.turma, fi.disciplina, 2),'-') as seg,
                IFNULL(GET_VERIFICA_TURNO(fi.anosemestre, fi.codigoaluno, fi.turma, fi.disciplina, 3),'-') as terc,
                IFNULL(GET_VERIFICA_TURNO(fi.anosemestre, fi.codigoaluno, fi.turma, fi.disciplina, 4),'-') as qua,
                IFNULL(GET_VERIFICA_TURNO(fi.anosemestre, fi.codigoaluno, fi.turma, fi.disciplina, 5),'-') as qui,
                IFNULL(GET_VERIFICA_TURNO(fi.anosemestre, fi.codigoaluno, fi.turma, fi.disciplina, 6),'-') as sex,
                IFNULL(GET_VERIFICA_TURNO(fi.anosemestre, fi.codigoaluno, fi.turma, fi.disciplina, 7),'-') as sab
									
            FROM
                fichaindividual fi
                INNER JOIN turmas t ON ( t.Codigo = fi.Turma AND t.AnoSemestre = fi.AnoSemestre )
                INNER JOIN situacao s ON ( s.cd_situacao = fi.situacao )
                INNER JOIN coligadas AS c ON ( c.cd_coligada = t.cd_coligada )
                INNER JOIN cursos_coligadas AS cc ON ( cc.cd_coligada = t.cd_coligada AND cc.cd_curso = t.curso )
                INNER JOIN departamentos AS de ON ( cc.cd_depto = de.codigo )
                INNER JOIN cursos_mestre cm ON ( cm.CD_CURSO = t.curso )
                INNER JOIN pessoas p ON ( p.cd_pessoa = fi.codigoaluno )
                INNER JOIN disciplinas d ON ( fi.Disciplina = d.Codigo AND fi.Curso = d.Curso )
                LEFT JOIN grades_disciplinas gd ON ( gd.CD_GRADE = t.cd_grade AND gd.CD_CURSO = t.curso AND gd.CD_DISCIPLINA = fi.disciplina )
                LEFT JOIN turmas_horarios th ON ( th.disciplina = fi.disciplina AND th.turma = fi.turma AND th.anosemestre = fi.anosemestre )
                LEFT JOIN horarios h ON ( h.codigo = th.cd_horario )
                LEFT JOIN uni_salas us ON ( t.cd_sala = us.cd_sala ) 
            WHERE
                1 = 1 
                AND fi.situacao NOT IN ( 3, 4, 5, 6, 7, 8, 10 ) 


                "" .
                  ((!empty($arrParametros["":cd_coligada""]))
                     ? ""AND t.cd_coligada IN (:cd_coligada)""
                     : NULL
                  )
                . ""

               "" .
               ((!empty($arrParametros["":nr_anosemestre""]))
                  ? ""AND fi.anosemestre IN (:nr_anosemestre)""
                  : NULL)
               . ""

               "" .
                  ((!empty($arrParametros["":cd_departamento""]))
                     ? ""AND cc.cd_depto IN (:cd_departamento)""
                     : NULL
                  )
               . ""

                "" .
                  ((!empty($arrParametros["":cd_turma""]))
                     ? ""AND fi.turmamatricula IN (:cd_turma)""
                     : NULL)
               . ""

               "" .
                  ((!empty($arrParametros["":id_curso""]))
                     ? ""AND cm.id_curso IN (:id_curso)""
                     : NULL
                  )
               . ""

               "" .
                  ((!empty($arrParametros["":cd_pessoa""]))
                     ? ""AND fi.codigoaluno IN (:cd_pessoa)""
                     : NULL
                  )
               . ""

            GROUP BY
                fi.turmamatricula,
                fi.codigoaluno,
                fi.disciplina 
            "")

            // aplicacao de filtro a consulta
            ->params(
                $arrParametros
            )
            // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
            // para simplificar e melhorar a apresentacao dos dados na visualizacao
            ->pipe(
                new ColumnMeta(
                    array(
                        ""cd_pessoa"" => $arrFormatoInteiro,
												""vl_tot_parcelas"" => $arrFormatoMoeda

                    )
                )
            )
            ->saveTo($consulta);

        // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
        $consulta
            ->pipe($this->dataStore(""dados_consulta""));
        $consulta
            ->pipe(new Group(array(
                ""by"" => array(
                    ""nr_anosemestre"",
                    ""turmamatricula"",
                    ""cd_pessoa""
                )
            )))
            ->pipe($this->dataStore(""dados_consulta_agrupado""));

			require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));
    }
}
","<?php

use \koolreport\widgets\koolphp\Table;
use \koolreport\processes\Filter;

// path pasta
$path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

// margens
$ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
$ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
$ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
$ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

$sn_geracao = $_POST[""pdf""];

$sn_possui_cabecalho = !empty($this->dataStore(""dados_cabecalhos"")->data());
?>

<html>

<head>
   <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
   <style type=""text/css"">
      .text-label {
         font-size: 7pt !important;
      }

      .tabela-cabecalho td {
         padding: 0.2rem !important;
         vertical-align: middle !important;
      }

      .b {
         font-weight: bold;
      }

      .legenda {
         font-size: 8pt !important;
      }

      .borda td {
         border: 1px solid !important;
      }

      .fonte td {
         font-size: <?= ($sn_geracao ? '15px' : '12px') ?> !important;
      }

      .fonte1 {
         font-size: <?= ($sn_geracao ? '15px' : '12px') ?> !important;
      }

      .fonte-prof-disc {
         font-size: <?= ($sn_geracao ? '11px' : '9px') ?> !important;
      }

      .fonte2 {
         font-size: <?= ($sn_geracao ? '17px' : '14px') ?> !important;
      }

      .fonte3 {
         font-size: <?= ($sn_geracao ? '13px' : '10px') ?> !important;
      }

      .fonte-sub-titulo {
         font-size: 17px !important;
      }

      .pa1 {
         padding: <?= ($sn_geracao ? '0.35rem' : '0.10rem') ?> !important;
      }

      .cinza {
         color: rgb(128, 128, 128) !important;
      }

      .bg-container {
         position: fixed;
         height: 100%;
         width: 100%;
         z-index: 0;
         background-size: 100% 100%;
      }

      .conteudo {
         position: relative;
         z-index: 1;
      }
   </style>
</head>

<body class=""relatorio"">
   <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
   <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
   <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>
   <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'valida_consulta_registros.php')); ?>

   <?php foreach ($this->dataStore(""dados_consulta_agrupado"") as $visualizacao) { ?>

      <?php
      // Dados filtrados por aluno, anosemestre e turma
      $dados_pagina = $this->dataStore(""dados_consulta"")
         ->filter(
            ""cd_pessoa"",
            ""="",
            $visualizacao[""cd_pessoa""]
         )
         ->filter(
            ""nr_anosemestre"",
            ""="",
            $visualizacao[""nr_anosemestre""]
         )
         ->filter(
            ""turmamatricula"",
            ""="",
            $visualizacao[""turmamatricula""]
         );

      $link_timbrado = '';

      if ($dados_pagina[0]['cd_unidade'] == 3) {
         $link_timbrado = 'https://d1z6iiblq5xbrx.cloudfront.net/producao/f49b30fbce1b60a597a9767460e644e644debbab66ca1c121a589f5a29a35809_2024030108545817092940981299.jpg';
      } else {
         $link_timbrado = 'https://d1z6iiblq5xbrx.cloudfront.net/producao/f49b30fbce1b60a597a9767460e644e644debbab66ca1c121a589f5a29a35809_2024030108545817092940981299.jpg';
      }
      $nr_credit_finan = $this->dataStore('dados_disciplinas')->sum(""nr_creditos_financeiros"");
      $nr_sum_ch = $this->dataStore('dados_disciplinas')->sum(""vl_ch"");
      ?>

      <div class=""container"">
         <?php
         $arrMeses = array('Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro');
         ?>
         <?php if ($sn_geracao) { ?><div class=""bg-container"" style=""background-image: url(<?= $link_timbrado ?>);""></div> <?php } ?>
         <div class=""conteudo"" style=""
               padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
               padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
               padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
               padding-right: <?= $ds_margem_direita . 'cm' ?>;
               "">

            <div style=""margin-top: 190px; text-align: center; margin-bottom: 35px;"">
               <div style=""width: 100%; text-align: end; margin-bottom: 25px"" ;> Data de impressão: <?= date(""d"") ?> de <?= $arrMeses[date(""m"") - 1] ?> de <?= date(""Y"") ?> </div>
               <h1> Relatório de matrícula com disciplinas e horários </h1>
            </div>

            <table style=""width: 100%; margin-left: auto; margin-right: auto; border: 1px solid #4e4e4e !important; padding: 0.5rem !important;"">
               <tbody>
                  <tr>
                     <td colspan=""2"" class=""font-min"" style=""text-align:left; font-weight:bold; padding: 5px !important; border: 1px solid #4e4e4e !important; width: 5%;"">Código de matrícula: <?php echo $dados_pagina[0]['cd_pessoa'] ?> </td>
                  </tr>
                  <tr>
                     <td colspan=""2"" class=""font-min"" style=""text-align:left; font-weight:bold; padding: 5px !important; border: 1px solid #4e4e4e !important; width: 5%;"">Nome: <?php echo $dados_pagina[0]['nm_aluno'] ?> </td>
                  </tr>
                  <tr>
                     <td class=""font-min"" style=""text-align:left; font-weight:bold; padding: 5px !important; border: 1px solid #4e4e4e !important; width: 5%;"">Curso: <?php echo $dados_pagina[0]['ds_curso'] ?> </td>
                     <td class=""font-min"" style=""text-align:left; font-weight:bold; padding: 5px !important; border: 1px solid #4e4e4e !important; width: 5%;""> Matriz: <?php echo $dados_pagina[0]['matriz_grade'] ?> </td>
                  </tr>
                  <tr>
                     <td class=""font-min"" style=""text-align:left; font-weight:bold; padding: 5px !important; border: 1px solid #4e4e4e !important; width: 5%;"">Situação: <?php echo $dados_pagina[0]['ds_situacao'] ?> </td>
                     <td class=""font-min"" style=""text-align:left; font-weight:bold; padding: 5px !important; border: 1px solid #4e4e4e !important; width: 5%;"">Ano/Semestre: <?php echo $dados_pagina[0]['anosem'] ?> </td>
                  </tr>
               </tbody>
            </table>

            <div style=""margin-top: 15px;"">
               <h3>DISCIPLINAS MATRICULADAS</h3>
            </div>

            <table style=""width: 100%; border: 1px solid #4e4e4e !important; padding: 0.5rem !important;"">
               <tbody>
                  <tr>
                     <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 4%;"">Fase</td>
                     <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 20%;"">Turma</td>
                     <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 25%;"">Disciplina</td>
                     <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 4%;"">CF <br> Mensais </td>
                     <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 4%;"">CH</td>
                     <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 4%;"">2ª</td>
                     <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 4%;"">3ª</td>
                     <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 4%;"">4ª</td>
                     <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 4%;"">5ª</td>
                     <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 4%;"">6ª</td>
                     <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 4%;"">Sab</td>
                     <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 15%;"">Sala <br> Bloco</td>
                  </tr>
                  <?php foreach ($dados_pagina as $key => $info) {
                  ?>
                     <tr>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 4%;""><?php echo $info['fase'] ?></td>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 20%;""><?php echo $info['cd_turma'] ?></td>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 25%;""><?php echo $info['disc_desc'] ?></td>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 4%;""><?php echo $info['nr_creditos_financeiros'] ?></td>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 4%;""><?php echo $info['vl_ch'] ?></td>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 4%;""><?php echo $info['seg'] ?></td>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 4%;""><?php echo $info['terc'] ?></td>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 4%;""><?php echo $info['qua'] ?></td>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 4%;""><?php echo $info['qui'] ?></td>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 4%;""><?php echo $info['sex'] ?></td>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 4%;""><?php echo $info['sab'] ?></td>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 15%;""><?php echo $info['sala'] ?></td>
                  <?php } ?>
                  </tr>
                  <tr>
                  <?php echo $dados_pagina[0]['total_vl_table'] ?>
                  </tr>
               </tbody>
            </table>

            <div style=""display: flex; justify-content: flex-end; margin-top: 20px;"">
               <table style=""width: 60%; border: 1px solid #4e4e4e !important; padding: 0.5rem !important;"">
                  <tbody>
                     <tr>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 5%;""> Total de créditos financeiros do semestre: <?php echo $dados_pagina[0]['sum_credit_finan'] ?></td>
                     </tr>
                     <tr>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 5%;"">Valor total do 1º semestre em R$: <?php echo number_format($dados_pagina[0]['vl_tot_parcelas'], 2, ',', '.') ?></td>
                     </tr>
                     <tr>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 5%;"">Total de parcelas: <?php echo $dados_pagina[0]['qtde_parcelas'] ?></td>
                     </tr>
                     <tr>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 5%;"">Data do vencimento da 1ª parcela: <?php echo $dados_pagina[0]['venc_first_parc'] ?></td>
                     </tr>
                     <tr>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 5%;"">Data do vencimento das demais parcelas: 5º dia útil do mês</td>
                     </tr>
                  </tbody>
               </table>
            </div>

            <div style=""display: flex; justify-content: flex-end; margin-top: 20px;"">
               <table style=""width: 60%; border: 1px solid #4e4e4e !important; padding: 0.5rem !important;"">
                  <tbody>
                     <tr>
                        <td colspan=""3"" style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 5%;""> Horários dos períodos</td>
                     </tr>
                     <tr>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 5%;""> Matutino</td>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 5%;""> Vespertino</td>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 5%;""> Noturno</td>
                     </tr>
                     <tr>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 5%;""> 8h 30min às 11h 45min </td>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 5%;""> 14h às 17h 15min</td>
                        <td style=""text-align:center; font-weight:bold; padding: 2px !important; border: 1px solid #4e4e4e !important; width: 5%;""> 18h 45min às 22h</td>
                     </tr>
                  </tbody>
               </table>
            </div>

            <div style=""display: flex;"">     

            <div style=""line-height: 25px;"">Legenda: <br>
               <p style=""margin: 0;""><b>CF: </b> Crédito Financeiro por disciplina</p>
               <p style=""margin: 0;""><b>CH: </b> Carga horária da disciplina</p>
               <p style=""margin: 0;""><b>Mat: </b>Matutino</p>
               <p style=""margin: 0;""><b>Vesp: </b>Vespertino</p>
               <p style=""margin: 0;""><b>Not: </b>Noturno</p>
               <p style=""margin: 0;""><b>NI: </b>Não Informado</p>
            </div>

            <div style=""
                width: 100%;        
               text-align: end;
               margin-top: 50px;
            "">
              
            <img width=""90"" height=""90"" src=""https://api.qrserver.com/v1/create-qr-code/?data=https://sinergia.unimestre.com/projetos/unimestre/impressoes/download.php"" alt=""qrcode""> 
                    <p style=""margin-top:10px; margin-left: 175px;""> Hash de autenticação: <br> <?= $this->ds_hash_autenticacao ?> </p>
                    <p style=""margin-left: 175px;""> Url de validação: <br> <?= $this->ds_url_validadora ?> </p>
            </div>

            </div>
            
         </div>
         <div class=""page-break"" style=""page-break-after: always;""></div>
      </div>

   <?php } ?>
</body>

</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;
	
$relatorio->run()->render();
	","[
  {
    ""tipo"": ""uni-select-coligada-filha"",
    ""obrigatorio"": false,
    ""label"": ""Unidade"",
    ""ds_campo"": ""cd_coligada""
  },
  {
    ""tipo"": ""campo-anosemestre"",
    ""obrigatorio"": true,
    ""label"": ""Anosemestre"",
    ""ds_campo"": ""nr_anosemestre""
  },
  {
    ""tipo"": ""uni-select-departamento"",
    ""obrigatorio"": false,
    ""label"": ""Departamento"",
    ""ds_campo"": ""cd_departamento""
  },
  {
    ""tipo"": ""uni-select-curso"",
    ""obrigatorio"": true,
    ""label"": ""Curso"",
    ""ds_campo"": ""id_curso""
  },
  
{
	""tipo"": ""uni-busca-turma"",
	""obrigatorio"": true,
	""label"": ""Turma"",
	""ds_campo"": ""cd_turma""
},
  {
    ""tipo"": ""uni-busca-pessoa"",
    ""obrigatorio"": false,
    ""label"": ""Código aluno"",
    ""ds_campo"": ""cd_pessoa""
  }
]",175,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,10,1,""Relatório de matrícula com disciplinas e horários"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,1,""Um diploma é um título, um certificado ou uma credencial que emite uma entidade ou uma corporação para acreditar algo (um grau académico, um prémio, etc.)."", NULL,""rel_resum_mat"",""2024-03-20 10:09:35"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Gerenciais por Vencimento,1.0 Relação de Parcelas do Período - Sintético,"<?php

   $PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
   require_once( $PARMS['PASTA'] . 'nucleo.php' );
   require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
   header ('Content-type: text/html; charset=UTF-8');

   use \koolreport\processes\ColumnMeta;
   use \koolreport\processes\Group;
   use \koolreport\processes\OnlyColumn;

   // classe padrao do relatorio
   class Relatorio extends \koolreport\KoolReport {
      use \koolreport\bootstrap4\Theme;
      use \koolreport\inputs\Bindable;
      use \koolreport\inputs\POSTBinding;
      // use \koolreport\export\Exportable;
      use \koolreport\cloudexport\Exportable;
  
      const C_SN_CLOUD_EXPORT = true;

      public $path_include;
      public $arrDadosFiltro;
      public $arrDadosGerais;

      public function __construct() {

         try {

            $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
            parent::__construct();

         } catch (Exception $e) {

            echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
            die;

         }

      }

      // inicializacao dos filtros
      function defaultParamValues() {
         return array(
            ""filtros""=>'{}',
            ""gerais""=>'{}'
         );
      }

      // resgate do $_POST para vinculo com os parametros
      function bindParamsToInputs() {
         return array(
            ""filtros"",
            ""gerais""
         );
      }

      // funcao responsavel por realizar a conexao com o banco de dados
      // e resgate dos dados tratamento dos dados do $_POST
      public function settings() {

         Nucleo::import( 'relatorios.RelatoriosConexao' );
         $objRelatoriosConexao = new RelatoriosConexao;

         return $objRelatoriosConexao->settings();

      }

      // funcao responsavel por manter as consultas a serem executadas pelo relatorio
      // e geracao dos array de dados para uso posterior na visualizacao
      public function setup() {

         require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

         if (isset($_POST['filtros'])) {
            $this->arrDadosFiltro = json_decode($_POST['filtros']);
         } else {
            $this->arrDadosFiltro = json_decode($_POST);
         }

         if (isset($_POST['gerais'])) {
            $this->arrDadosGerais = json_decode($_POST['gerais']);
         }

         $arrParametros = [];

         foreach ($this->arrDadosFiltro as $filtro => $valor) {
            if (!empty($valor->ds_valor)) {
                $arrParametros["":"" . $filtro] = $valor->ds_valor;
            }
         }

         $this->src('unimestre')->query(
            ""
         SELECT c.*, 
         ROUND((c.liq_c_desc - c.val_pg_liq + c.acresc),2)
         AS vl_n_pg_liq
      FROM
      (
      SELECT
         x.*,         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc),
            2
         ) AS vl_liq,         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc - x.dsc_ant_pag),
            2
         ) AS liq_c_desc
      FROM
         (
            SELECT
               me.turma as cod_total,
               me.curso AS cd_curso,
               CONCAT(cm.DS_CURSO,'(',cm.CD_CURSO,')') AS nm_curso,
               COUNT(DISTINCT me.codigoaluno) AS alu,
         
         ROUND(
               SUM(
                  IF(
                     me.tipoparcela <> 1
                     AND me.datavencimento >= :dt_inicio
                     AND me.datavencimento <= :dt_fim,
                     (me.valorbruto + me.valorextra),
                     0
                  )
               ),
               2
         ) AS vl_bruto,
      

         ROUND(
            SUM(
               IF(
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao IN(0, 1, 2, 6, 10),
                  (me.descontoextra),
                  0
               )
            ),
            2
         ) AS desc_extra,

         ROUND(SUM(
               IF(
                  me.situacao = 3
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim 
                  AND me.datapagamento <= :dt_base,
                  (me.valorbruto + me.valorextra),
                  0
               )
               ),2
         ) AS negoc,
      

         ROUND(SUM(
               IF(
                  me.situacao IN(4, 5, 7, 8)
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.datapagamento <= :dt_base,
                     (me.valorbruto + me.valorextra),
                     0
               )
               ), 2
         ) AS canc,

         
         ROUND(
            SUM(
               IF (
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao NOT IN (3, 4, 5, 7, 8),
                  (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                  0
               )
            ),
            2
         ) AS dsc_ant_pag,
         
      
         ROUND(SUM(
               IF( me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     GET_ACRESCIMOS(me.cd_mensalidade, NULL),
                     0
               )
            ),2
         ) AS acresc,
      
         
         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                     0
                  )
               ), 2
            ) AS desconto,

         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base, 
                     (me.valorpago), 0
                  )
               ),2
         ) AS val_pg_liq
         
         
      FROM
         mensalidades me
         INNER JOIN coligadas AS c ON (c.cd_coligada = me.cd_coligada)
         LEFT JOIN turmas tu ON (
            me.anosemestre = tu.anosemestre
            AND me.turma = tu.codigo
         )
         INNER JOIN pessoas pe ON (me.codigoaluno = pe.cd_pessoa)
         INNER JOIN fin_config_tipos_titulo tp ON (
            me.cd_tipo_titulo = tp.cd_tipo_titulo
            AND tp.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN cursos_coligadas cc ON (
            tu.curso = cc.CD_CURSO
            AND tu.cd_coligada = cc.CD_COLIGADA
         )
         LEFT JOIN cursos_mestre cm ON (cc.CD_CURSO = cm.CD_CURSO)
         LEFT JOIN departamentos dp ON (cc.CD_DEPTO = dp.codigo)
         LEFT JOIN fin_config_plano_contas pc ON (
            pc.cd_conta = me.cd_plano_conta
            AND pc.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN fin_config_centro_custos custo ON (
            custo.cd_centro = me.cd_centro_custo
            AND custo.cd_coligada_matriz = c.cd_coligada_matriz
         )
      WHERE
         1 = 1 
         AND (
            me.datavencimento >= :dt_inicio
            AND me.datavencimento <= :dt_fim
         )
         AND me.dataemissao <= :dt_base
         AND (
            me.situacao NOT IN (4, 5, 7, 8)
            OR DATE_FORMAT(me.datavencimento, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m')
            OR me.tipoparcela = 1
            OR me.sn_nfe_gerada = 1
         )        
            
            "" .
                ((!empty($arrParametros["":cd_coligada""]))
                   ? ""AND me.cd_coligada IN (:cd_coligada)""
                   : NULL
                )
             . ""
            
             "" .
                ((!empty($arrParametros["":cd_departamento""]))
                   ? ""AND me.depto IN (:cd_departamento)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":id_curso""]))
                   ? ""AND cm.id_curso IN (:id_curso)""
                   : NULL
                )
             . ""
             
             "" .
                ((!empty($arrParametros["":cd_turma""]))
                   ? ""AND me.turma IN (:cd_turma)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":cd_tipo_titulo""]))
                   ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":codigoaluno""]))
                   ? ""AND me.codigoaluno IN (:codigoaluno)""
                   : NULL
                )
             . ""
            
            GROUP BY
            me.turma
            ) AS x) as c 
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda
               )
            )
         )
         ->saveTo($consulta);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
         $consulta->pipe($this->dataStore(""dados_consulta""));

         $consulta->pipe(new Group(array(
            ""by""=>array(
               ""cd_curso""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_turma"",
            ""nm_curso"",
            ""cod_total"",
            ""vl_liq"",
            ""liq_c_desc"",
            ""vl_n_pg_liq"",
            ""cd_aluno"",
            ""cd_turma"",
            ""cod_total"",
            ""cd_curso"",
            ""valorpg"",
            ""vl_bruto"",
            ""desc_extra"",
            ""negoc"",
            ""canc"",
            ""dsc_ant_pag"",
            ""acresc"",
            ""desconto"",
            ""val_pg_liq""
      
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));


         #Totalizador Curso ___________________________//________________________________________
         
         $this->src('unimestre')->query(
            ""
            SELECT c.*, 
         ROUND((c.liq_c_desc - c.val_pg_liq + c.acresc),2)
         AS vl_n_pg_liq
      FROM
      (
      SELECT
         x.*,  
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc),
            2
         ) AS vl_liq,
         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc - x.dsc_ant_pag),
            2
         ) AS liq_c_desc
      FROM
         (
            SELECT
               me.turma as cod_total,
               me.curso AS cd_curso,
               COUNT(DISTINCT me.codigoaluno) AS t_alu,
               COUNT(me.cd_mensalidade) AS parcelas,
               CONCAT(cm.DS_CURSO,'(',cm.CD_CURSO,')') AS nm_curso,
               COUNT(DISTINCT me.codigoaluno) AS alu,
         ROUND(
               SUM(
                  IF(
                     me.tipoparcela <> 1
                     AND me.datavencimento >= :dt_inicio
                     AND me.datavencimento <= :dt_fim,
                     (me.valorbruto + me.valorextra),
                     0
                  )
               ),
               2
         ) AS vl_bruto,
      

         ROUND(
            SUM(
               IF(
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao IN(0, 1, 2, 6, 10),
                  (me.descontoextra),
                  0
               )
            ),
            2
         ) AS desc_extra,

         ROUND(SUM(
               IF(
                  me.situacao = 3
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim 
                  AND me.datapagamento <= :dt_base,
                  (me.valorbruto + me.valorextra),
                  0
               )
               ),2
         ) AS negoc,
      

         ROUND(SUM(
               IF(
                  me.situacao IN(4, 5, 7, 8)
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.datapagamento <= :dt_base,
                     (me.valorbruto + me.valorextra),
                     0
               )
               ), 2
         ) AS canc,

         
         ROUND(
            SUM(
               IF (
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao NOT IN (3, 4, 5, 7, 8),
                  (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                  0
               )
            ),
            2
         ) AS dsc_ant_pag,
         
      
         ROUND(SUM(
               IF( me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     GET_ACRESCIMOS(me.cd_mensalidade, NULL),
                     0
               )
            ),2
         ) AS acresc,
      
         
         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                     0
                  )
               ), 2
            ) AS desconto,

         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base, 
                     (me.valorpago), 0
                  )
               ),2
         ) AS val_pg_liq
         
         
      FROM
         mensalidades me
         INNER JOIN coligadas AS c ON (c.cd_coligada = me.cd_coligada)
         LEFT JOIN turmas tu ON (
            me.anosemestre = tu.anosemestre
            AND me.turma = tu.codigo
         )
         INNER JOIN pessoas pe ON (me.codigoaluno = pe.cd_pessoa)
         INNER JOIN fin_config_tipos_titulo tp ON (
            me.cd_tipo_titulo = tp.cd_tipo_titulo
            AND tp.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN cursos_coligadas cc ON (
            tu.curso = cc.CD_CURSO
            AND tu.cd_coligada = cc.CD_COLIGADA
         )
         LEFT JOIN cursos_mestre cm ON (cc.CD_CURSO = cm.CD_CURSO)
         LEFT JOIN departamentos dp ON (cc.CD_DEPTO = dp.codigo)
         LEFT JOIN fin_config_plano_contas pc ON (
            pc.cd_conta = me.cd_plano_conta
            AND pc.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN fin_config_centro_custos custo ON (
            custo.cd_centro = me.cd_centro_custo
            AND custo.cd_coligada_matriz = c.cd_coligada_matriz
         )
      WHERE
         1 = 1 
         AND (
            me.datavencimento >= :dt_inicio
            AND me.datavencimento <= :dt_fim
         )
         AND me.dataemissao <= :dt_base
         AND (
            me.situacao NOT IN (4, 5, 7, 8)  
                                OR DATE_FORMAT(me.datavencimento, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m') 
                                OR me.tipoparcela = 1
                                OR me.sn_nfe_gerada = 1
         )        
            
            "" .
                ((!empty($arrParametros["":cd_coligada""]))
                   ? ""AND me.cd_coligada IN (:cd_coligada)""
                   : NULL
                )
             . ""
            
             "" .
                ((!empty($arrParametros["":cd_departamento""]))
                   ? ""AND me.depto IN (:cd_departamento)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":id_curso""]))
                   ? ""AND cm.id_curso IN (:id_curso)""
                   : NULL
                )
             . ""
             
             "" .
                ((!empty($arrParametros["":cd_turma""]))
                   ? ""AND me.turma IN (:cd_turma)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":cd_tipo_titulo""]))
                   ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":codigoaluno""]))
                   ? ""AND me.codigoaluno IN (:codigoaluno)""
                   : NULL
                )
             . ""
            
            GROUP BY
            me.curso
            ) AS x) as c 
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda
                        
               )
            )
         )
         ->saveTo($consulta_tot_curso);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
         $consulta_tot_curso->pipe($this->dataStore(""dados_tot_curso""));

         $consulta_tot_curso->pipe(new Group(array(
            ""by""=>array(
               ""cd_curso""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_turma"",
            ""nm_curso"",
            ""cod_total"",
            ""vl_liq"",
            ""liq_c_desc"",
            ""vl_n_pg_liq"",
            ""cd_aluno"",
            ""cd_turma"",
            ""cod_total"",
            ""cd_curso"",
            ""valorpg"",
            ""vl_bruto"",
            ""desc_extra"",
            ""negoc"",
            ""canc"",
            ""dsc_ant_pag"",
            ""acresc"",
            ""desconto"",
            ""val_pg_liq"",
            ""t_alu"",
            ""parcelas""
      
         )))
         ->pipe($this->dataStore(""dados_consulta_tot_cur_agrupado""));


            require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));                         

      }

   }
","<?php

use \koolreport\widgets\koolphp\Table;
use \koolreport\processes\Filter;

// path pasta
$path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

// margens
$ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
$ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
$ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
$ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

$sn_geracao = $_POST[""pdf""];

//cabecalho
foreach ($this->dataStore(""dados_cabecalhos"") as $cabecalho) {
    if (
        ($cabecalho[""cd_coligada""] == $this->dataStore(""dados_consulta"")[0][""cd_coligada_cabecalho""]
            && $cabecalho[""cd_relatorio""] == $this->arrDadosGerais->cd_relatorio)
        ||
        ($cabecalho[""cd_coligada""] == 0
            && $cabecalho[""cd_relatorio""] == 0)
    ) {

        $logo = $cabecalho[""ds_link_cdn""];
        break;
    }
}

?>

<html>

<head>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
</head>

<body class=""relatorio"">
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

    <?php
    $tot_alunos =       number_format( $this->dataStore('dados_tot_curso')->sum(""t_alu"") ,0,"","",""."");
    $tot_parcelas =     number_format( $this->dataStore('dados_tot_curso')->sum(""parcelas""),0,"","",""."");
    $tot_val_bru =      number_format( $this->dataStore('dados_tot_curso')->sum(""vl_bruto""), 2,"","",""."");
    $tot_desc_extra =   number_format( $this->dataStore('dados_tot_curso')->sum(""desc_extra""), 2,"","",""."");
    $tot_neg =          number_format( $this->dataStore('dados_tot_curso')->sum(""negoc""), 2,"","",""."");
    $tot_canc =         number_format( $this->dataStore('dados_tot_curso')->sum(""canc""), 2,"","",""."");
    $tot_val_liq =      number_format( $this->dataStore('dados_tot_curso')->sum(""vl_liq""), 2,"","",""."");
    $tot_desc_cond =    number_format( $this->dataStore('dados_tot_curso')->sum(""dsc_ant_pag""), 2,"","",""."");
    $tot_liq_c_desc =   number_format( $this->dataStore('dados_tot_curso')->sum(""liq_c_desc""), 2,"","",""."");
    $tot_acres =        number_format( $this->dataStore('dados_tot_curso')->sum(""acresc""), 2,"","",""."");
    $tot_desconto =     number_format( $this->dataStore('dados_tot_curso')->sum(""desconto""), 2,"","",""."");
    $tot_pag_liq =      number_format( $this->dataStore('dados_tot_curso')->sum(""val_pg_liq""), 2,"","",""."");
    $tot_pg_n_liq =     number_format( $this->dataStore('dados_tot_curso')->sum(""vl_n_pg_liq""), 2,"","",""."");



    $count = $this->dataStore('dados_consulta_agrupado')->count();
    $count = $count - 1;

    foreach ($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao) {

        $dados_pagina = $this->dataStore(""dados_consulta"")
            ->filter(
                ""cd_curso"",
                ""="",
                $visualizacao[""cd_curso""]
            );

        $dados_total = $this->dataStore(""dados_tot_curso"")
            ->filter(
                ""cd_curso"",
                ""="",
                $visualizacao[""cd_curso""]
            );

    ?>

        <style>
            @page {
                size: landscape;
                padding-bottom: 2px !important;
            }

            .custom_size {
                font-size: 11px;
                font-weight: bold;
            }
        </style>

        <style>
            .size {
                font-size: 11px !important;

            }
        </style>

        <style>
            .borda {
                border: 1px solid !important;
                text-align: center !important;

            }

            table,
            tr,
            td {
                border: 1px solid #dee2e6 !important;
                padding: 1.5px !important;
                margin: 0px !important;
            }

            div,
            h1 {
                font-size: 16px !important;
            }
        </style>

        <div class=""container"">
            <div class=""conteudo"" style=""
                  padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
                  padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
                  padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
                  padding-right: <?= $ds_margem_direita . 'cm' ?>;
               "">

                <div>

                    <div style=""display: flex; padding-top:25px;""><img src=""https://www.sinergia.edu.br/wp-content/uploads/2016/05/sinergia-logo.png"">
                    </div>
                    <div style=""text-align: right;>
                    <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'filtro.php')); ?>
                    </div>

                    <div>

                        <h1 style=""margin-bottom: 25px; text-align:center; font-size:18px !important; font-weight:bold; color:#A9A9A9"">
                            <?= $this->arrDadosGerais->nm_relatorio ?>
                        </h1>

                    </div>

                    <div style=""text-align: left; font-weight:bold; margin-bottom:15px;""> <?= $dados_pagina[0]['nm_curso'] ?> </div>

                    <?php

                    // componente responsavel pela criacao da tabela de dados
                    Table::create(array(
                        ""dataSource"" => $dados_pagina,
                        ""grouping"" => array(
                            ""cod_curso"" => array(
                                ""calculate"" => array(
                                    ""{somaValBrut}"" => array(""sum"", ""vl_bruto""),
                                    ""{somaDescExt}"" => array(""sum"", ""desc_extra""),
                                    ""{somaNegoc}"" => array(""sum"", ""negoc""),
                                    ""{somaCanc}"" => array(""sum"", ""canc""),
                                    ""{somaVlLiq}"" => array(""sum"", ""vl_liq"", ""decimals"", ""2""),
                                    ""{somaDscAntPag}"" => array(""sum"", ""dsc_ant_pag""),
                                    ""{somaLiqCDesc}"" => array(""sum"", ""liq_c_desc""),
                                    ""{somaAcres}"" => array(""sum"", ""acresc""),
                                    ""{somaDesconto}"" => array(""sum"", ""desconto""),
                                    ""{somaValPgLiq}"" => array(""sum"", ""val_pg_liq""),
                                    ""{somaVlNPgLiq}"" => array(""sum"", ""vl_n_pg_liq""),

                                ),

                                ""top"" => ""<td align='center' class='fonte p-2 b'>Turma</td>
                                    <td align='center' class='fonte p-2 b'>Vl.Bruto</td>
                                    <td align='center' class='fonte p-2 b'>Desc.Extra</td>
                                    <td align='center' class='fonte p-2 b'>Negociado</td>
                                    <td align='center' class='fonte p-2 b'>Cancelado</td>
                                    <td align='center' class='fonte p-2 b'>Val.Liq</td>
                                    <td align='center' class='fonte p-2 b'>Desc.Cond</td>
                                    <td align='center' class='fonte p-2 b'>Liq.C/Desc</td>
                                    <td align='center' class='fonte p-2 b'>Acréscimo</td>
                                    <td align='center' class='fonte p-2 b'>Desconto</td>
                                    <td align='center' class='fonte p-2 b'>Val.Pg.Líq</td>
                                    <td align='center' class='fonte p-2 b'>Não Pg.Liq</td>
                                    "",
                                ""bottom"" => ""<td align='center' class='fonte p-2 b font-weight-bold'>Total Curso:</td>
                                    <td align='center' class='fonte p-2 b'>{somaValBrut}</td>
                                    <td align='center' class='fonte p-2 b'>{somaDescExt}</td>
                                    <td align='center' class='fonte p-2 b'>{somaNegoc}</td>
                                    <td align='center' class='fonte p-2 b'>{somaCanc}</td>
                                    <td align='center' class='fonte p-2 b'>{somaVlLiq}</td>
                                    <td align='center' class='fonte p-2 b'>{somaDscAntPag}</td>
                                    <td align='center' class='fonte p-2 b'>{somaLiqCDesc}</td>
                                    <td align='center' class='fonte p-2 b'>{somaAcres}</td>
                                    <td align='center' class='fonte p-2 b'>{somaDesconto}</td>
                                    <td align='center' class='fonte p-2 b'>{somaValPgLiq}</td>
                                    <td align='center' class='fonte p-2 b'>{somaVlNPgLiq}</td>
                    
                                ""
                            ),
                        ),

                        ""showHeader"" => false,
                        ""columns"" => array(
                            ""cod_total"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""vl_bruto"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""desc_extra"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""negoc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""canc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""vl_liq"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""dsc_ant_pag"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""liq_c_desc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""acresc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""desconto"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""val_pg_liq"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""vl_n_pg_liq"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            )

                        ),
                        ""cssClass"" => array(
                            ""table"" => ""table table-striped table-hover"",
                            ""tr"" => """",
                            ""th"" => """",
                            ""td"" => ""p-2"",
                            ""tf"" => ""darker"",
                        ),
                        ""sorting"" => array(
                            ""cod_total"" => ""asc""

                        )
                    ));

                    ?>

                    <?php

                    if ($key == $count) {

                    ?>

                        <hr>

                        <div style=""text-align: center; font-size:25px; font-weight:bold; padding-top:20px; padding-bottom:20px; color:#A9A9A9""> TOTAL GERAL </div>

                        <table class=""table"">
                            <tbody>
                                <tr>
                                    <td style=""text-align:center; font-weight:bold"">Total de Alunos</td>
                                    <td style=""text-align:center; font-weight:bold"">Total de Parcelas</td>
                                    <td style=""text-align:center; font-weight:bold"">Valor Bruto</td>
                                    <td style=""text-align:center; font-weight:bold"">Desc.Extra</td>
                                    <td style=""text-align:center; font-weight:bold"">Negociado</td>
                                    <td style=""text-align:center; font-weight:bold"">Cancelado</td>
                                    <td style=""text-align:center; font-weight:bold"">Val.Líquido</td>
                                    <td style=""text-align:center; font-weight:bold"">Desc.Cond</td>
                                    <td style=""text-align:center; font-weight:bold"">Liq.C/Desc</td>
                                    <td style=""text-align:center; font-weight:bold"">Acréscimo</td>
                                    <td style=""text-align:center; font-weight:bold"">Desconto</td>
                                    <td style=""text-align:center; font-weight:bold"">Vl.Pq.Liq</td>
                                    <td style=""text-align:center; font-weight:bold"">Não.Pg.Liq</td>
                                </tr>
                                <tr>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_alunos ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_parcelas ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_val_bru ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_desc_extra ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_neg ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_canc ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_val_liq ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_desc_cond ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_liq_c_desc  ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_acres ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_desconto ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_pag_liq ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_pg_n_liq ?></td>

                                </tr>
                            </tbody>
                        </table>

                    <?php

                        }
                    ?>
                </div>
            </div>
            <div class=""page-break"" style=""page-break-after: always;""></div>
        </div>
        

    <?php

    } // fim do foreach

    ?>

</body>

</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[
{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data inicial"",
		""ds_campo"": ""dt_inicio""
	},
 
	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data final"",
		""ds_campo"": ""dt_fim""
	},

	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data Base"",
		""ds_campo"": ""dt_base""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Inicial"",
		""ds_campo"": ""parc_ini""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Final"",
		""ds_campo"": ""parc_fim""
	},
 
	{
		""tipo"": ""uni-select-coligada-filha"",
		""obrigatorio"": false,
		""label"": ""Unidade"",
		""ds_campo"": ""cd_coligada""
	},
	{
		""tipo"": ""uni-select-departamento"",
		""obrigatorio"": false,
		""label"": ""Departamento"",
		""ds_campo"": ""cd_departamento""
	},
	{
		""tipo"": ""uni-select-curso"",
		""obrigatorio"": false,
		""label"": ""Curso"",
		""ds_campo"": ""id_curso""
	},
	{
		""tipo"": ""uni-busca-turma"",
		""obrigatorio"": false,
		""label"": ""Turma"",
		""ds_campo"": ""cd_turma""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Código aluno"",
		""ds_campo"": ""codigoaluno""
	},
	{
		""tipo"": ""campo-dinamico"",
		""obrigatorio"": false,
		""label"": ""Tipo de Título"",
		""ds_chave"": ""busca-tipo-mensalidade"",
		""ds_campo"": ""cd_tipo_titulo""
	}
]
		",110,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,11,1,""1.0 Relação de Parcelas do Período - Sintético"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,2, NULL, NULL,""rel_parc_sintetico"",""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Gerenciais por Vencimento,1.1 Relação de parcelas do Período - Analítico,"<?php

   $PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
   require_once( $PARMS['PASTA'] . 'nucleo.php' );
   require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
   header ('Content-type: text/html; charset=UTF-8');

   use \koolreport\processes\ColumnMeta;
   use \koolreport\processes\Group;
   use \koolreport\processes\OnlyColumn;

   // classe padrao do relatorio
   class Relatorio extends \koolreport\KoolReport {
      use \koolreport\bootstrap4\Theme;
      use \koolreport\inputs\Bindable;
      use \koolreport\inputs\POSTBinding;
      // use \koolreport\export\Exportable;
      use \koolreport\cloudexport\Exportable;
  
      const C_SN_CLOUD_EXPORT = true;

      public $path_include;
      public $arrDadosFiltro;
      public $arrDadosGerais;

      public function __construct() {

         try {

            $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
            parent::__construct();

         } catch (Exception $e) {

            echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
            die;

         }

      }

      // inicializacao dos filtros
      function defaultParamValues() {
         return array(
            ""filtros""=>'{}',
            ""gerais""=>'{}'
         );
      }

      // resgate do $_POST para vinculo com os parametros
      function bindParamsToInputs() {
         return array(
            ""filtros"",
            ""gerais""
         );
      }

      // funcao responsavel por realizar a conexao com o banco de dados
      // e resgate dos dados tratamento dos dados do $_POST
      public function settings() {

         Nucleo::import( 'relatorios.RelatoriosConexao' );
         $objRelatoriosConexao = new RelatoriosConexao;

         return $objRelatoriosConexao->settings();

      }

      // funcao responsavel por manter as consultas a serem executadas pelo relatorio
      // e geracao dos array de dados para uso posterior na visualizacao
      public function setup() {

         require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

         if (isset($_POST['filtros'])) {
            $this->arrDadosFiltro = json_decode($_POST['filtros']);
         } else {
            $this->arrDadosFiltro = json_decode($_POST);
         }

         if (isset($_POST['gerais'])) {
            $this->arrDadosGerais = json_decode($_POST['gerais']);
         }

         $arrParametros = [];

         foreach ($this->arrDadosFiltro as $filtro => $valor) {
            if (!empty($valor->ds_valor)) {
                $arrParametros["":"" . $filtro] = $valor->ds_valor;
            }
         }

         $this->src('unimestre')->query(
            ""
         SELECT c.*, 
         ROUND((c.liq_c_desc - c.val_pg_liq + c.acresc),2)
         AS vl_n_pg_liq
      FROM
      (
      SELECT
         x.*,
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc),
            2
         ) AS vl_liq,
         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc - x.dsc_ant_pag),
            2
         ) AS liq_c_desc
      FROM
         (
            SELECT
               me.turma as cod_total,
               me.curso AS cd_curso,
               CONCAT(cm.DS_CURSO,'(',cm.CD_CURSO,')') AS nm_curso,
               COUNT(DISTINCT me.codigoaluno) AS alu,
               pe.nm_pessoa AS nm_aluno,
               me.codigoaluno As cd_aluno,
               me.parcela AS parc,
               me.datavencimento As data_venc,
               me.anosemestre AS anosem_parc,
               me.turma AS cd_turma,
               tp.ds_tipo_titulo AS tp_titulo,
               COUNT(DISTINCT me.codigoaluno) AS t_alu,
               COUNT(me.cd_mensalidade) AS parcelas,              
         
         ROUND(
               SUM(
                  IF(
                     me.tipoparcela <> 1
                     AND me.datavencimento >= :dt_inicio
                     AND me.datavencimento <= :dt_fim,
                     (me.valorbruto + me.valorextra),
                     0
                  )
               ),
               2
         ) AS vl_bruto,
      

         ROUND(
            SUM(
               IF(
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao IN(0, 1, 2, 6, 10),
                  (me.descontoextra),
                  0
               )
            ),
            2
         ) AS desc_extra,

         ROUND(SUM(
               IF(
                  me.situacao = 3
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim 
                  AND me.datapagamento <= :dt_base,
                  (me.valorbruto + me.valorextra),
                  0
               )
               ),2
         ) AS negoc,
      

         ROUND(SUM(
               IF(
                  me.situacao IN(4, 5, 7, 8)
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.datapagamento <= :dt_base,
                     (me.valorbruto + me.valorextra),
                     0
               )
               ), 2
         ) AS canc,

         
         ROUND(
            SUM(
               IF (
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao NOT IN (3, 4, 5, 7, 8),
                  (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                  0
               )
            ),
            2
         ) AS dsc_ant_pag,
         
      
         ROUND(SUM(
               IF( me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     GET_ACRESCIMOS(me.cd_mensalidade, NULL),
                     0
               )
            ),2
         ) AS acresc,
      
         
         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                     0
                  )
               ), 2
            ) AS desconto,

         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base, 
                     (me.valorpago), 0
                  )
               ),2
         ) AS val_pg_liq
         
         
      FROM
         mensalidades me
         INNER JOIN coligadas AS c ON (c.cd_coligada = me.cd_coligada)
         LEFT JOIN turmas tu ON (
            me.anosemestre = tu.anosemestre
            AND me.turma = tu.codigo
         )
         INNER JOIN pessoas pe ON (me.codigoaluno = pe.cd_pessoa)
         INNER JOIN fin_config_tipos_titulo tp ON (
            me.cd_tipo_titulo = tp.cd_tipo_titulo
            AND tp.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN cursos_coligadas cc ON (
            tu.curso = cc.CD_CURSO
            AND tu.cd_coligada = cc.CD_COLIGADA
         )
         LEFT JOIN cursos_mestre cm ON (cc.CD_CURSO = cm.CD_CURSO)
         LEFT JOIN departamentos dp ON (cc.CD_DEPTO = dp.codigo)
         LEFT JOIN fin_config_plano_contas pc ON (
            pc.cd_conta = me.cd_plano_conta
            AND pc.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN fin_config_centro_custos custo ON (
            custo.cd_centro = me.cd_centro_custo
            AND custo.cd_coligada_matriz = c.cd_coligada_matriz
         )
      WHERE
         1 = 1 
         AND (
            me.datavencimento >= :dt_inicio
            AND me.datavencimento <= :dt_fim
         )
         AND me.dataemissao <= :dt_base
         AND (
            me.situacao NOT IN (4, 5, 7, 8)
            OR DATE_FORMAT(me.datavencimento, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m')
            OR me.tipoparcela = 1
            OR me.sn_nfe_gerada = 1
         )        
            
            "" .
                ((!empty($arrParametros["":cd_coligada""]))
                   ? ""AND me.cd_coligada IN (:cd_coligada)""
                   : NULL
                )
             . ""
            
             "" .
                ((!empty($arrParametros["":cd_departamento""]))
                   ? ""AND me.depto IN (:cd_departamento)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":id_curso""]))
                   ? ""AND cm.id_curso IN (:id_curso)""
                   : NULL
                )
             . ""
             
             "" .
                ((!empty($arrParametros["":cd_turma""]))
                   ? ""AND me.turma IN (:cd_turma)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":cd_tipo_titulo""]))
                   ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":codigoaluno""]))
                   ? ""AND me.codigoaluno IN (:codigoaluno)""
                   : NULL
                )
             . ""
            
            GROUP BY
            me.cd_mensalidade
            ) AS x) as c 
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""parcelas"" => $arrFormatoInteiro,
                  ""parc"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda
               )
            )
         )
         ->saveTo($consulta);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
         $consulta->pipe($this->dataStore(""dados_consulta""));

         $consulta->pipe(new Group(array(
            ""by""=>array(
               ""cd_curso""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_turma"",
            ""nm_curso"",
            ""cd_aluno"",
            ""nm_aluno"",
            ""parcelas"",
            ""vl_liq"",
            ""liq_c_desc"",
            ""vl_n_pg_liq"",
            ""cd_aluno"",
            ""cod_total"",
            ""cd_curso"",
            ""valorpg"",
            ""vl_bruto"",
            ""desc_extra"",
            ""negoc"",
            ""canc"",
            ""dsc_ant_pag"",
            ""acresc"",
            ""desconto"",
            ""val_pg_liq"",
            ""parc""
      
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));


         #Totalizador Curso ___________________________//________________________________________
         
         $this->src('unimestre')->query(
            ""
            SELECT c.*, 
         ROUND((c.liq_c_desc - c.val_pg_liq + c.acresc),2)
         AS vl_n_pg_liq
      FROM
      (
      SELECT
         x.*,
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc),
            2
         ) AS vl_liq,
         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc - x.dsc_ant_pag),
            2
         ) AS liq_c_desc
      FROM
         (
            SELECT
               me.turma as cod_total,
               me.curso AS cd_curso,
               CONCAT(cm.DS_CURSO,'(',cm.CD_CURSO,')') AS nm_curso,
               COUNT(DISTINCT me.codigoaluno) AS alu,
               pe.nm_pessoa AS nm_aluno,
               me.codigoaluno As cd_aluno,
               me.parcela AS parc,
               me.datavencimento As data_venc,
               me.anosemestre AS anosem_parc,
               me.turma AS cd_turma,
               tp.ds_tipo_titulo AS tp_titulo,
               COUNT(DISTINCT me.codigoaluno) AS t_alu,
               COUNT(me.cd_mensalidade) AS parcelas,
         
         ROUND(
               SUM(
                  IF(
                     me.tipoparcela <> 1
                     AND me.datavencimento >= :dt_inicio
                     AND me.datavencimento <= :dt_fim,
                     (me.valorbruto + me.valorextra),
                     0
                  )
               ),
               2
         ) AS vl_bruto,
      

         ROUND(
            SUM(
               IF(
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao IN(0, 1, 2, 6, 10),
                  (me.descontoextra),
                  0
               )
            ),
            2
         ) AS desc_extra,

         ROUND(SUM(
               IF(
                  me.situacao = 3
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim 
                  AND me.datapagamento <= :dt_base,
                  (me.valorbruto + me.valorextra),
                  0
               )
               ),2
         ) AS negoc,
      

         ROUND(SUM(
               IF(
                  me.situacao IN(4, 5, 7, 8)
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.datapagamento <= :dt_base,
                     (me.valorbruto + me.valorextra),
                     0
               )
               ), 2
         ) AS canc,

         
         ROUND(
            SUM(
               IF (
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao NOT IN (3, 4, 5, 7, 8),
                  (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                  0
               )
            ),
            2
         ) AS dsc_ant_pag,
         
      
         ROUND(SUM(
               IF( me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     GET_ACRESCIMOS(me.cd_mensalidade, NULL),
                     0
               )
            ),2
         ) AS acresc,
      
         
         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                     0
                  )
               ), 2
            ) AS desconto,

         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base, 
                     (me.valorpago), 0
                  )
               ),2
         ) AS val_pg_liq
         
         
      FROM
         mensalidades me
         INNER JOIN coligadas AS c ON (c.cd_coligada = me.cd_coligada)
         LEFT JOIN turmas tu ON (
            me.anosemestre = tu.anosemestre
            AND me.turma = tu.codigo
         )
         INNER JOIN pessoas pe ON (me.codigoaluno = pe.cd_pessoa)
         INNER JOIN fin_config_tipos_titulo tp ON (
            me.cd_tipo_titulo = tp.cd_tipo_titulo
            AND tp.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN cursos_coligadas cc ON (
            tu.curso = cc.CD_CURSO
            AND tu.cd_coligada = cc.CD_COLIGADA
         )
         LEFT JOIN cursos_mestre cm ON (cc.CD_CURSO = cm.CD_CURSO)
         LEFT JOIN departamentos dp ON (cc.CD_DEPTO = dp.codigo)
         LEFT JOIN fin_config_plano_contas pc ON (
            pc.cd_conta = me.cd_plano_conta
            AND pc.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN fin_config_centro_custos custo ON (
            custo.cd_centro = me.cd_centro_custo
            AND custo.cd_coligada_matriz = c.cd_coligada_matriz
         )
      WHERE
         1 = 1 
         AND (
            me.datavencimento >= :dt_inicio
            AND me.datavencimento <= :dt_fim
         )
         AND me.dataemissao <= :dt_base
         AND (
            me.situacao NOT IN (4, 5, 7, 8)
            OR DATE_FORMAT(me.datavencimento, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m')
            OR me.tipoparcela = 1
            OR me.sn_nfe_gerada = 1
         )        
            
            "" .
                ((!empty($arrParametros["":cd_coligada""]))
                   ? ""AND me.cd_coligada IN (:cd_coligada)""
                   : NULL
                )
             . ""
            
             "" .
                ((!empty($arrParametros["":cd_departamento""]))
                   ? ""AND me.depto IN (:cd_departamento)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":id_curso""]))
                   ? ""AND cm.id_curso IN (:id_curso)""
                   : NULL
                )
             . ""
             
             "" .
                ((!empty($arrParametros["":cd_turma""]))
                   ? ""AND me.turma IN (:cd_turma)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":cd_tipo_titulo""]))
                   ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":codigoaluno""]))
                   ? ""AND me.codigoaluno IN (:codigoaluno)""
                   : NULL
                )
             . ""
            
            GROUP BY
            me.curso
            ) AS x) as c 
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""parcelas"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda,
                  ""parc""  => $arrFormatoInteiro
                        
               )
            )
         )
         ->saveTo($consulta_tot_curso);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
         $consulta_tot_curso->pipe($this->dataStore(""dados_tot_curso""));

         $consulta_tot_curso->pipe(new Group(array(
            ""by""=>array(
               ""cd_curso""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_turma"",
            ""nm_curso"",
            ""nm_aluno"",
            ""cod_total"",
            ""vl_liq"",
            ""liq_c_desc"",
            ""vl_n_pg_liq"",
            ""cd_aluno"",
            ""cd_curso"",
            ""valorpg"",
            ""vl_bruto"",
            ""desc_extra"",
            ""negoc"",
            ""canc"",
            ""dsc_ant_pag"",
            ""acresc"",
            ""desconto"",
            ""val_pg_liq"",
            ""t_alu"",
            ""parcelas"",
            ""parc""
      
         )))
         ->pipe($this->dataStore(""dados_consulta_tot_cur_agrupado""));


            require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));                         

      }

   }
","<?php

use \koolreport\widgets\koolphp\Table;
use \koolreport\processes\Filter;

// path pasta
$path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

// margens
$ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
$ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
$ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
$ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

$sn_geracao = $_POST[""pdf""];

//cabecalho
foreach ($this->dataStore(""dados_cabecalhos"") as $cabecalho) {
    if (
        ($cabecalho[""cd_coligada""] == $this->dataStore(""dados_consulta"")[0][""cd_coligada_cabecalho""]
            && $cabecalho[""cd_relatorio""] == $this->arrDadosGerais->cd_relatorio)
        ||
        ($cabecalho[""cd_coligada""] == 0
            && $cabecalho[""cd_relatorio""] == 0)
    ) {

        $logo = $cabecalho[""ds_link_cdn""];
        break;
    }
}

?>

<html>

<head>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
</head>

<body class=""relatorio"">
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>    

    <?php
    $tot_alunos =       number_format( $this->dataStore('dados_tot_curso')->sum(""t_alu"") ,0,"","",""."");
    $tot_parcelas =     number_format( $this->dataStore('dados_tot_curso')->sum(""parcelas""),0,"","",""."");
    $tot_val_bru =      number_format( $this->dataStore('dados_tot_curso')->sum(""vl_bruto""), 2,"","",""."");
    $tot_desc_extra =   number_format( $this->dataStore('dados_tot_curso')->sum(""desc_extra""), 2,"","",""."");
    $tot_neg =          number_format( $this->dataStore('dados_tot_curso')->sum(""negoc""), 2,"","",""."");
    $tot_canc =         number_format( $this->dataStore('dados_tot_curso')->sum(""canc""), 2,"","",""."");
    $tot_val_liq =      number_format( $this->dataStore('dados_tot_curso')->sum(""vl_liq""), 2,"","",""."");
    $tot_desc_cond =    number_format( $this->dataStore('dados_tot_curso')->sum(""dsc_ant_pag""), 2,"","",""."");
    $tot_liq_c_desc =   number_format( $this->dataStore('dados_tot_curso')->sum(""liq_c_desc""), 2,"","",""."");
    $tot_acres =        number_format( $this->dataStore('dados_tot_curso')->sum(""acresc""), 2,"","",""."");
    $tot_desconto =     number_format( $this->dataStore('dados_tot_curso')->sum(""desconto""), 2,"","",""."");
    $tot_pag_liq =      number_format( $this->dataStore('dados_tot_curso')->sum(""val_pg_liq""), 2,"","",""."");
    $tot_pg_n_liq =     number_format( $this->dataStore('dados_tot_curso')->sum(""vl_n_pg_liq""), 2,"","",""."");



    $count = $this->dataStore('dados_consulta_agrupado')->count();
    $count = $count - 1;

    foreach ($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao) {

        $dados_pagina = $this->dataStore(""dados_consulta"")
            ->filter(
                ""cd_curso"",
                ""="",
                $visualizacao[""cd_curso""]
            );

        $dados_total = $this->dataStore(""dados_tot_curso"")
            ->filter(
                ""cd_curso"",
                ""="",
                $visualizacao[""cd_curso""]
            );

    ?>

        <style>
            @page {
                size: landscape;
                padding-bottom: 2px !important;
            }

            .custom_size {
                font-size: 11px;
                font-weight: bold;
            }
        </style>

        <style>
            .size {
                font-size: 11px !important;

            }
        </style>

        <style>
            .borda {
                border: 1px solid !important;
                text-align: center !important;

            }

            table,
            tr,
            td {
                border: 1px solid #dee2e6 !important;
                padding: 1.5px !important;
                margin: 0px !important;
            }

            div,
            h1 {
                font-size: 16px !important;
            }
        </style>

        <div class=""container"">
            <div class=""conteudo"" style=""
                  padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
                  padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
                  padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
                  padding-right: <?= $ds_margem_direita . 'cm' ?>;
               "">

                <div>

                    <div style=""display: flex; padding-top:25px;""><img src=""https://www.sinergia.edu.br/wp-content/uploads/2016/05/sinergia-logo.png"">
                    </div>
                    
                    <div style=""text-align: right;>
                    <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'filtro.php')); ?>
                    </div>

                    <div>

                        <h1 style=""margin-bottom: 25px; text-align:center; font-size:18px !important; font-weight:bold; color:#A9A9A9"">
                            <?= $this->arrDadosGerais->nm_relatorio ?>
                        </h1>

                    </div>

                    <div style=""text-align: left; font-weight:bold; margin-bottom:15px;""> <?= $dados_pagina[0]['nm_curso'] ?> </div>

                    <?php

                    // componente responsavel pela criacao da tabela de dados
                    Table::create(array(
                        ""dataSource"" => $dados_pagina,
                        ""grouping"" => array(
                            ""cod_curso"" => array(
                                ""calculate"" => array(
                                ""{somaParc}"" => array(""sum"", ""parcelas""),       
                                    ""{somaValBrut}"" => array(""sum"", ""vl_bruto""),
                                    ""{somaDescExt}"" => array(""sum"", ""desc_extra""),
                                    ""{somaNegoc}"" => array(""sum"", ""negoc""),
                                    ""{somaCanc}"" => array(""sum"", ""canc""),
                                    ""{somaVlLiq}"" => array(""sum"", ""vl_liq"", ""decimals"", ""2""),
                                    ""{somaDscAntPag}"" => array(""sum"", ""dsc_ant_pag""),
                                    ""{somaLiqCDesc}"" => array(""sum"", ""liq_c_desc""),
                                    ""{somaAcres}"" => array(""sum"", ""acresc""),
                                    ""{somaDesconto}"" => array(""sum"", ""desconto""),
                                    ""{somaValPgLiq}"" => array(""sum"", ""val_pg_liq""),
                                    ""{somaVlNPgLiq}"" => array(""sum"", ""vl_n_pg_liq""),

                                ),

                                ""top"" => ""<td align='center' class='fonte p-2 b'>Código</td>
                                    <td align='center' class='fonte p-2 b'>Aluno</td>
                                    <td align='center' class='fonte p-2 b'>Parcela</td>
                                    <td align='center' class='fonte p-2 b'>Turma</td>
                                    <td align='center' class='fonte p-2 b'>Vl.Bruto</td>
                                    <td align='center' class='fonte p-2 b'>Desc.Extra</td>
                                    <td align='center' class='fonte p-2 b'>Negociado</td>
                                    <td align='center' class='fonte p-2 b'>Cancelado</td>
                                    <td align='center' class='fonte p-2 b'>Val.Liq</td>
                                    <td align='center' class='fonte p-2 b'>Desc.Cond</td>
                                    <td align='center' class='fonte p-2 b'>Liq.C/Desc</td>
                                    <td align='center' class='fonte p-2 b'>Acréscimo</td>
                                    <td align='center' class='fonte p-2 b'>Desconto</td>
                                    <td align='center' class='fonte p-2 b'>Val.Pg.Líq</td>
                                    <td align='center' class='fonte p-2 b'>Não Pg.Liq</td>
                                    "",
                                ""bottom"" => ""<td align='center' class='fonte p-2 b font-weight-bold'>Total Turma:</td>
                                    <td align='center' class='fonte p-2 b'>{cd_aluno}</td>
                                    <td align='center' class='fonte p-2 b'>{nm_aluno}</td>
                                    <td align='center' class='fonte p-2 b'>{somaParc}</td>
                                    <td align='center' class='fonte p-2 b'>{somaValBrut}</td>
                                    <td align='center' class='fonte p-2 b'>{somaDescExt}</td>
                                    <td align='center' class='fonte p-2 b'>{somaNegoc}</td>
                                    <td align='center' class='fonte p-2 b'>{somaCanc}</td>
                                    <td align='center' class='fonte p-2 b'>{somaVlLiq}</td>
                                    <td align='center' class='fonte p-2 b'>{somaDscAntPag}</td>
                                    <td align='center' class='fonte p-2 b'>{somaLiqCDesc}</td>
                                    <td align='center' class='fonte p-2 b'>{somaAcres}</td>
                                    <td align='center' class='fonte p-2 b'>{somaDesconto}</td>
                                    <td align='center' class='fonte p-2 b'>{somaValPgLiq}</td>
                                    <td align='center' class='fonte p-2 b'>{somaVlNPgLiq}</td>
                    
                                ""
                            ),
                        ),

                        ""showHeader"" => false,
                        ""columns"" => array(
                            ""cd_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""nm_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""cd_turma"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""vl_bruto"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""desc_extra"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""negoc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""canc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""vl_liq"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""dsc_ant_pag"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""liq_c_desc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""acresc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""desconto"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""val_pg_liq"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""vl_n_pg_liq"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            )

                        ),
                        ""cssClass"" => array(
                            ""table"" => ""table table-striped table-hover"",
                            ""tr"" => """",
                            ""th"" => """",
                            ""td"" => ""p-2"",
                            ""tf"" => ""darker"",
                        ),
                        ""sorting"" => array(
                            ""cod_total"" => ""asc""

                        )
                    ));

                    ?>

                    <?php

                    if ($key == $count) {

                    ?>

                        <hr>

                        <div style=""text-align: center; font-size:25px; font-weight:bold; padding-top:20px; padding-bottom:20px; color:#A9A9A9""> TOTAL GERAL </div>

                        <table class=""table"">
                            <tbody>
                                <tr>
                                    <td style=""text-align:center; font-weight:bold"">Código</td>
                                    <td style=""text-align:center; font-weight:bold"">Aluno</td>
                                    <td style=""text-align:center; font-weight:bold"">Parcela</td>
                                    <td style=""text-align:center; font-weight:bold"">Turma</td>
                                    <td style=""text-align:center; font-weight:bold"">Valor Bruto</td>
                                    <td style=""text-align:center; font-weight:bold"">Desc.Extra</td>
                                    <td style=""text-align:center; font-weight:bold"">Negociado</td>
                                    <td style=""text-align:center; font-weight:bold"">Cancelado</td>
                                    <td style=""text-align:center; font-weight:bold"">Val.Líquido</td>
                                    <td style=""text-align:center; font-weight:bold"">Desc.Cond</td>
                                    <td style=""text-align:center; font-weight:bold"">Liq.C/Desc</td>
                                    <td style=""text-align:center; font-weight:bold"">Acréscimo</td>
                                    <td style=""text-align:center; font-weight:bold"">Desconto</td>
                                    <td style=""text-align:center; font-weight:bold"">Vl.Pq.Liq</td>
                                    <td style=""text-align:center; font-weight:bold"">Não.Pg.Liq</td>
                                </tr>
                                <tr>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $cd_aluno ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $nm_aluno ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_alunos ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_parcelas ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_val_bru ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_desc_extra ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_neg ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_canc ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_val_liq ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_desc_cond ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_liq_c_desc  ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_acres ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_desconto ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_pag_liq ?></td>
                                    <td style=""text-align:center; font-weight:bold""><?php echo $tot_pg_n_liq ?></td>

                                </tr>
                            </tbody>
                        </table>

                    <?php

                        }
                    ?>
                </div>
            </div>
            <div class=""page-break"" style=""page-break-after: always;""></div>
        </div>

    <?php

    } // fim do foreach

    ?>

</body>

</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[
{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data inicial"",
		""ds_campo"": ""dt_inicio""
	},
 
	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data final"",
		""ds_campo"": ""dt_fim""
	},

	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data Base"",
		""ds_campo"": ""dt_base""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Inicial"",
		""ds_campo"": ""parc_ini""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Final"",
		""ds_campo"": ""parc_fim""
	},
 
	{
		""tipo"": ""uni-select-coligada-filha"",
		""obrigatorio"": false,
		""label"": ""Unidade"",
		""ds_campo"": ""cd_coligada""
	},
	{
		""tipo"": ""uni-select-departamento"",
		""obrigatorio"": false,
		""label"": ""Departamento"",
		""ds_campo"": ""cd_departamento""
	},
	{
		""tipo"": ""uni-select-curso"",
		""obrigatorio"": false,
		""label"": ""Curso"",
		""ds_campo"": ""id_curso""
	},
	{
		""tipo"": ""uni-busca-turma"",
		""obrigatorio"": false,
		""label"": ""Turma"",
		""ds_campo"": ""cd_turma""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Código aluno"",
		""ds_campo"": ""codigoaluno""
	},
	{
		""tipo"": ""campo-dinamico"",
		""obrigatorio"": false,
		""label"": ""Tipo de Título"",
		""ds_chave"": ""busca-tipo-mensalidade"",
		""ds_campo"": ""cd_tipo_titulo""
	}
]
		",111,"INSERT IGNORE INTO rgo_opcoes_tipos (
								cd_opcao_tipo,
								ds_opcao_tipo,
								ds_tag_opcao,
								dt_base
						)
				VALUES (
								NULL,""Tipo Agrupamento"",""tp_agrup"",""2022-12-10 21:00:11"")","INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,11,1,""1.1 Relação de parcelas do Período - Analítico"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,2, NULL, NULL,""rel_parc_analitico"",""2023-12-13 15:53:40"",0, NULL)","INSERT IGNORE INTO rgo_opcoes (cd_opcao, cd_relatorio,cd_opcao_tipo,sn_padrao,sn_ativo,ds_opcao,me_configuracao,ds_chave,dt_base)
VALUES (NULL,NULL,NULL,1,1,""Agrupamento por Turma"",""agrup_turma"",""rel_parcelas_analitico"",""2022-12-10 21:02:26""
 ); 
INSERT IGNORE INTO rgo_opcoes (cd_opcao, cd_relatorio,cd_opcao_tipo,sn_padrao,sn_ativo,ds_opcao,me_configuracao,ds_chave,dt_base)
VALUES (NULL,NULL,NULL,0,1,""Agrupamento por Curso"",""agrup_curso"",""rel_parcelas_analitico_curso"",""2022-12-11 13:04:01""
 )",,497.0,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Gerenciais por Vencimento,2.0 Detalhamento Valor Bruto,"<?php

   $PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
   require_once( $PARMS['PASTA'] . 'nucleo.php' );
   require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
   header ('Content-type: text/html; charset=UTF-8');

   use \koolreport\processes\ColumnMeta;
   use \koolreport\processes\Group;
   use \koolreport\processes\OnlyColumn;

   // classe padrao do relatorio
   class Relatorio extends \koolreport\KoolReport {
      use \koolreport\bootstrap4\Theme;
      use \koolreport\inputs\Bindable;
      use \koolreport\inputs\POSTBinding;
      // use \koolreport\export\Exportable;
      use \koolreport\cloudexport\Exportable;
  
      const C_SN_CLOUD_EXPORT = true;

      public $path_include;
      public $arrDadosFiltro;
      public $arrDadosGerais;

      public function __construct() {

         try {

            $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
            parent::__construct();

         } catch (Exception $e) {

            echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
            die;

         }

      }

      // inicializacao dos filtros
      function defaultParamValues() {
         return array(
            ""filtros""=>'{}',
            ""gerais""=>'{}'
         );
      }

      // resgate do $_POST para vinculo com os parametros
      function bindParamsToInputs() {
         return array(
            ""filtros"",
            ""gerais""
         );
      }

      // funcao responsavel por realizar a conexao com o banco de dados
      // e resgate dos dados tratamento dos dados do $_POST
      public function settings() {

         Nucleo::import( 'relatorios.RelatoriosConexao' );
         $objRelatoriosConexao = new RelatoriosConexao;

         return $objRelatoriosConexao->settings();

      }

      // funcao responsavel por manter as consultas a serem executadas pelo relatorio
      // e geracao dos array de dados para uso posterior na visualizacao
      public function setup() {

         require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

         if (isset($_POST['filtros'])) {
            $this->arrDadosFiltro = json_decode($_POST['filtros']);
         } else {
            $this->arrDadosFiltro = json_decode($_POST);
         }

         if (isset($_POST['gerais'])) {
            $this->arrDadosGerais = json_decode($_POST['gerais']);
         }

         $arrParametros = [];

         foreach ($this->arrDadosFiltro as $filtro => $valor) {
            if (!empty($valor->ds_valor)) {
                $arrParametros["":"" . $filtro] = $valor->ds_valor;
            }
         }

         $this->src('unimestre')->query(
            ""
         SELECT
               CONCAT('Total Turma - ', me.turma)  as cod_total,
               me.curso AS cd_curso,
               me.turma AS cd_turma,
               me.parcela	AS parc,
               COUNT(me.parcela) AS parcelas,
               me.codigoaluno AS cd_aluno,
               pe.nm_pessoa AS nm_aluno,
               CONCAT(cm.DS_CURSO,'(',cm.CD_CURSO,')') AS nm_curso,
               COUNT(DISTINCT me.codigoaluno) AS alu,
               tp.ds_tipo_titulo AS tp_titulo,
               me.anosemestre AS anosem_parc,
               DATE_FORMAT(me.datavencimento,'%d/%m/%Y') AS data_venc,
            ROUND(
               SUM(
                  IF(
                     me.tipoparcela <> 1
                     AND me.datavencimento > :dt_inicio
                     AND me.datavencimento < :dt_fim,
                     (me.valorbruto + me.valorextra),
                     0
                  )
               ),
               2
            ) AS vl_bruto
			
		FROM
			mensalidades me
			INNER JOIN coligadas AS c ON (c.cd_coligada = me.cd_coligada)
			LEFT JOIN turmas tu ON (
				me.anosemestre = tu.anosemestre
				AND me.turma = tu.codigo
			)
			INNER JOIN pessoas pe ON (me.codigoaluno = pe.cd_pessoa)
			INNER JOIN fin_config_tipos_titulo tp ON (
				me.cd_tipo_titulo = tp.cd_tipo_titulo
				AND tp.cd_coligada_matriz = c.cd_coligada_matriz
			)
			LEFT JOIN cursos_coligadas cc ON (
				tu.curso = cc.CD_CURSO
				AND tu.cd_coligada = cc.CD_COLIGADA
			)
			LEFT JOIN cursos_mestre cm ON (cc.CD_CURSO = cm.CD_CURSO)
			LEFT JOIN departamentos dp ON (cc.CD_DEPTO = dp.codigo)
			LEFT JOIN fin_config_plano_contas pc ON (
				pc.cd_conta = me.cd_plano_conta
				AND pc.cd_coligada_matriz = c.cd_coligada_matriz
			)
			LEFT JOIN fin_config_centro_custos custo ON (
				custo.cd_centro = me.cd_centro_custo
				AND custo.cd_coligada_matriz = c.cd_coligada_matriz
			)
		WHERE
			1 = 1
			AND (
				me.datavencimento >= :dt_inicio
				AND me.datavencimento < :dt_fim
			)
			AND (
				me.situacao NOT IN (4, 5, 7, 8)
				OR DATE_FORMAT(me.datavencimento, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m')
				OR me.tipoparcela = 1
			)	
      
            
            "" .
                ((!empty($arrParametros["":cd_coligada""]))
                   ? ""AND me.cd_coligada IN (:cd_coligada)""
                   : NULL
                )
             . ""
            
             "" .
                ((!empty($arrParametros["":cd_departamento""]))
                   ? ""AND me.depto IN (:cd_departamento)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":id_curso""]))
                   ? ""AND cm.id_curso IN (:id_curso)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":cd_tipo_titulo""]))
                   ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":codigoaluno""]))
                   ? ""AND me.codigoaluno IN (:codigoaluno)""
                   : NULL
                )
             . ""
            
       		GROUP BY

			   me.cd_mensalidade
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda
               )
            )
         )
         ->saveTo($consulta);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
        

         if ($this->arrDadosGerais->arrOpcoes->tp_agrup->me_configuracao == ""agrup_turma"") {
            $consulta->pipe($this->dataStore(""dados_consulta""));

         $consulta->pipe(new Group(array(
            ""by""=>array(
               ""cd_curso"",
               ""cd_turma""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_turma"",
            ""nm_curso"",
            ""vl_liq"",
            ""liq_c_desc"",
            ""vl_n_pg_liq"",
            ""cd_aluno"",
            ""nm_aluno"",
            ""cd_turma"",
            ""cod_total"",
            ""cd_curso"",
            ""valorpg"",
            ""vl_bruto"",
            ""data_venc"",
            ""negoc"",
            ""canc"",
            ""anosem_parc"",
            ""acresc"",
            ""desconto"",
            ""tp_titulo"",
            ""parc"",
            ""parcelas"",
            

      
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));
         
            } else {
               $consulta->pipe($this->dataStore(""dados_consulta""));

               $consulta->pipe(new Group(array(
                  ""by""=>array(
                     ""cd_curso""
                  )
               )))
               ->pipe(new OnlyColumn(array(
                  ""cd_turma"",
                  ""nm_curso"",
                  ""vl_liq"",
                  ""liq_c_desc"",
                  ""vl_n_pg_liq"",
                  ""cd_aluno"",
                  ""nm_aluno"",
                  ""cd_turma"",
                  ""cod_total"",
                  ""cd_curso"",
                  ""valorpg"",
                  ""vl_bruto"",
                  ""desc_extra"",
                  ""negoc"",
                  ""canc"",
                  ""dsc_ant_pag"",
                  ""acresc"",
                  ""desconto"",
                  ""val_pg_liq"",
                  ""parc"",
                  ""parcelas""
            
               )))
               ->pipe($this->dataStore(""dados_consulta_agrupado""));
               
            }

         #Totalizador Curso ___________________________//________________________________________
         
         $this->src('unimestre')->query(
            ""
            SELECT c.*, 
         IF(ROUND((c.liq_c_desc - c.val_pg_liq + c.acresc),2) <= 0, '-',
         ROUND((c.liq_c_desc - c.val_pg_liq + c.acresc),2))
         AS vl_n_pg_liq
      FROM
      (
      SELECT
         x.*,
         IF(ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc),
            2
         ) <= 0, '-',
         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc),
            2
         )) AS vl_liq,
         
            IF(ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc - x.dsc_ant_pag),
            2
         ) <= 0, '-',
         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc - x.dsc_ant_pag),
            2
         )) AS liq_c_desc
      FROM
         (
            SELECT
               me.turma as cod_total,
               me.curso AS cd_curso,
               me.turma AS cd_turma,
               me.parcela	AS parc,
               me.codigoaluno AS cd_aluno,
               pe.nm_pessoa AS nm_aluno,
               COUNT(DISTINCT me.codigoaluno) AS t_alu,
               COUNT(me.parcela) AS parcelas,
               CONCAT(cm.DS_CURSO,'(',cm.CD_CURSO,')') AS nm_curso,
               COUNT(DISTINCT me.codigoaluno) AS alu,
                        ROUND(
               SUM(
                  IF(
                     me.tipoparcela <> 1
                     AND me.datavencimento >= :dt_inicio
                     AND me.datavencimento <= :dt_fim,
                     (me.valorbruto + me.valorextra),
                     0
                  )
               ),
               2
         ) AS vl_bruto,
      

         ROUND(
            SUM(
               IF(
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao IN(0, 1, 2, 6, 10),
                  (me.descontoextra),
                  0
               )
            ),
            2
         ) AS desc_extra,

         ROUND(SUM(
               IF(
                  me.situacao = 3
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim 
                  AND me.datapagamento <= :dt_base,
                  (me.valorbruto + me.valorextra),
                  0
               )
               ),2
         ) AS negoc,
      

         ROUND(SUM(
               IF(
                  me.situacao IN(4, 5, 7, 8)
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.datapagamento <= :dt_base,
                     (me.valorbruto + me.valorextra),
                     0
               )
               ), 2
         ) AS canc,

         
         ROUND(
            SUM(
               IF (
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao NOT IN (3, 4, 5, 7, 8),
                  (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                  0
               )
            ),
            2
         ) AS dsc_ant_pag,
         
      
         ROUND(SUM(
               IF( me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     GET_ACRESCIMOS(me.cd_mensalidade, NULL),
                     0
               )
            ),2
         ) AS acresc,
      
         
         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                     0
                  )
               ), 2
            ) AS desconto,

         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base, 
                     (me.valorpago), 0
                  )
               ),2
         ) AS val_pg_liq
         
         
      FROM
         mensalidades me
         INNER JOIN coligadas AS c ON (c.cd_coligada = me.cd_coligada)
         LEFT JOIN turmas tu ON (
            me.anosemestre = tu.anosemestre
            AND me.turma = tu.codigo
         )
         INNER JOIN pessoas pe ON (me.codigoaluno = pe.cd_pessoa)
         INNER JOIN fin_config_tipos_titulo tp ON (
            me.cd_tipo_titulo = tp.cd_tipo_titulo
            AND tp.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN cursos_coligadas cc ON (
            tu.curso = cc.CD_CURSO
            AND tu.cd_coligada = cc.CD_COLIGADA
         )
         LEFT JOIN cursos_mestre cm ON (cc.CD_CURSO = cm.CD_CURSO)
         LEFT JOIN departamentos dp ON (cc.CD_DEPTO = dp.codigo)
         LEFT JOIN fin_config_plano_contas pc ON (
            pc.cd_conta = me.cd_plano_conta
            AND pc.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN fin_config_centro_custos custo ON (
            custo.cd_centro = me.cd_centro_custo
            AND custo.cd_coligada_matriz = c.cd_coligada_matriz
         )
      WHERE
         1 = 1 
         AND (
            me.datavencimento >= :dt_inicio
            AND me.datavencimento <= :dt_fim
         )
         AND me.dataemissao <= :dt_base
         AND (
            me.situacao NOT IN (4, 5, 7, 8)
            OR DATE_FORMAT(me.datavencimento, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m')
            OR me.tipoparcela = 1
            OR me.sn_nfe_gerada = 1
         )			
            
            "" .
                ((!empty($arrParametros["":cd_coligada""]))
                   ? ""AND me.cd_coligada IN (:cd_coligada)""
                   : NULL
                )
             . ""
            
             "" .
                ((!empty($arrParametros["":cd_departamento""]))
                   ? ""AND me.depto IN (:cd_departamento)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":id_curso""]))
                   ? ""AND cm.id_curso IN (:id_curso)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":cd_tipo_titulo""]))
                   ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":codigoaluno""]))
                   ? ""AND me.codigoaluno IN (:codigoaluno)""
                   : NULL
                )
             . ""
            
       		GROUP BY
			   me.curso
	         ) AS x) as c 
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda
                        
               )
            )
         )
         ->saveTo($consulta_tot_curso);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
         $consulta_tot_curso->pipe($this->dataStore(""dados_tot_curso""));

         $consulta_tot_curso->pipe(new Group(array(
            ""by""=>array(
               ""cd_curso""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_turma"",
            ""nm_curso"",
            ""cod_total"",
            ""vl_liq"",
            ""liq_c_desc"",
            ""vl_n_pg_liq"",
            ""cd_aluno"",
            ""cd_turma"",
            ""cod_total"",
            ""cd_curso"",
            ""valorpg"",
            ""vl_bruto"",
            ""desc_extra"",
            ""negoc"",
            ""canc"",
            ""dsc_ant_pag"",
            ""acresc"",
            ""desconto"",
            ""val_pg_liq"",
            ""t_alu"",
            ""parcelas""
      
         )))
         ->pipe($this->dataStore(""dados_consulta_tot_cur_agrupado""));


				require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									

      }

   }
","<?php

use \koolreport\widgets\koolphp\Table;
use \koolreport\processes\Filter;

// path pasta
$path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

// margens
$ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
$ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
$ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
$ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

$sn_geracao = $_POST[""pdf""];

//cabecalho
foreach ($this->dataStore(""dados_cabecalhos"") as $cabecalho) {
    if (
        ($cabecalho[""cd_coligada""] == $this->dataStore(""dados_consulta"")[0][""cd_coligada_cabecalho""]
            && $cabecalho[""cd_relatorio""] == $this->arrDadosGerais->cd_relatorio)
        ||
        ($cabecalho[""cd_coligada""] == 0
            && $cabecalho[""cd_relatorio""] == 0)
    ) {

        $logo = $cabecalho[""ds_link_cdn""];
        break;
    }
}

?>

<html>

<head>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
</head>

<body class=""relatorio"">
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

    <?php
    $tot_alunos = $this->dataStore('dados_tot_curso')->sum(""t_alu"");
    $tot_parcelas = $this->dataStore('dados_tot_curso')->sum(""parcelas"");
    $tot_val_bru = number_format( $this->dataStore('dados_tot_curso')->sum(""vl_bruto""), 2,"","",""."");
    
    $count = $this->dataStore('dados_consulta_agrupado')->count();
    $count = $count - 1;

    if ($this->arrDadosGerais->arrOpcoes->tp_agrup->me_configuracao == ""agrup_turma"") {

        foreach ($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao) {

            $dados_pagina = $this->dataStore(""dados_consulta"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )
                ->filter(
                    ""cd_turma"",
                    ""="",
                    $visualizacao[""cd_turma""]
                );

            $dados_total = $this->dataStore(""dados_tot_curso"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )

            ?>

            <style>
                @page {
                    size: landscape;
                    padding-bottom: 2px !important;
                }

                .custom_size {
                    font-size: 11px;
                    font-weight: bold;
                }
            </style>

            <style>
                .size {
                    font-size: 11px !important;

                }
            </style>

            <style>
                .borda {
                    border: 1px solid !important;
                    text-align: center !important;

                }

                table,
                tr,
                td {
                    border: 1px solid #dee2e6 !important;
                    padding: 1.5px !important;
                    margin: 0px !important;
                }

                div,
                h1 {
                    font-size: 16px !important;
                }
            </style>

            <div class=""container"">
                <div class=""conteudo"" style=""
                  padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
                  padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
                  padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
                  padding-right: <?= $ds_margem_direita . 'cm' ?>;
               "">

                    <div style=""display: flex; padding-top:25px;""><img src=""https://www.sinergia.edu.br/wp-content/uploads/2016/05/sinergia-logo.png"">
                    </div>
                    
                    <div style=""text-align: right;>
                    <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'filtro.php')); ?>
                    </div>

                    <div>

                        <h1 style=""margin-bottom: 25px; text-align:center; font-size:18px !important; font-weight:bold; color:#A9A9A9"">
                            <?= $this->arrDadosGerais->nm_relatorio ?>
                        </h1>

                    </div>

                    <div style=""text-align: left; font-weight:bold; margin-bottom:15px;""> <?= $dados_pagina[0]['nm_curso'] ?> </div>

                    <?php
                    // componente responsavel pela criacao da tabela de dados
                    Table::create(array(
                        ""dataSource"" => $dados_pagina,
                        ""grouping"" => array(
                            ""cod_total"" => array(
                                ""calculate"" => array(
                                    ""{somaValBrut}"" => array(""sum"", ""vl_bruto"")
                                   
                                ),

                                ""top"" => ""<td align='center' class='fonte p-2 b'>Código</td>
                                    <td align='center' class='fonte p-2 b'>Aluno</td>
                                    <td align='center' class='fonte p-2 b'>Parcela</td>
                                    <td align='center' class='fonte p-2 b'>Vencimento</td>
                                    <td align='center' class='fonte p-2 b'>Anosemestre</td>
                                    <td align='center' class='fonte p-2 b'>Turma</td>
                                    <td align='center' class='fonte p-2 b'>Tipo de Título</td>
                                    <td align='center' class='fonte p-2 b'>Valor Bruto</td>

                                    "",
                                ""bottom"" => ""<td  align='center' class='fonte p-2 b font-weight-bold'>{cod_total}</td>
                                    <td colspan='8' align='right' class='fonte p-2 b'>{somaValBrut}</td>
                 
                                ""
                            ),
                        ),

                        ""showHeader"" => false,
                        ""columns"" => array(
                            ""cd_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""nm_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                                
                            ),
                            ""data_venc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""anosem_parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""cd_turma"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""tp_titulo"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""vl_bruto"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            )

                        ),
                        ""cssClass"" => array(
                            ""table"" => ""table table-striped table-hover"",
                            ""tr"" => """",
                            ""th"" => """",
                            ""td"" => ""p-2"",
                            ""tf"" => ""darker"",
                        ),
                        ""sorting"" => array(
                            ""nm_aluno"" => ""asc""

                        )
                    ));

                    ?>

                    <?php

                    if ($key == $count) {

                    ?>

                        <hr>

                        <div style=""text-align: center; font-size:25px; font-weight:bold; padding-top:20px; padding-bottom:20px; color:#A9A9A9""> TOTAL GERAL </div>

                        <table class=""table table-striped table-hover"">
                            <tbody>
                                <tr>
                                    <td style=""text-align:center; font-weight:bold"">Total de Alunos</td>
                                    <td style=""text-align:center; font-weight:bold"">Total de Parcelas</td>
                                    <td style=""text-align:center; font-weight:bold"">Valor Bruto</td>
                                </tr>
                                <tr>
                                    <td style=""text-align:center;""><?php echo $tot_alunos ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_parcelas ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_val_bru ?></td>
                                </tr>
                            </tbody>
                        </table>

                    <?php

                         }
                    ?>

                </div>
            </div>
            <div class=""page-break"" style=""page-break-after: always;""></div>
            </div>


        <?php

        }
    } else {

        foreach ($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao) {

            $dados_pagina = $this->dataStore(""dados_consulta"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                );

            $dados_total = $this->dataStore(""dados_tot_curso"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )

        ?>

            <style>
                @page {
                    size: landscape;
                    padding-bottom: 2px !important;
                }

                .custom_size {
                    font-size: 11px;
                    font-weight: bold;
                }
            </style>

            <style>
                .size {
                    font-size: 11px !important;

                }
            </style>

            <style>
                .borda {
                    border: 1px solid !important;
                    text-align: center !important;

                }

                table,
                tr,
                td {
                    border: 1px solid #dee2e6 !important;
                    padding: 1.5px !important;
                    margin: 0px !important;
                }

                div,
                h1 {
                    font-size: 16px !important;
                }
            </style>

            <div class=""container"">
                <div class=""conteudo"" style=""
              padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
              padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
              padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
              padding-right: <?= $ds_margem_direita . 'cm' ?>;
           "">


                    <div style=""display: flex; padding-top:25px;""><img src=""https://www.sinergia.edu.br/wp-content/uploads/2016/05/sinergia-logo.png"">
                    </div>

                    <div>

                        <h1 style=""margin-bottom: 25px; text-align:center; font-size:18px !important; font-weight:bold; color:#A9A9A9"">
                            <?= $this->arrDadosGerais->nm_relatorio ?>
                        </h1>

                    </div>

                    <div style=""text-align: left; font-weight:bold; margin-bottom:15px;""> <?= $dados_pagina[0]['nm_curso'] ?> </div>

                    <?php
                    // componente responsavel pela criacao da tabela de dados
                    Table::create(array(
                        ""dataSource"" => $dados_pagina,
                        ""grouping"" => array(
                            ""cd_curso"" => array(
                                ""calculate"" => array(
                                    ""{somaValBrut}"" => array(""sum"", ""vl_bruto"")
                                   
                                ),

                                ""top"" => ""<td align='center' class='fonte p-2 b'>Código</td>
                                    <td align='center' class='fonte p-2 b'>Aluno</td>
                                    <td align='center' class='fonte p-2 b'>Parcela</td>
                                    <td align='center' class='fonte p-2 b'>Vencimento</td>
                                    <td align='center' class='fonte p-2 b'>Anosemestre</td>
                                    <td align='center' class='fonte p-2 b'>Turma</td>
                                    <td align='center' class='fonte p-2 b'>Tipo de Título</td>
                                    <td align='center' class='fonte p-2 b'>Valor Bruto</td>

                                    "",
                                ""bottom"" => ""<td  align='center' class='fonte p-2 b font-weight-bold'>Total do Curso:</td>
                                    <td colspan='8' align='right' class='fonte p-2 b'>{somaValBrut}</td>
                 
                                ""
                            ),
                        ),

                        ""showHeader"" => false,
                        ""columns"" => array(
                            ""cd_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""nm_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                                
                            ),
                            ""data_venc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""anosem_parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""cd_turma"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""tp_titulo"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""vl_bruto"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            )

                        ),
                        ""cssClass"" => array(
                            ""table"" => ""table table-striped table-hover"",
                            ""tr"" => """",
                            ""th"" => """",
                            ""td"" => ""p-2"",
                            ""tf"" => ""darker"",
                        ),
                        ""sorting"" => array(
                            ""nm_aluno"" => ""asc""

                        )
                    ));

                    ?>

                    <?php

                    if ($key == $count) {

                    ?>

                        <hr>

                        <div style=""text-align: center; font-size:25px; font-weight:bold; padding-top:20px; padding-bottom:20px; color:#A9A9A9""> TOTAL GERAL </div>

                        <table class=""table table-striped table-hover"">
                            <tbody>
                                <tr>
                                    <td style=""text-align:center; font-weight:bold"">Total de Alunos</td>
                                    <td style=""text-align:center; font-weight:bold"">Total de Parcelas</td>
                                    <td style=""text-align:center; font-weight:bold"">Valor Bruto</td>
                                </tr>
                                <tr>
                                    <td style=""text-align:center;""><?php echo $tot_alunos ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_parcelas ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_val_bru ?></td>
                                </tr>
                            </tbody>
                        </table>

                    <?php

                      }
                    ?>

                </div>
                <div class=""page-break"" style=""page-break-after: always;""></div>
            </div>


    <?php

        }
     }
    ?>

</body>

</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[
{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data inicial"",
		""ds_campo"": ""dt_inicio""
	},
 
	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data final"",
		""ds_campo"": ""dt_fim""
	},

	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data Base"",
		""ds_campo"": ""dt_base""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Inicial"",
		""ds_campo"": ""parc_ini""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Final"",
		""ds_campo"": ""parc_fim""
	},
 
	{
		""tipo"": ""uni-select-coligada-filha"",
		""obrigatorio"": false,
		""label"": ""Unidade"",
		""ds_campo"": ""cd_coligada""
	},
	{
		""tipo"": ""uni-select-departamento"",
		""obrigatorio"": false,
		""label"": ""Departamento"",
		""ds_campo"": ""cd_departamento""
	},
	{
		""tipo"": ""uni-select-curso"",
		""obrigatorio"": false,
		""label"": ""Curso"",
		""ds_campo"": ""id_curso""
	},
	{
		""tipo"": ""uni-busca-turma"",
		""obrigatorio"": false,
		""label"": ""Turma"",
		""ds_campo"": ""cd_turma""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Código aluno"",
		""ds_campo"": ""codigoaluno""
	},
	{
		""tipo"": ""campo-dinamico"",
		""obrigatorio"": false,
		""label"": ""Tipo de Título"",
		""ds_chave"": ""busca-tipo-mensalidade"",
		""ds_campo"": ""cd_tipo_titulo""
	}
]
		",112,"INSERT IGNORE INTO rgo_opcoes_tipos (
								cd_opcao_tipo,
								ds_opcao_tipo,
								ds_tag_opcao,
								dt_base
						)
				VALUES (
								NULL,""Tipo Agrupamento"",""tp_agrup"",""2022-12-10 21:00:11"")","INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,11,1,""2.0 Detalhamento Valor Bruto"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,2, NULL, NULL,""rel_det_bru"",""2023-12-13 15:53:40"",0, NULL)","INSERT IGNORE INTO rgo_opcoes (cd_opcao, cd_relatorio,cd_opcao_tipo,sn_padrao,sn_ativo,ds_opcao,me_configuracao,ds_chave,dt_base)
VALUES (NULL,NULL,NULL,1,1,""Agrupamento por Turma"",""agrup_turma"",""rel_det_val_bru_turma"",""2022-12-10 21:02:26""
 ); 
INSERT IGNORE INTO rgo_opcoes (cd_opcao, cd_relatorio,cd_opcao_tipo,sn_padrao,sn_ativo,ds_opcao,me_configuracao,ds_chave,dt_base)
VALUES (NULL,NULL,NULL,0,1,""Agrupamento por Curso"",""agrup_curso"",""rel_det_val_bru_curso"",""2022-12-11 13:04:01""
 )",,489.0,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Gerenciais por Vencimento,3.0 Descontos Fixos por Aluno,"<?php

   $PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
   require_once( $PARMS['PASTA'] . 'nucleo.php' );
   require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
   header ('Content-type: text/html; charset=UTF-8');

   use \koolreport\processes\ColumnMeta;
   use \koolreport\processes\Group;
   use \koolreport\processes\OnlyColumn;

   // classe padrao do relatorio
   class Relatorio extends \koolreport\KoolReport {
      use \koolreport\bootstrap4\Theme;
      use \koolreport\inputs\Bindable;
      use \koolreport\inputs\POSTBinding;
      // use \koolreport\export\Exportable;
      use \koolreport\cloudexport\Exportable;
  
      const C_SN_CLOUD_EXPORT = true;

      public $path_include;
      public $arrDadosFiltro;
      public $arrDadosGerais;

      public function __construct() {

         try {

            $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
            parent::__construct();

         } catch (Exception $e) {

            echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
            die;

         }

      }

      // inicializacao dos filtros
      function defaultParamValues() {
         return array(
            ""filtros""=>'{}',
            ""gerais""=>'{}'
         );
      }

      // resgate do $_POST para vinculo com os parametros
      function bindParamsToInputs() {
         return array(
            ""filtros"",
            ""gerais""
         );
      }

      // funcao responsavel por realizar a conexao com o banco de dados
      // e resgate dos dados tratamento dos dados do $_POST
      public function settings() {

         Nucleo::import( 'relatorios.RelatoriosConexao' );
         $objRelatoriosConexao = new RelatoriosConexao;

         return $objRelatoriosConexao->settings();

      }

      // funcao responsavel por manter as consultas a serem executadas pelo relatorio
      // e geracao dos array de dados para uso posterior na visualizacao
      public function setup() {

         require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

         if (isset($_POST['filtros'])) {
            $this->arrDadosFiltro = json_decode($_POST['filtros']);
         } else {
            $this->arrDadosFiltro = json_decode($_POST);
         }

         if (isset($_POST['gerais'])) {
            $this->arrDadosGerais = json_decode($_POST['gerais']);
         }

         $arrParametros = [];

         foreach ($this->arrDadosFiltro as $filtro => $valor) {
            if (!empty($valor->ds_valor)) {
                $arrParametros["":"" . $filtro] = $valor->ds_valor;
            }
         }

         $this->src('unimestre')->query(
            ""
         SELECT
               CONCAT('Total Turma - ', me.turma)  as cod_total,
               me.curso AS cd_curso,
               me.turma AS cd_turma,
               me.parcela	AS parc,
               COUNT(me.parcela) AS parcelas,
               me.codigoaluno AS cd_aluno,
               pe.nm_pessoa AS nm_aluno,
               CONCAT(cm.DS_CURSO,'(',cm.CD_CURSO,')') AS nm_curso,
               COUNT(DISTINCT me.codigoaluno) AS alu,
               tp.ds_tipo_titulo AS tp_titulo,
               me.anosemestre AS anosem_parc,
               DATE_FORMAT(me.datavencimento,'%d/%m/%Y') AS data_venc,
            ROUND(
               SUM(
                  IF(
                     me.tipoparcela <> 1
                     AND me.datavencimento > :dt_inicio
                     AND me.datavencimento < :dt_fim,
                     (me.descontoextra),
                     0
                  )
               ),
               2
            ) AS desc_extra
			
		FROM
			mensalidades me
			INNER JOIN coligadas AS c ON (c.cd_coligada = me.cd_coligada)
			LEFT JOIN turmas tu ON (
				me.anosemestre = tu.anosemestre
				AND me.turma = tu.codigo
			)
			INNER JOIN pessoas pe ON (me.codigoaluno = pe.cd_pessoa)
			INNER JOIN fin_config_tipos_titulo tp ON (
				me.cd_tipo_titulo = tp.cd_tipo_titulo
				AND tp.cd_coligada_matriz = c.cd_coligada_matriz
			)
			LEFT JOIN cursos_coligadas cc ON (
				tu.curso = cc.CD_CURSO
				AND tu.cd_coligada = cc.CD_COLIGADA
			)
			LEFT JOIN cursos_mestre cm ON (cc.CD_CURSO = cm.CD_CURSO)
			LEFT JOIN departamentos dp ON (cc.CD_DEPTO = dp.codigo)
			LEFT JOIN fin_config_plano_contas pc ON (
				pc.cd_conta = me.cd_plano_conta
				AND pc.cd_coligada_matriz = c.cd_coligada_matriz
			)
			LEFT JOIN fin_config_centro_custos custo ON (
				custo.cd_centro = me.cd_centro_custo
				AND custo.cd_coligada_matriz = c.cd_coligada_matriz
			)
		WHERE
			1 = 1
                        AND descontoextra > 0
			AND (
				me.datavencimento >= :dt_inicio
				AND me.datavencimento < :dt_fim
			)
			AND (
				me.situacao NOT IN (4, 5, 7, 8)
				OR DATE_FORMAT(me.datavencimento, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m')
				OR me.tipoparcela = 1
			)	
      
            
            "" .
                ((!empty($arrParametros["":cd_coligada""]))
                   ? ""AND me.cd_coligada IN (:cd_coligada)""
                   : NULL
                )
             . ""
            
             "" .
                ((!empty($arrParametros["":cd_departamento""]))
                   ? ""AND me.depto IN (:cd_departamento)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":id_curso""]))
                   ? ""AND cm.id_curso IN (:id_curso)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":cd_tipo_titulo""]))
                   ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":codigoaluno""]))
                   ? ""AND me.codigoaluno IN (:codigoaluno)""
                   : NULL
                )
             . ""
            
       		GROUP BY

			   me.cd_mensalidade
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda
               )
            )
         )
         ->saveTo($consulta);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
        

         if ($this->arrDadosGerais->arrOpcoes->tp_agrup->me_configuracao == ""agrup_turma"") {
            $consulta->pipe($this->dataStore(""dados_consulta""));

         $consulta->pipe(new Group(array(
            ""by""=>array(
               ""cd_curso"",
               ""cd_turma""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_turma"",
            ""nm_curso"",
            ""vl_liq"",
            ""liq_c_desc"",
            ""vl_n_pg_liq"",
            ""cd_aluno"",
            ""nm_aluno"",
            ""cd_turma"",
            ""cod_total"",
            ""cd_curso"",
            ""valorpg"",
            ""vl_bruto"",
            ""data_venc"",
            ""negoc"",
            ""canc"",
            ""anosem_parc"",
            ""acresc"",
            ""desconto"",
            ""tp_titulo"",
            ""parc"",
            ""parcelas"",
            ""desc_extra"",
            

      
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));
         
            } else {
               $consulta->pipe($this->dataStore(""dados_consulta""));

               $consulta->pipe(new Group(array(
                  ""by""=>array(
                     ""cd_curso""
                  )
               )))
               ->pipe(new OnlyColumn(array(
                  ""cd_turma"",
                  ""nm_curso"",
                  ""vl_liq"",
                  ""liq_c_desc"",
                  ""vl_n_pg_liq"",
                  ""cd_aluno"",
                  ""nm_aluno"",
                  ""cd_turma"",
                  ""cod_total"",
                  ""cd_curso"",
                  ""valorpg"",
                  ""vl_bruto"",
                  ""desc_extra"",
                  ""negoc"",
                  ""canc"",
                  ""dsc_ant_pag"",
                  ""acresc"",
                  ""desconto"",
                  ""val_pg_liq"",
                  ""parc"",
                  ""parcelas"",
                  ""desc_extra""
            
               )))
               ->pipe($this->dataStore(""dados_consulta_agrupado""));
               
            }

         #Totalizador Curso ___________________________//________________________________________
         
         $this->src('unimestre')->query(
            ""
            SELECT c.*, 
         IF(ROUND((c.liq_c_desc - c.val_pg_liq + c.acresc),2) <= 0, '-',
         ROUND((c.liq_c_desc - c.val_pg_liq + c.acresc),2))
         AS vl_n_pg_liq
      FROM
      (
      SELECT
         x.*,
         IF(ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc),
            2
         ) <= 0, '-',
         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc),
            2
         )) AS vl_liq,
         
            IF(ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc - x.dsc_ant_pag),
            2
         ) <= 0, '-',
         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc - x.dsc_ant_pag),
            2
         )) AS liq_c_desc
      FROM
         (
            SELECT
               me.turma as cod_total,
               me.curso AS cd_curso,
               me.turma AS cd_turma,
               me.parcela	AS parc,
               me.codigoaluno AS cd_aluno,
               pe.nm_pessoa AS nm_aluno,
               COUNT(DISTINCT me.codigoaluno) AS t_alu,
               COUNT(me.parcela) AS parcelas,
               CONCAT(cm.DS_CURSO,'(',cm.CD_CURSO,')') AS nm_curso,
               COUNT(DISTINCT me.codigoaluno) AS alu,
                        ROUND(
               SUM(
                  IF(
                     me.tipoparcela <> 1
                     AND me.datavencimento >= :dt_inicio
                     AND me.datavencimento <= :dt_fim,
                     (me.valorbruto + me.valorextra),
                     0
                  )
               ),
               2
         ) AS vl_bruto,
      

         ROUND(
            SUM(
               IF(
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao IN(0, 1, 2, 6, 10),
                  (me.descontoextra),
                  0
               )
            ),
            2
         ) AS desc_extra,

         ROUND(SUM(
               IF(
                  me.situacao = 3
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim 
                  AND me.datapagamento <= :dt_base,
                  (me.valorbruto + me.valorextra),
                  0
               )
               ),2
         ) AS negoc,
      

         ROUND(SUM(
               IF(
                  me.situacao IN(4, 5, 7, 8)
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.datapagamento <= :dt_base,
                     (me.valorbruto + me.valorextra),
                     0
               )
               ), 2
         ) AS canc,

         
         ROUND(
            SUM(
               IF (
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao NOT IN (3, 4, 5, 7, 8),
                  (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                  0
               )
            ),
            2
         ) AS dsc_ant_pag,
         
      
         ROUND(SUM(
               IF( me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     GET_ACRESCIMOS(me.cd_mensalidade, NULL),
                     0
               )
            ),2
         ) AS acresc,
      
         
         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                     0
                  )
               ), 2
            ) AS desconto,

         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base, 
                     (me.valorpago), 0
                  )
               ),2
         ) AS val_pg_liq
         
         
      FROM
         mensalidades me
         INNER JOIN coligadas AS c ON (c.cd_coligada = me.cd_coligada)
         LEFT JOIN turmas tu ON (
            me.anosemestre = tu.anosemestre
            AND me.turma = tu.codigo
         )
         INNER JOIN pessoas pe ON (me.codigoaluno = pe.cd_pessoa)
         INNER JOIN fin_config_tipos_titulo tp ON (
            me.cd_tipo_titulo = tp.cd_tipo_titulo
            AND tp.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN cursos_coligadas cc ON (
            tu.curso = cc.CD_CURSO
            AND tu.cd_coligada = cc.CD_COLIGADA
         )
         LEFT JOIN cursos_mestre cm ON (cc.CD_CURSO = cm.CD_CURSO)
         LEFT JOIN departamentos dp ON (cc.CD_DEPTO = dp.codigo)
         LEFT JOIN fin_config_plano_contas pc ON (
            pc.cd_conta = me.cd_plano_conta
            AND pc.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN fin_config_centro_custos custo ON (
            custo.cd_centro = me.cd_centro_custo
            AND custo.cd_coligada_matriz = c.cd_coligada_matriz
         )
      WHERE
         1 = 1
         AND descontoextra > 0
         AND (
            me.datavencimento >= :dt_inicio
            AND me.datavencimento <= :dt_fim
         )
         AND me.dataemissao <= :dt_base
         AND (
            me.situacao NOT IN (4, 5, 7, 8)
            OR DATE_FORMAT(me.datavencimento, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m')
            OR me.tipoparcela = 1
            OR me.sn_nfe_gerada = 1
         )			
            
            "" .
                ((!empty($arrParametros["":cd_coligada""]))
                   ? ""AND me.cd_coligada IN (:cd_coligada)""
                   : NULL
                )
             . ""
            
             "" .
                ((!empty($arrParametros["":cd_departamento""]))
                   ? ""AND me.depto IN (:cd_departamento)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":id_curso""]))
                   ? ""AND cm.id_curso IN (:id_curso)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":cd_tipo_titulo""]))
                   ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":codigoaluno""]))
                   ? ""AND me.codigoaluno IN (:codigoaluno)""
                   : NULL
                )
             . ""
            
       		GROUP BY
			   me.curso
	         ) AS x) as c 
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda
                        
               )
            )
         )
         ->saveTo($consulta_tot_curso);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
         $consulta_tot_curso->pipe($this->dataStore(""dados_tot_curso""));

         $consulta_tot_curso->pipe(new Group(array(
            ""by""=>array(
               ""cd_curso""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_turma"",
            ""nm_curso"",
            ""cod_total"",
            ""vl_liq"",
            ""liq_c_desc"",
            ""vl_n_pg_liq"",
            ""cd_aluno"",
            ""cd_turma"",
            ""cod_total"",
            ""cd_curso"",
            ""valorpg"",
            ""vl_bruto"",
            ""desc_extra"",
            ""negoc"",
            ""canc"",
            ""dsc_ant_pag"",
            ""acresc"",
            ""desconto"",
            ""val_pg_liq"",
            ""t_alu"",
            ""parcelas""
      
         )))
         ->pipe($this->dataStore(""dados_consulta_tot_cur_agrupado""));


				require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									

      }

   }
","<?php

use \koolreport\widgets\koolphp\Table;
use \koolreport\processes\Filter;

// path pasta
$path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

// margens
$ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
$ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
$ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
$ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

$sn_geracao = $_POST[""pdf""];

//cabecalho
foreach ($this->dataStore(""dados_cabecalhos"") as $cabecalho) {
    if (
        ($cabecalho[""cd_coligada""] == $this->dataStore(""dados_consulta"")[0][""cd_coligada_cabecalho""]
            && $cabecalho[""cd_relatorio""] == $this->arrDadosGerais->cd_relatorio)
        ||
        ($cabecalho[""cd_coligada""] == 0
            && $cabecalho[""cd_relatorio""] == 0)
    ) {

        $logo = $cabecalho[""ds_link_cdn""];
        break;
    }
}

?>

<html>

<head>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
</head>

<body class=""relatorio"">
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

    <?php
    $tot_alunos = $this->dataStore('dados_tot_curso')->sum(""t_alu"");
    $tot_parcelas = $this->dataStore('dados_tot_curso')->sum(""parcelas"");
    $tot_val_bru = number_format( $this->dataStore('dados_tot_curso')->sum(""vl_bruto""), 2,"","",""."");
    $tot_desc_extra = number_format( $this->dataStore('dados_tot_curso')->sum(""desc_extra""), 2,"","",""."");
    
    $count = $this->dataStore('dados_consulta_agrupado')->count();
    $count = $count - 1;

    if ($this->arrDadosGerais->arrOpcoes->tp_agrup->me_configuracao == ""agrup_turma"") {

        foreach ($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao) {

            $dados_pagina = $this->dataStore(""dados_consulta"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )
                ->filter(
                    ""cd_turma"",
                    ""="",
                    $visualizacao[""cd_turma""]
                );

            $dados_total = $this->dataStore(""dados_tot_curso"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )

            ?>

            <style>
                @page {
                    size: landscape;
                    padding-bottom: 2px !important;
                }

                .custom_size {
                    font-size: 11px;
                    font-weight: bold;
                }
            </style>

            <style>
                .size {
                    font-size: 11px !important;

                }
            </style>

            <style>
                .borda {
                    border: 1px solid !important;
                    text-align: center !important;

                }

                table,
                tr,
                td {
                    border: 1px solid #dee2e6 !important;
                    padding: 1.5px !important;
                    margin: 0px !important;
                }

                div,
                h1 {
                    font-size: 16px !important;
                }
            </style>

            <div class=""container"">
                <div class=""conteudo"" style=""
                  padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
                  padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
                  padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
                  padding-right: <?= $ds_margem_direita . 'cm' ?>;
               "">

                    <div style=""display: flex; padding-top:25px;""><img src=""https://www.sinergia.edu.br/wp-content/uploads/2016/05/sinergia-logo.png"">
                    </div>
                    
                    <div style=""text-align: right;>
                    <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'filtro.php')); ?>
                    </div>

                    <div>

                        <h1 style=""margin-bottom: 25px; text-align:center; font-size:18px !important; font-weight:bold; color:#A9A9A9"">
                            <?= $this->arrDadosGerais->nm_relatorio ?>
                        </h1>

                    </div>

                    <div style=""text-align: left; font-weight:bold; margin-bottom:15px;""> <?= $dados_pagina[0]['nm_curso'] ?> </div>

                    <?php
                    // componente responsavel pela criacao da tabela de dados
                    Table::create(array(
                        ""dataSource"" => $dados_pagina,
                        ""grouping"" => array(
                            ""cod_total"" => array(
                                ""calculate"" => array(
                                    ""{somaDescExtra}"" => array(""sum"", ""desc_extra"")
                                   
                                ),

                                ""top"" => ""<td align='center' class='fonte p-2 b'>Código</td>
                                    <td align='center' class='fonte p-2 b'>Aluno</td>
                                    <td align='center' class='fonte p-2 b'>Parcela</td>
                                    <td align='center' class='fonte p-2 b'>Vencimento</td>
                                    <td align='center' class='fonte p-2 b'>Anosemestre</td>
                                    <td align='center' class='fonte p-2 b'>Turma</td>
                                    <td align='center' class='fonte p-2 b'>Tipo de Título</td>
                                    <td align='center' class='fonte p-2 b'>Desc Fixo</td>

                                    "",
                                ""bottom"" => ""<td  align='center' class='fonte p-2 b font-weight-bold'>{cod_total}</td>
                                    <td colspan='8' align='right' class='fonte p-2 b'>{somaDescExtra}</td>
                 
                                ""
                            ),
                        ),

                        ""showHeader"" => false,
                        ""columns"" => array(
                            ""cd_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""nm_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                                
                            ),
                            ""data_venc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""anosem_parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""cd_turma"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""tp_titulo"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""desc_extra"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            )

                        ),
                        ""cssClass"" => array(
                            ""table"" => ""table table-striped table-hover"",
                            ""tr"" => """",
                            ""th"" => """",
                            ""td"" => ""p-2"",
                            ""tf"" => ""darker"",
                        ),
                        ""sorting"" => array(
                            ""nm_aluno"" => ""asc""

                        )
                    ));

                    ?>

                    <?php

                    if ($key == $count) {

                    ?>

                        <hr>

                        <div style=""text-align: center; font-size:25px; font-weight:bold; padding-top:20px; padding-bottom:20px; color:#A9A9A9""> TOTAL GERAL </div>

                        <table class=""table table-striped table-hover"">
                            <tbody>
                                <tr>
                                    <td style=""text-align:center; font-weight:bold"">Total de Alunos</td>
                                    <td style=""text-align:center; font-weight:bold"">Total de Parcelas</td>
                                    <td style=""text-align:center; font-weight:bold"">Desc Fixo</td>
                                </tr>
                                <tr>
                                    <td style=""text-align:center;""><?php echo $tot_alunos ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_parcelas ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_desc_extra ?></td>
                                </tr>
                            </tbody>
                        </table>

                    <?php

                         }
                    ?>

                </div>
            </div>
            <div class=""page-break"" style=""page-break-after: always;""></div>
            </div>


        <?php

        }
    } else {

        foreach ($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao) {

            $dados_pagina = $this->dataStore(""dados_consulta"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                );

            $dados_total = $this->dataStore(""dados_tot_curso"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )

        ?>

            <style>
                @page {
                    size: landscape;
                    padding-bottom: 2px !important;
                }

                .custom_size {
                    font-size: 11px;
                    font-weight: bold;
                }
            </style>

            <style>
                .size {
                    font-size: 11px !important;

                }
            </style>

            <style>
                .borda {
                    border: 1px solid !important;
                    text-align: center !important;

                }

                table,
                tr,
                td {
                    border: 1px solid #dee2e6 !important;
                    padding: 1.5px !important;
                    margin: 0px !important;
                }

                div,
                h1 {
                    font-size: 16px !important;
                }
            </style>

            <div class=""container"">
                <div class=""conteudo"" style=""
              padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
              padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
              padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
              padding-right: <?= $ds_margem_direita . 'cm' ?>;
           "">


                    <div style=""display: flex; padding-top:25px;""><img src=""https://www.sinergia.edu.br/wp-content/uploads/2016/05/sinergia-logo.png"">
                    </div>

                    <div>

                        <h1 style=""margin-bottom: 25px; text-align:center; font-size:18px !important; font-weight:bold; color:#A9A9A9"">
                            <?= $this->arrDadosGerais->nm_relatorio ?>
                        </h1>

                    </div>

                    <div style=""text-align: left; font-weight:bold; margin-bottom:15px;""> <?= $dados_pagina[0]['nm_curso'] ?> </div>

                    <?php
                    // componente responsavel pela criacao da tabela de dados
                    Table::create(array(
                        ""dataSource"" => $dados_pagina,
                        ""grouping"" => array(
                            ""cd_curso"" => array(
                                ""calculate"" => array(
                                    ""{somaDescExtra}"" => array(""sum"", ""desc_extra"")
                                   
                                ),

                                ""top"" => ""<td align='center' class='fonte p-2 b'>Código</td>
                                    <td align='center' class='fonte p-2 b'>Aluno</td>
                                    <td align='center' class='fonte p-2 b'>Parcela</td>
                                    <td align='center' class='fonte p-2 b'>Vencimento</td>
                                    <td align='center' class='fonte p-2 b'>Anosemestre</td>
                                    <td align='center' class='fonte p-2 b'>Turma</td>
                                    <td align='center' class='fonte p-2 b'>Tipo de Título</td>
                                    <td align='center' class='fonte p-2 b'>Desc Fixo</td>

                                    "",
                                ""bottom"" => ""<td  align='center' class='fonte p-2 b font-weight-bold'>Total do Curso:</td>
                                    <td colspan='8' align='right' class='fonte p-2 b'>{somaDescExtra}</td>
                 
                                ""
                            ),
                        ),

                        ""showHeader"" => false,
                        ""columns"" => array(
                            ""cd_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""nm_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                                
                            ),
                            ""data_venc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""anosem_parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""cd_turma"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""tp_titulo"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""desc_extra"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            )

                        ),
                        ""cssClass"" => array(
                            ""table"" => ""table table-striped table-hover"",
                            ""tr"" => """",
                            ""th"" => """",
                            ""td"" => ""p-2"",
                            ""tf"" => ""darker"",
                        ),
                        ""sorting"" => array(
                            ""nm_aluno"" => ""asc""

                        )
                    ));

                    ?>

                    <?php

                    if ($key == $count) {

                    ?>

                        <hr>

                        <div style=""text-align: center; font-size:25px; font-weight:bold; padding-top:20px; padding-bottom:20px; color:#A9A9A9""> TOTAL GERAL </div>

                        <table class=""table table-striped table-hover"">
                            <tbody>
                                <tr>
                                    <td style=""text-align:center; font-weight:bold"">Total de Alunos</td>
                                    <td style=""text-align:center; font-weight:bold"">Total de Parcelas</td>
                                    <td style=""text-align:center; font-weight:bold"">Desc Fixo</td>
                                </tr>
                                <tr>
                                    <td style=""text-align:center;""><?php echo $tot_alunos ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_parcelas ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_desc_extra ?></td>
                                </tr>
                            </tbody>
                        </table>

                    <?php

                      }
                    ?>

                </div>
                <div class=""page-break"" style=""page-break-after: always;""></div>
            </div>


    <?php

        }
     }
    ?>

</body>

</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[
{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data inicial"",
		""ds_campo"": ""dt_inicio""
	},
 
	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data final"",
		""ds_campo"": ""dt_fim""
	},

	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data Base"",
		""ds_campo"": ""dt_base""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Inicial"",
		""ds_campo"": ""parc_ini""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Final"",
		""ds_campo"": ""parc_fim""
	},
 
	{
		""tipo"": ""uni-select-coligada-filha"",
		""obrigatorio"": false,
		""label"": ""Unidade"",
		""ds_campo"": ""cd_coligada""
	},
	{
		""tipo"": ""uni-select-departamento"",
		""obrigatorio"": false,
		""label"": ""Departamento"",
		""ds_campo"": ""cd_departamento""
	},
	{
		""tipo"": ""uni-select-curso"",
		""obrigatorio"": false,
		""label"": ""Curso"",
		""ds_campo"": ""id_curso""
	},
	{
		""tipo"": ""uni-busca-turma"",
		""obrigatorio"": false,
		""label"": ""Turma"",
		""ds_campo"": ""cd_turma""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Código aluno"",
		""ds_campo"": ""codigoaluno""
	},
	{
		""tipo"": ""campo-dinamico"",
		""obrigatorio"": false,
		""label"": ""Tipo de Título"",
		""ds_chave"": ""busca-tipo-mensalidade"",
		""ds_campo"": ""cd_tipo_titulo""
	}
]
		",113,"INSERT IGNORE INTO rgo_opcoes_tipos (
								cd_opcao_tipo,
								ds_opcao_tipo,
								ds_tag_opcao,
								dt_base
						)
				VALUES (
								NULL,""Tipo Agrupamento"",""tp_agrup"",""2022-12-10 21:00:11"")","INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,11,1,""3.0 Descontos Fixos por Aluno"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,2, NULL, NULL,""rel_det_fix"",""2023-12-13 15:53:40"",0, NULL)","INSERT IGNORE INTO rgo_opcoes (cd_opcao, cd_relatorio,cd_opcao_tipo,sn_padrao,sn_ativo,ds_opcao,me_configuracao,ds_chave,dt_base)
VALUES (NULL,NULL,NULL,1,1,""Agrupamento por Turma"",""agrup_turma"",""rel_desfix_turma"",""2022-12-10 21:02:26""
 ); 
INSERT IGNORE INTO rgo_opcoes (cd_opcao, cd_relatorio,cd_opcao_tipo,sn_padrao,sn_ativo,ds_opcao,me_configuracao,ds_chave,dt_base)
VALUES (NULL,NULL,NULL,0,1,""Agrupamento por Curso"",""agrup_curso"",""rel_desfix_curso"",""2022-12-11 13:04:01""
 )",,479.0,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Gerenciais por Vencimento,4.0 Descontos Condicionais por Aluno,"<?php

   $PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
   require_once( $PARMS['PASTA'] . 'nucleo.php' );
   require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
   header ('Content-type: text/html; charset=UTF-8');

   use \koolreport\processes\ColumnMeta;
   use \koolreport\processes\Group;
   use \koolreport\processes\OnlyColumn;

   // classe padrao do relatorio
   class Relatorio extends \koolreport\KoolReport {
      use \koolreport\bootstrap4\Theme;
      use \koolreport\inputs\Bindable;
      use \koolreport\inputs\POSTBinding;
      // use \koolreport\export\Exportable;
      use \koolreport\cloudexport\Exportable;
  
      const C_SN_CLOUD_EXPORT = true;

      public $path_include;
      public $arrDadosFiltro;
      public $arrDadosGerais;

      public function __construct() {

         try {

            $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
            parent::__construct();

         } catch (Exception $e) {

            echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
            die;

         }

      }

      // inicializacao dos filtros
      function defaultParamValues() {
         return array(
            ""filtros""=>'{}',
            ""gerais""=>'{}'
         );
      }

      // resgate do $_POST para vinculo com os parametros
      function bindParamsToInputs() {
         return array(
            ""filtros"",
            ""gerais""
         );
      }

      // funcao responsavel por realizar a conexao com o banco de dados
      // e resgate dos dados tratamento dos dados do $_POST
      public function settings() {

         Nucleo::import( 'relatorios.RelatoriosConexao' );
         $objRelatoriosConexao = new RelatoriosConexao;

         return $objRelatoriosConexao->settings();

      }

      // funcao responsavel por manter as consultas a serem executadas pelo relatorio
      // e geracao dos array de dados para uso posterior na visualizacao
      public function setup() {

         require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

         if (isset($_POST['filtros'])) {
            $this->arrDadosFiltro = json_decode($_POST['filtros']);
         } else {
            $this->arrDadosFiltro = json_decode($_POST);
         }

         if (isset($_POST['gerais'])) {
            $this->arrDadosGerais = json_decode($_POST['gerais']);
         }

         $arrParametros = [];

         foreach ($this->arrDadosFiltro as $filtro => $valor) {
            if (!empty($valor->ds_valor)) {
                $arrParametros["":"" . $filtro] = $valor->ds_valor;
            }
         }

         $this->src('unimestre')->query(
            ""
         SELECT
               CONCAT('Total Turma - ', me.turma)  as cod_total,
               me.curso AS cd_curso,
               me.turma AS cd_turma,
               me.parcela	AS parc,
               COUNT(me.parcela) AS parcelas,
               me.codigoaluno AS cd_aluno,
               pe.nm_pessoa AS nm_aluno,
               CONCAT(cm.DS_CURSO,'(',cm.CD_CURSO,')') AS nm_curso,
               COUNT(DISTINCT me.codigoaluno) AS alu,
               tp.ds_tipo_titulo AS tp_titulo,
               me.anosemestre AS anosem_parc,
               DATE_FORMAT(me.datavencimento,'%d/%m/%Y') AS data_venc,
            ROUND(
               SUM(
                  IF(
                     me.tipoparcela <> 1
                     AND me.datavencimento > :dt_inicio
                     AND me.datavencimento < :dt_fim,
                     (me.valordesconto),
                     0
                  )
               ),
               2
            ) AS desconto
			
		FROM
			mensalidades me
			INNER JOIN coligadas AS c ON (c.cd_coligada = me.cd_coligada)
			LEFT JOIN turmas tu ON (
				me.anosemestre = tu.anosemestre
				AND me.turma = tu.codigo
			)
			INNER JOIN pessoas pe ON (me.codigoaluno = pe.cd_pessoa)
			INNER JOIN fin_config_tipos_titulo tp ON (
				me.cd_tipo_titulo = tp.cd_tipo_titulo
				AND tp.cd_coligada_matriz = c.cd_coligada_matriz
			)
			LEFT JOIN cursos_coligadas cc ON (
				tu.curso = cc.CD_CURSO
				AND tu.cd_coligada = cc.CD_COLIGADA
			)
			LEFT JOIN cursos_mestre cm ON (cc.CD_CURSO = cm.CD_CURSO)
			LEFT JOIN departamentos dp ON (cc.CD_DEPTO = dp.codigo)
			LEFT JOIN fin_config_plano_contas pc ON (
				pc.cd_conta = me.cd_plano_conta
				AND pc.cd_coligada_matriz = c.cd_coligada_matriz
			)
			LEFT JOIN fin_config_centro_custos custo ON (
				custo.cd_centro = me.cd_centro_custo
				AND custo.cd_coligada_matriz = c.cd_coligada_matriz
			)
		WHERE
			1 = 1
                        AND (GET_DESCONTOS (me.cd_mensalidade, :dt_base)) > 0
			AND (
				me.datavencimento >= :dt_inicio
				AND me.datavencimento < :dt_fim
			)
			AND (
				me.situacao NOT IN (4, 5, 7, 8)
				OR DATE_FORMAT(me.datavencimento, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m')
				OR me.tipoparcela = 1
			)	
      
            
            "" .
                ((!empty($arrParametros["":cd_coligada""]))
                   ? ""AND me.cd_coligada IN (:cd_coligada)""
                   : NULL
                )
             . ""
            
             "" .
                ((!empty($arrParametros["":cd_departamento""]))
                   ? ""AND me.depto IN (:cd_departamento)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":id_curso""]))
                   ? ""AND cm.id_curso IN (:id_curso)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":cd_tipo_titulo""]))
                   ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":codigoaluno""]))
                   ? ""AND me.codigoaluno IN (:codigoaluno)""
                   : NULL
                )
             . ""
            
       		GROUP BY

			   me.cd_mensalidade
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda
               )
            )
         )
         ->saveTo($consulta);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
        

         if ($this->arrDadosGerais->arrOpcoes->tp_agrup->me_configuracao == ""agrup_turma"") {
            $consulta->pipe($this->dataStore(""dados_consulta""));

         $consulta->pipe(new Group(array(
            ""by""=>array(
               ""cd_curso"",
               ""cd_turma""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_turma"",
            ""nm_curso"",
            ""vl_liq"",
            ""liq_c_desc"",
            ""vl_n_pg_liq"",
            ""cd_aluno"",
            ""nm_aluno"",
            ""cd_turma"",
            ""cod_total"",
            ""cd_curso"",
            ""valorpg"",
            ""vl_bruto"",
            ""data_venc"",
            ""negoc"",
            ""canc"",
            ""anosem_parc"",
            ""acresc"",
            ""desconto"",
            ""tp_titulo"",
            ""parc"",
            ""parcelas"",
            ""desc_extra"",
            

      
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));
         
            } else {
               $consulta->pipe($this->dataStore(""dados_consulta""));

               $consulta->pipe(new Group(array(
                  ""by""=>array(
                     ""cd_curso""
                  )
               )))
               ->pipe(new OnlyColumn(array(
                  ""cd_turma"",
                  ""nm_curso"",
                  ""vl_liq"",
                  ""liq_c_desc"",
                  ""vl_n_pg_liq"",
                  ""cd_aluno"",
                  ""nm_aluno"",
                  ""cd_turma"",
                  ""cod_total"",
                  ""cd_curso"",
                  ""valorpg"",
                  ""vl_bruto"",
                  ""desc_extra"",
                  ""negoc"",
                  ""canc"",
                  ""dsc_ant_pag"",
                  ""acresc"",
                  ""desconto"",
                  ""val_pg_liq"",
                  ""parc"",
                  ""parcelas""
            
               )))
               ->pipe($this->dataStore(""dados_consulta_agrupado""));
               
            }

         #Totalizador Curso ___________________________//________________________________________
         
         $this->src('unimestre')->query(
            ""
            SELECT c.*, 
         IF(ROUND((c.liq_c_desc - c.val_pg_liq + c.acresc),2) <= 0, '-',
         ROUND((c.liq_c_desc - c.val_pg_liq + c.acresc),2))
         AS vl_n_pg_liq
      FROM
      (
      SELECT
         x.*,
         IF(ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc),
            2
         ) <= 0, '-',
         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc),
            2
         )) AS vl_liq,
         
            IF(ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc - x.dsc_ant_pag),
            2
         ) <= 0, '-',
         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc - x.dsc_ant_pag),
            2
         )) AS liq_c_desc
      FROM
         (
            SELECT
               me.turma as cod_total,
               me.curso AS cd_curso,
               me.turma AS cd_turma,
               me.parcela	AS parc,
               me.codigoaluno AS cd_aluno,
               pe.nm_pessoa AS nm_aluno,
               COUNT(DISTINCT me.codigoaluno) AS t_alu,
               COUNT(me.parcela) AS parcelas,
               CONCAT(cm.DS_CURSO,'(',cm.CD_CURSO,')') AS nm_curso,
               COUNT(DISTINCT me.codigoaluno) AS alu,
                        ROUND(
               SUM(
                  IF(
                     me.tipoparcela <> 1
                     AND me.datavencimento >= :dt_inicio
                     AND me.datavencimento <= :dt_fim,
                     (me.valorbruto + me.valorextra),
                     0
                  )
               ),
               2
         ) AS vl_bruto,
      

         ROUND(
            SUM(
               IF(
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao IN(0, 1, 2, 6, 10),
                  (me.descontoextra),
                  0
               )
            ),
            2
         ) AS desc_extra,

         ROUND(SUM(
               IF(
                  me.situacao = 3
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim 
                  AND me.datapagamento <= :dt_base,
                  (me.valorbruto + me.valorextra),
                  0
               )
               ),2
         ) AS negoc,
      

         ROUND(SUM(
               IF(
                  me.situacao IN(4, 5, 7, 8)
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.datapagamento <= :dt_base,
                     (me.valorbruto + me.valorextra),
                     0
               )
               ), 2
         ) AS canc,

         
         ROUND(
            SUM(
               IF (
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao NOT IN (3, 4, 5, 7, 8),
                  (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                  0
               )
            ),
            2
         ) AS dsc_ant_pag,
         
      
         ROUND(SUM(
               IF( me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     GET_ACRESCIMOS(me.cd_mensalidade, NULL),
                     0
               )
            ),2
         ) AS acresc,
      
         
         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                     0
                  )
               ), 2
            ) AS desconto,

         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base, 
                     (me.valorpago), 0
                  )
               ),2
         ) AS val_pg_liq
         
         
      FROM
         mensalidades me
         INNER JOIN coligadas AS c ON (c.cd_coligada = me.cd_coligada)
         LEFT JOIN turmas tu ON (
            me.anosemestre = tu.anosemestre
            AND me.turma = tu.codigo
         )
         INNER JOIN pessoas pe ON (me.codigoaluno = pe.cd_pessoa)
         INNER JOIN fin_config_tipos_titulo tp ON (
            me.cd_tipo_titulo = tp.cd_tipo_titulo
            AND tp.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN cursos_coligadas cc ON (
            tu.curso = cc.CD_CURSO
            AND tu.cd_coligada = cc.CD_COLIGADA
         )
         LEFT JOIN cursos_mestre cm ON (cc.CD_CURSO = cm.CD_CURSO)
         LEFT JOIN departamentos dp ON (cc.CD_DEPTO = dp.codigo)
         LEFT JOIN fin_config_plano_contas pc ON (
            pc.cd_conta = me.cd_plano_conta
            AND pc.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN fin_config_centro_custos custo ON (
            custo.cd_centro = me.cd_centro_custo
            AND custo.cd_coligada_matriz = c.cd_coligada_matriz
         )
      WHERE
         1 = 1
         AND (GET_DESCONTOS (me.cd_mensalidade, :dt_base)) > 0
         AND (
            me.datavencimento >= :dt_inicio
            AND me.datavencimento <= :dt_fim
         )
         AND me.dataemissao <= :dt_base
         AND (
            me.situacao NOT IN (4, 5, 7, 8)
            OR DATE_FORMAT(me.datavencimento, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m')
            OR me.tipoparcela = 1
            OR me.sn_nfe_gerada = 1
         )			
            
            "" .
                ((!empty($arrParametros["":cd_coligada""]))
                   ? ""AND me.cd_coligada IN (:cd_coligada)""
                   : NULL
                )
             . ""
            
             "" .
                ((!empty($arrParametros["":cd_departamento""]))
                   ? ""AND me.depto IN (:cd_departamento)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":id_curso""]))
                   ? ""AND cm.id_curso IN (:id_curso)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":cd_tipo_titulo""]))
                   ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":codigoaluno""]))
                   ? ""AND me.codigoaluno IN (:codigoaluno)""
                   : NULL
                )
             . ""
            
       		GROUP BY
			   me.curso
	         ) AS x) as c 
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda
                        
               )
            )
         )
         ->saveTo($consulta_tot_curso);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
         $consulta_tot_curso->pipe($this->dataStore(""dados_tot_curso""));

         $consulta_tot_curso->pipe(new Group(array(
            ""by""=>array(
               ""cd_curso""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_turma"",
            ""nm_curso"",
            ""cod_total"",
            ""vl_liq"",
            ""liq_c_desc"",
            ""vl_n_pg_liq"",
            ""cd_aluno"",
            ""cd_turma"",
            ""cod_total"",
            ""cd_curso"",
            ""valorpg"",
            ""vl_bruto"",
            ""desc_extra"",
            ""negoc"",
            ""canc"",
            ""dsc_ant_pag"",
            ""acresc"",
            ""desconto"",
            ""val_pg_liq"",
            ""t_alu"",
            ""parcelas""
      
         )))
         ->pipe($this->dataStore(""dados_consulta_tot_cur_agrupado""));


				require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									

      }

   }
","<?php

use \koolreport\widgets\koolphp\Table;
use \koolreport\processes\Filter;

// path pasta
$path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

// margens
$ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
$ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
$ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
$ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

$sn_geracao = $_POST[""pdf""];

//cabecalho
foreach ($this->dataStore(""dados_cabecalhos"") as $cabecalho) {
    if (
        ($cabecalho[""cd_coligada""] == $this->dataStore(""dados_consulta"")[0][""cd_coligada_cabecalho""]
            && $cabecalho[""cd_relatorio""] == $this->arrDadosGerais->cd_relatorio)
        ||
        ($cabecalho[""cd_coligada""] == 0
            && $cabecalho[""cd_relatorio""] == 0)
    ) {

        $logo = $cabecalho[""ds_link_cdn""];
        break;
    }
}

?>

<html>

<head>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
</head>

<body class=""relatorio"">
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

    <?php
    $tot_alunos = $this->dataStore('dados_tot_curso')->sum(""t_alu"");
    $tot_parcelas = $this->dataStore('dados_tot_curso')->sum(""parcelas"");
    $tot_val_bru = number_format( $this->dataStore('dados_tot_curso')->sum(""vl_bruto""), 2,"","",""."");
    $tot_desconto = number_format( $this->dataStore('dados_tot_curso')->sum(""desconto""), 2,"","",""."");
    
    $count = $this->dataStore('dados_consulta_agrupado')->count();
    $count = $count - 1;

    if ($this->arrDadosGerais->arrOpcoes->tp_agrup->me_configuracao == ""agrup_turma"") {

        foreach ($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao) {

            $dados_pagina = $this->dataStore(""dados_consulta"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )
                ->filter(
                    ""cd_turma"",
                    ""="",
                    $visualizacao[""cd_turma""]
                );

            $dados_total = $this->dataStore(""dados_tot_curso"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )

            ?>

            <style>
                @page {
                    size: landscape;
                    padding-bottom: 2px !important;
                }

                .custom_size {
                    font-size: 11px;
                    font-weight: bold;
                }
            </style>

            <style>
                .size {
                    font-size: 11px !important;

                }
            </style>

            <style>
                .borda {
                    border: 1px solid !important;
                    text-align: center !important;

                }

                table,
                tr,
                td {
                    border: 1px solid #dee2e6 !important;
                    padding: 1.5px !important;
                    margin: 0px !important;
                }

                div,
                h1 {
                    font-size: 16px !important;
                }
            </style>

            <div class=""container"">
                <div class=""conteudo"" style=""
                  padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
                  padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
                  padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
                  padding-right: <?= $ds_margem_direita . 'cm' ?>;
               "">

                    <div style=""display: flex; padding-top:25px;""><img src=""https://www.sinergia.edu.br/wp-content/uploads/2016/05/sinergia-logo.png"">
                    </div>
                    
                    <div style=""text-align: right;>
                    <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'filtro.php')); ?>
                    </div>

                    <div>

                        <h1 style=""margin-bottom: 25px; text-align:center; font-size:18px !important; font-weight:bold; color:#A9A9A9"">
                            <?= $this->arrDadosGerais->nm_relatorio ?>
                        </h1>

                    </div>

                    <div style=""text-align: left; font-weight:bold; margin-bottom:15px;""> <?= $dados_pagina[0]['nm_curso'] ?> </div>

                    <?php
                    // componente responsavel pela criacao da tabela de dados
                    Table::create(array(
                        ""dataSource"" => $dados_pagina,
                        ""grouping"" => array(
                            ""cod_total"" => array(
                                ""calculate"" => array(
                                    ""{somaDesconto}"" => array(""sum"", ""desconto"")
                                   
                                ),

                                ""top"" => ""<td align='center' class='fonte p-2 b'>Código</td>
                                    <td align='center' class='fonte p-2 b'>Aluno</td>
                                    <td align='center' class='fonte p-2 b'>Parcela</td>
                                    <td align='center' class='fonte p-2 b'>Vencimento</td>
                                    <td align='center' class='fonte p-2 b'>Anosemestre</td>
                                    <td align='center' class='fonte p-2 b'>Turma</td>
                                    <td align='center' class='fonte p-2 b'>Tipo de Título</td>
                                    <td align='center' class='fonte p-2 b'>Desc Cond</td>

                                    "",
                                ""bottom"" => ""<td  align='center' class='fonte p-2 b font-weight-bold'>{cod_total}</td>
                                    <td colspan='8' align='right' class='fonte p-2 b'>{somaDesconto}</td>
                 
                                ""
                            ),
                        ),

                        ""showHeader"" => false,
                        ""columns"" => array(
                            ""cd_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""nm_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                                
                            ),
                            ""data_venc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""anosem_parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""cd_turma"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""tp_titulo"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""desconto"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            )

                        ),
                        ""cssClass"" => array(
                            ""table"" => ""table table-striped table-hover"",
                            ""tr"" => """",
                            ""th"" => """",
                            ""td"" => ""p-2"",
                            ""tf"" => ""darker"",
                        ),
                        ""sorting"" => array(
                            ""nm_aluno"" => ""asc""

                        )
                    ));

                    ?>

                    <?php

                    if ($key == $count) {

                    ?>

                        <hr>

                        <div style=""text-align: center; font-size:25px; font-weight:bold; padding-top:20px; padding-bottom:20px; color:#A9A9A9""> TOTAL GERAL </div>

                        <table class=""table table-striped table-hover"">
                            <tbody>
                                <tr>
                                    <td style=""text-align:center; font-weight:bold"">Total de Alunos</td>
                                    <td style=""text-align:center; font-weight:bold"">Total de Parcelas</td>
                                    <td style=""text-align:center; font-weight:bold"">Desc Cond</td>
                                </tr>
                                <tr>
                                    <td style=""text-align:center;""><?php echo $tot_alunos ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_parcelas ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_desconto ?></td>
                                </tr>
                            </tbody>
                        </table>

                    <?php

                         }
                    ?>

                </div>
            </div>
            <div class=""page-break"" style=""page-break-after: always;""></div>
            </div>


        <?php

        }
    } else {

        foreach ($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao) {

            $dados_pagina = $this->dataStore(""dados_consulta"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                );

            $dados_total = $this->dataStore(""dados_tot_curso"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )

        ?>

            <style>
                @page {
                    size: landscape;
                    padding-bottom: 2px !important;
                }

                .custom_size {
                    font-size: 11px;
                    font-weight: bold;
                }
            </style>

            <style>
                .size {
                    font-size: 11px !important;

                }
            </style>

            <style>
                .borda {
                    border: 1px solid !important;
                    text-align: center !important;

                }

                table,
                tr,
                td {
                    border: 1px solid #dee2e6 !important;
                    padding: 1.5px !important;
                    margin: 0px !important;
                }

                div,
                h1 {
                    font-size: 16px !important;
                }
            </style>

            <div class=""container"">
                <div class=""conteudo"" style=""
              padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
              padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
              padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
              padding-right: <?= $ds_margem_direita . 'cm' ?>;
           "">


                    <div style=""display: flex; padding-top:25px;""><img src=""https://www.sinergia.edu.br/wp-content/uploads/2016/05/sinergia-logo.png"">
                    </div>

                    <div>

                        <h1 style=""margin-bottom: 25px; text-align:center; font-size:18px !important; font-weight:bold; color:#A9A9A9"">
                            <?= $this->arrDadosGerais->nm_relatorio ?>
                        </h1>

                    </div>

                    <div style=""text-align: left; font-weight:bold; margin-bottom:15px;""> <?= $dados_pagina[0]['nm_curso'] ?> </div>

                    <?php
                    // componente responsavel pela criacao da tabela de dados
                    Table::create(array(
                        ""dataSource"" => $dados_pagina,
                        ""grouping"" => array(
                            ""cd_curso"" => array(
                                ""calculate"" => array(
                                    ""{somaDesconto}"" => array(""sum"", ""desconto"")
                                   
                                ),

                                ""top"" => ""<td align='center' class='fonte p-2 b'>Código</td>
                                    <td align='center' class='fonte p-2 b'>Aluno</td>
                                    <td align='center' class='fonte p-2 b'>Parcela</td>
                                    <td align='center' class='fonte p-2 b'>Vencimento</td>
                                    <td align='center' class='fonte p-2 b'>Anosemestre</td>
                                    <td align='center' class='fonte p-2 b'>Turma</td>
                                    <td align='center' class='fonte p-2 b'>Tipo de Título</td>
                                    <td align='center' class='fonte p-2 b'>Desc Cond</td>

                                    "",
                                ""bottom"" => ""<td  align='center' class='fonte p-2 b font-weight-bold'>Total do Curso:</td>
                                    <td colspan='8' align='right' class='fonte p-2 b'>{somaDesconto}</td>
                 
                                ""
                            ),
                        ),

                        ""showHeader"" => false,
                        ""columns"" => array(
                            ""cd_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""nm_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                                
                            ),
                            ""data_venc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""anosem_parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""cd_turma"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""tp_titulo"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""desconto"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            )

                        ),
                        ""cssClass"" => array(
                            ""table"" => ""table table-striped table-hover"",
                            ""tr"" => """",
                            ""th"" => """",
                            ""td"" => ""p-2"",
                            ""tf"" => ""darker"",
                        ),
                        ""sorting"" => array(
                            ""nm_aluno"" => ""asc""

                        )
                    ));

                    ?>

                    <?php

                    if ($key == $count) {

                    ?>

                        <hr>

                        <div style=""text-align: center; font-size:25px; font-weight:bold; padding-top:20px; padding-bottom:20px; color:#A9A9A9""> TOTAL GERAL </div>

                        <table class=""table table-striped table-hover"">
                            <tbody>
                                <tr>
                                    <td style=""text-align:center; font-weight:bold"">Total de Alunos</td>
                                    <td style=""text-align:center; font-weight:bold"">Total de Parcelas</td>
                                    <td style=""text-align:center; font-weight:bold"">Desc Cond</td>
                                </tr>
                                <tr>
                                    <td style=""text-align:center;""><?php echo $tot_alunos ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_parcelas ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_desconto ?></td>
                                </tr>
                            </tbody>
                        </table>

                    <?php

                      }
                    ?>

                </div>
                <div class=""page-break"" style=""page-break-after: always;""></div>
            </div>


    <?php

        }
     }
    ?>

</body>

</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[
{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data inicial"",
		""ds_campo"": ""dt_inicio""
	},
 
	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data final"",
		""ds_campo"": ""dt_fim""
	},

	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data Base"",
		""ds_campo"": ""dt_base""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Inicial"",
		""ds_campo"": ""parc_ini""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Final"",
		""ds_campo"": ""parc_fim""
	},
 
	{
		""tipo"": ""uni-select-coligada-filha"",
		""obrigatorio"": false,
		""label"": ""Unidade"",
		""ds_campo"": ""cd_coligada""
	},
	{
		""tipo"": ""uni-select-departamento"",
		""obrigatorio"": false,
		""label"": ""Departamento"",
		""ds_campo"": ""cd_departamento""
	},
	{
		""tipo"": ""uni-select-curso"",
		""obrigatorio"": false,
		""label"": ""Curso"",
		""ds_campo"": ""id_curso""
	},
	{
		""tipo"": ""uni-busca-turma"",
		""obrigatorio"": false,
		""label"": ""Turma"",
		""ds_campo"": ""cd_turma""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Código aluno"",
		""ds_campo"": ""codigoaluno""
	},
	{
		""tipo"": ""campo-dinamico"",
		""obrigatorio"": false,
		""label"": ""Tipo de Título"",
		""ds_chave"": ""busca-tipo-mensalidade"",
		""ds_campo"": ""cd_tipo_titulo""
	}
]
		",114,"INSERT IGNORE INTO rgo_opcoes_tipos (
								cd_opcao_tipo,
								ds_opcao_tipo,
								ds_tag_opcao,
								dt_base
						)
				VALUES (
								NULL,""Tipo Agrupamento"",""tp_agrup"",""2022-12-10 21:00:11"")","INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,11,1,""4.0 Descontos Condicionais por Aluno"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,2, NULL, NULL,""rel_det_cond"",""2023-12-13 15:53:40"",0, NULL)","INSERT IGNORE INTO rgo_opcoes (cd_opcao, cd_relatorio,cd_opcao_tipo,sn_padrao,sn_ativo,ds_opcao,me_configuracao,ds_chave,dt_base)
VALUES (NULL,NULL,NULL,1,1,""Agrupamento por Turma"",""agrup_turma"",""rel_cond_turma"",""2022-12-10 21:02:26""
 ); 
INSERT IGNORE INTO rgo_opcoes (cd_opcao, cd_relatorio,cd_opcao_tipo,sn_padrao,sn_ativo,ds_opcao,me_configuracao,ds_chave,dt_base)
VALUES (NULL,NULL,NULL,0,1,""Agrupamento por Curso"",""agrup_curso"",""rel_cond_curso"",""2022-12-11 13:04:01""
 )",,475.0,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Gerenciais por Vencimento,5.0 Relação de Parcelas Negociadas,"<?php

   $PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
   require_once( $PARMS['PASTA'] . 'nucleo.php' );
   require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
   header ('Content-type: text/html; charset=UTF-8');

   use \koolreport\processes\ColumnMeta;
   use \koolreport\processes\Group;
   use \koolreport\processes\OnlyColumn;

   // classe padrao do relatorio
   class Relatorio extends \koolreport\KoolReport {
      use \koolreport\bootstrap4\Theme;
      use \koolreport\inputs\Bindable;
      use \koolreport\inputs\POSTBinding;
      // use \koolreport\export\Exportable;
      use \koolreport\cloudexport\Exportable;
  
      const C_SN_CLOUD_EXPORT = true;

      public $path_include;
      public $arrDadosFiltro;
      public $arrDadosGerais;

      public function __construct() {

         try {

            $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
            parent::__construct();

         } catch (Exception $e) {

            echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
            die;

         }

      }

      // inicializacao dos filtros
      function defaultParamValues() {
         return array(
            ""filtros""=>'{}',
            ""gerais""=>'{}'
         );
      }

      // resgate do $_POST para vinculo com os parametros
      function bindParamsToInputs() {
         return array(
            ""filtros"",
            ""gerais""
         );
      }

      // funcao responsavel por realizar a conexao com o banco de dados
      // e resgate dos dados tratamento dos dados do $_POST
      public function settings() {

         Nucleo::import( 'relatorios.RelatoriosConexao' );
         $objRelatoriosConexao = new RelatoriosConexao;

         return $objRelatoriosConexao->settings();

      }

      // funcao responsavel por manter as consultas a serem executadas pelo relatorio
      // e geracao dos array de dados para uso posterior na visualizacao
      public function setup() {

         require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

         if (isset($_POST['filtros'])) {
            $this->arrDadosFiltro = json_decode($_POST['filtros']);
         } else {
            $this->arrDadosFiltro = json_decode($_POST);
         }

         if (isset($_POST['gerais'])) {
            $this->arrDadosGerais = json_decode($_POST['gerais']);
         }

         $arrParametros = [];

         foreach ($this->arrDadosFiltro as $filtro => $valor) {
            if (!empty($valor->ds_valor)) {
                $arrParametros["":"" . $filtro] = $valor->ds_valor;
            }
         }

         $this->src('unimestre')->query(
            ""
         SELECT
               CONCAT('Total Turma - ', me.turma)  as cod_total,
               me.curso AS cd_curso,
               me.turma AS cd_turma,
               me.parcela	AS parc,
               COUNT(me.parcela) AS parcelas,
               me.codigoaluno AS cd_aluno,
               pe.nm_pessoa AS nm_aluno,
               CONCAT(cm.DS_CURSO,'(',cm.CD_CURSO,')') AS nm_curso,
               COUNT(DISTINCT me.codigoaluno) AS alu,
               tp.ds_tipo_titulo AS tp_titulo,
               me.anosemestre AS anosem_parc,
               DATE_FORMAT(me.datavencimento,'%d/%m/%Y') AS data_venc,
            ROUND(SUM(
               IF(
                  me.situacao = 3
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim 
                  AND me.datapagamento <= :dt_base,
                  (me.valorbruto + me.valorextra),
                  0
               )
               ),2
         ) AS negoc
			
		FROM
			mensalidades me
			INNER JOIN coligadas AS c ON (c.cd_coligada = me.cd_coligada)
			LEFT JOIN turmas tu ON (
				me.anosemestre = tu.anosemestre
				AND me.turma = tu.codigo
			)
			INNER JOIN pessoas pe ON (me.codigoaluno = pe.cd_pessoa)
			INNER JOIN fin_config_tipos_titulo tp ON (
				me.cd_tipo_titulo = tp.cd_tipo_titulo
				AND tp.cd_coligada_matriz = c.cd_coligada_matriz
			)
			LEFT JOIN cursos_coligadas cc ON (
				tu.curso = cc.CD_CURSO
				AND tu.cd_coligada = cc.CD_COLIGADA
			)
			LEFT JOIN cursos_mestre cm ON (cc.CD_CURSO = cm.CD_CURSO)
			LEFT JOIN departamentos dp ON (cc.CD_DEPTO = dp.codigo)
			LEFT JOIN fin_config_plano_contas pc ON (
				pc.cd_conta = me.cd_plano_conta
				AND pc.cd_coligada_matriz = c.cd_coligada_matriz
			)
			LEFT JOIN fin_config_centro_custos custo ON (
				custo.cd_centro = me.cd_centro_custo
				AND custo.cd_coligada_matriz = c.cd_coligada_matriz
			)
		WHERE
			1 = 1
         AND me.situacao = 3
         AND me.datapagamento <= :dt_base
			AND (
				me.datavencimento >= :dt_inicio
				AND me.datavencimento < :dt_fim
			)
			AND (
				me.situacao NOT IN (4, 5, 7, 8)
				OR DATE_FORMAT(me.datavencimento, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m')
				OR me.tipoparcela = 1
			)	
      
            
            "" .
                ((!empty($arrParametros["":cd_coligada""]))
                   ? ""AND me.cd_coligada IN (:cd_coligada)""
                   : NULL
                )
             . ""
            
             "" .
                ((!empty($arrParametros["":cd_departamento""]))
                   ? ""AND me.depto IN (:cd_departamento)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":id_curso""]))
                   ? ""AND cm.id_curso IN (:id_curso)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":cd_tipo_titulo""]))
                   ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":codigoaluno""]))
                   ? ""AND me.codigoaluno IN (:codigoaluno)""
                   : NULL
                )
             . ""
            
       		GROUP BY

			   me.cd_mensalidade
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda
               )
            )
         )
         ->saveTo($consulta);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
        

         if ($this->arrDadosGerais->arrOpcoes->tp_agrup->me_configuracao == ""agrup_turma"") {
            $consulta->pipe($this->dataStore(""dados_consulta""));

         $consulta->pipe(new Group(array(
            ""by""=>array(
               ""cd_curso"",
               ""cd_turma""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_turma"",
            ""nm_curso"",
            ""vl_liq"",
            ""liq_c_desc"",
            ""vl_n_pg_liq"",
            ""cd_aluno"",
            ""nm_aluno"",
            ""cd_turma"",
            ""cod_total"",
            ""cd_curso"",
            ""valorpg"",
            ""vl_bruto"",
            ""data_venc"",
            ""negoc"",
            ""canc"",
            ""anosem_parc"",
            ""acresc"",
            ""desconto"",
            ""tp_titulo"",
            ""parc"",
            ""parcelas"",
            ""desc_extra"",
            

      
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));
         
            } else {
               $consulta->pipe($this->dataStore(""dados_consulta""));

               $consulta->pipe(new Group(array(
                  ""by""=>array(
                     ""cd_curso""
                  )
               )))
               ->pipe(new OnlyColumn(array(
                  ""cd_turma"",
                  ""nm_curso"",
                  ""vl_liq"",
                  ""liq_c_desc"",
                  ""vl_n_pg_liq"",
                  ""cd_aluno"",
                  ""nm_aluno"",
                  ""cd_turma"",
                  ""cod_total"",
                  ""cd_curso"",
                  ""valorpg"",
                  ""vl_bruto"",
                  ""desc_extra"",
                  ""negoc"",
                  ""canc"",
                  ""dsc_ant_pag"",
                  ""acresc"",
                  ""desconto"",
                  ""val_pg_liq"",
                  ""parc"",
                  ""parcelas""
            
               )))
               ->pipe($this->dataStore(""dados_consulta_agrupado""));
               
            }

         #Totalizador Curso ___________________________//________________________________________
         
         $this->src('unimestre')->query(
            ""
            SELECT c.*, 
         IF(ROUND((c.liq_c_desc - c.val_pg_liq + c.acresc),2) <= 0, '-',
         ROUND((c.liq_c_desc - c.val_pg_liq + c.acresc),2))
         AS vl_n_pg_liq
      FROM
      (
      SELECT
         x.*,
         IF(ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc),
            2
         ) <= 0, '-',
         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc),
            2
         )) AS vl_liq,
         
            IF(ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc - x.dsc_ant_pag),
            2
         ) <= 0, '-',
         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc - x.dsc_ant_pag),
            2
         )) AS liq_c_desc
      FROM
         (
            SELECT
               me.turma as cod_total,
               me.curso AS cd_curso,
               me.turma AS cd_turma,
               me.parcela	AS parc,
               me.codigoaluno AS cd_aluno,
               pe.nm_pessoa AS nm_aluno,
               COUNT(DISTINCT me.codigoaluno) AS t_alu,
               COUNT(me.parcela) AS parcelas,
               CONCAT(cm.DS_CURSO,'(',cm.CD_CURSO,')') AS nm_curso,
               COUNT(DISTINCT me.codigoaluno) AS alu,
                        ROUND(
               SUM(
                  IF(
                     me.tipoparcela <> 1
                     AND me.datavencimento >= :dt_inicio
                     AND me.datavencimento <= :dt_fim,
                     (me.valorbruto + me.valorextra),
                     0
                  )
               ),
               2
         ) AS vl_bruto,
      

         ROUND(
            SUM(
               IF(
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao IN(0, 1, 2, 6, 10),
                  (me.descontoextra),
                  0
               )
            ),
            2
         ) AS desc_extra,

         ROUND(SUM(
               IF(
                  me.situacao = 3
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim 
                  AND me.datapagamento <= :dt_base,
                  (me.valorbruto + me.valorextra),
                  0
               )
               ),2
         ) AS negoc,
      

         ROUND(SUM(
               IF(
                  me.situacao IN(4, 5, 7, 8)
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.datapagamento <= :dt_base,
                     (me.valorbruto + me.valorextra),
                     0
               )
               ), 2
         ) AS canc,

         
         ROUND(
            SUM(
               IF (
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao NOT IN (3, 4, 5, 7, 8),
                  (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                  0
               )
            ),
            2
         ) AS dsc_ant_pag,
         
      
         ROUND(SUM(
               IF( me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     GET_ACRESCIMOS(me.cd_mensalidade, NULL),
                     0
               )
            ),2
         ) AS acresc,
      
         
         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                     0
                  )
               ), 2
            ) AS desconto,

         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base, 
                     (me.valorpago), 0
                  )
               ),2
         ) AS val_pg_liq
         
         
      FROM
         mensalidades me
         INNER JOIN coligadas AS c ON (c.cd_coligada = me.cd_coligada)
         LEFT JOIN turmas tu ON (
            me.anosemestre = tu.anosemestre
            AND me.turma = tu.codigo
         )
         INNER JOIN pessoas pe ON (me.codigoaluno = pe.cd_pessoa)
         INNER JOIN fin_config_tipos_titulo tp ON (
            me.cd_tipo_titulo = tp.cd_tipo_titulo
            AND tp.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN cursos_coligadas cc ON (
            tu.curso = cc.CD_CURSO
            AND tu.cd_coligada = cc.CD_COLIGADA
         )
         LEFT JOIN cursos_mestre cm ON (cc.CD_CURSO = cm.CD_CURSO)
         LEFT JOIN departamentos dp ON (cc.CD_DEPTO = dp.codigo)
         LEFT JOIN fin_config_plano_contas pc ON (
            pc.cd_conta = me.cd_plano_conta
            AND pc.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN fin_config_centro_custos custo ON (
            custo.cd_centro = me.cd_centro_custo
            AND custo.cd_coligada_matriz = c.cd_coligada_matriz
         )
      WHERE
         1 = 1
         AND me.situacao = 3
         AND me.datapagamento <= :dt_base
         AND (
            me.datavencimento >= :dt_inicio
            AND me.datavencimento <= :dt_fim
         )
         AND me.dataemissao <= :dt_base
         AND (
            me.situacao NOT IN (4, 5, 7, 8)
            OR DATE_FORMAT(me.datavencimento, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m')
            OR me.tipoparcela = 1
            OR me.sn_nfe_gerada = 1
         )			
            
            "" .
                ((!empty($arrParametros["":cd_coligada""]))
                   ? ""AND me.cd_coligada IN (:cd_coligada)""
                   : NULL
                )
             . ""
            
             "" .
                ((!empty($arrParametros["":cd_departamento""]))
                   ? ""AND me.depto IN (:cd_departamento)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":id_curso""]))
                   ? ""AND cm.id_curso IN (:id_curso)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":cd_tipo_titulo""]))
                   ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":codigoaluno""]))
                   ? ""AND me.codigoaluno IN (:codigoaluno)""
                   : NULL
                )
             . ""
            
       		GROUP BY
			   me.curso
	         ) AS x) as c 
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda
                        
               )
            )
         )
         ->saveTo($consulta_tot_curso);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
         $consulta_tot_curso->pipe($this->dataStore(""dados_tot_curso""));

         $consulta_tot_curso->pipe(new Group(array(
            ""by""=>array(
               ""cd_curso""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_turma"",
            ""nm_curso"",
            ""cod_total"",
            ""vl_liq"",
            ""liq_c_desc"",
            ""vl_n_pg_liq"",
            ""cd_aluno"",
            ""cd_turma"",
            ""cod_total"",
            ""cd_curso"",
            ""valorpg"",
            ""vl_bruto"",
            ""desc_extra"",
            ""negoc"",
            ""canc"",
            ""dsc_ant_pag"",
            ""acresc"",
            ""desconto"",
            ""val_pg_liq"",
            ""t_alu"",
            ""parcelas""
      
         )))
         ->pipe($this->dataStore(""dados_consulta_tot_cur_agrupado""));


				require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									

      }

   }
","<?php

use \koolreport\widgets\koolphp\Table;
use \koolreport\processes\Filter;

// path pasta
$path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

// margens
$ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
$ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
$ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
$ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

$sn_geracao = $_POST[""pdf""];

//cabecalho
foreach ($this->dataStore(""dados_cabecalhos"") as $cabecalho) {
    if (
        ($cabecalho[""cd_coligada""] == $this->dataStore(""dados_consulta"")[0][""cd_coligada_cabecalho""]
            && $cabecalho[""cd_relatorio""] == $this->arrDadosGerais->cd_relatorio)
        ||
        ($cabecalho[""cd_coligada""] == 0
            && $cabecalho[""cd_relatorio""] == 0)
    ) {

        $logo = $cabecalho[""ds_link_cdn""];
        break;
    }
}

?>

<html>

<head>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
</head>

<body class=""relatorio"">
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

    <?php
    $tot_alunos = $this->dataStore('dados_tot_curso')->sum(""t_alu"");
    $tot_parcelas = $this->dataStore('dados_tot_curso')->sum(""parcelas"");
    $tot_val_bru = number_format( $this->dataStore('dados_tot_curso')->sum(""vl_bruto""), 2,"","",""."");
    $tot_negoc = number_format( $this->dataStore('dados_tot_curso')->sum(""negoc""), 2,"","",""."");
    
    $count = $this->dataStore('dados_consulta_agrupado')->count();
    $count = $count - 1;

    if ($this->arrDadosGerais->arrOpcoes->tp_agrup->me_configuracao == ""agrup_turma"") {

        foreach ($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao) {

            $dados_pagina = $this->dataStore(""dados_consulta"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )
                ->filter(
                    ""cd_turma"",
                    ""="",
                    $visualizacao[""cd_turma""]
                );

            $dados_total = $this->dataStore(""dados_tot_curso"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )

            ?>

            <style>
                @page {
                    size: landscape;
                    padding-bottom: 2px !important;
                }

                .custom_size {
                    font-size: 11px;
                    font-weight: bold;
                }
            </style>

            <style>
                .size {
                    font-size: 11px !important;

                }
            </style>

            <style>
                .borda {
                    border: 1px solid !important;
                    text-align: center !important;

                }

                table,
                tr,
                td {
                    border: 1px solid #dee2e6 !important;
                    padding: 1.5px !important;
                    margin: 0px !important;
                }

                div,
                h1 {
                    font-size: 16px !important;
                }
            </style>

            <div class=""container"">
                <div class=""conteudo"" style=""
                  padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
                  padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
                  padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
                  padding-right: <?= $ds_margem_direita . 'cm' ?>;
               "">

                    <div style=""display: flex; padding-top:25px;""><img src=""https://www.sinergia.edu.br/wp-content/uploads/2016/05/sinergia-logo.png"">
                    </div>
                    
                    <div style=""text-align: right;>
                    <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'filtro.php')); ?>
                    </div>

                    <div>

                        <h1 style=""margin-bottom: 25px; text-align:center; font-size:18px !important; font-weight:bold; color:#A9A9A9"">
                            <?= $this->arrDadosGerais->nm_relatorio ?>
                        </h1>

                    </div>

                    <div style=""text-align: left; font-weight:bold; margin-bottom:15px;""> <?= $dados_pagina[0]['nm_curso'] ?> </div>

                    <?php
                    // componente responsavel pela criacao da tabela de dados
                    Table::create(array(
                        ""dataSource"" => $dados_pagina,
                        ""grouping"" => array(
                            ""cod_total"" => array(
                                ""calculate"" => array(
                                    ""{somaNegoc}"" => array(""sum"", ""negoc"")
                                   
                                ),

                                ""top"" => ""<td align='center' class='fonte p-2 b'>Código</td>
                                    <td align='center' class='fonte p-2 b'>Aluno</td>
                                    <td align='center' class='fonte p-2 b'>Parcela</td>
                                    <td align='center' class='fonte p-2 b'>Vencimento</td>
                                    <td align='center' class='fonte p-2 b'>Anosemestre</td>
                                    <td align='center' class='fonte p-2 b'>Turma</td>
                                    <td align='center' class='fonte p-2 b'>Tipo de Título</td>
                                    <td align='center' class='fonte p-2 b'>Men Negoc</td>

                                    "",
                                ""bottom"" => ""<td  align='center' class='fonte p-2 b font-weight-bold'>{cod_total}</td>
                                    <td colspan='8' align='right' class='fonte p-2 b'>{somaNegoc}</td>
                 
                                ""
                            ),
                        ),

                        ""showHeader"" => false,
                        ""columns"" => array(
                            ""cd_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""nm_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                                
                            ),
                            ""data_venc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""anosem_parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""cd_turma"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""tp_titulo"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""negoc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            )

                        ),
                        ""cssClass"" => array(
                            ""table"" => ""table table-striped table-hover"",
                            ""tr"" => """",
                            ""th"" => """",
                            ""td"" => ""p-2"",
                            ""tf"" => ""darker"",
                        ),
                        ""sorting"" => array(
                            ""nm_aluno"" => ""asc""

                        )
                    ));

                    ?>

                    <?php

                    if ($key == $count) {

                    ?>

                        <hr>

                        <div style=""text-align: center; font-size:25px; font-weight:bold; padding-top:20px; padding-bottom:20px; color:#A9A9A9""> TOTAL GERAL </div>

                        <table class=""table table-striped table-hover"">
                            <tbody>
                                <tr>
                                    <td style=""text-align:center; font-weight:bold"">Total de Alunos</td>
                                    <td style=""text-align:center; font-weight:bold"">Total de Parcelas</td>
                                    <td style=""text-align:center; font-weight:bold"">Men Negoc</td>
                                </tr>
                                <tr>
                                    <td style=""text-align:center;""><?php echo $tot_alunos ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_parcelas ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_negoc ?></td>
                                </tr>
                            </tbody>
                        </table>

                    <?php

                         }
                    ?>

                </div>
            </div>
            <div class=""page-break"" style=""page-break-after: always;""></div>
            </div>


        <?php

        }
    } else {

        foreach ($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao) {

            $dados_pagina = $this->dataStore(""dados_consulta"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                );

            $dados_total = $this->dataStore(""dados_tot_curso"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )

        ?>

            <style>
                @page {
                    size: landscape;
                    padding-bottom: 2px !important;
                }

                .custom_size {
                    font-size: 11px;
                    font-weight: bold;
                }
            </style>

            <style>
                .size {
                    font-size: 11px !important;

                }
            </style>

            <style>
                .borda {
                    border: 1px solid !important;
                    text-align: center !important;

                }

                table,
                tr,
                td {
                    border: 1px solid #dee2e6 !important;
                    padding: 1.5px !important;
                    margin: 0px !important;
                }

                div,
                h1 {
                    font-size: 16px !important;
                }
            </style>

            <div class=""container"">
                <div class=""conteudo"" style=""
              padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
              padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
              padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
              padding-right: <?= $ds_margem_direita . 'cm' ?>;
           "">


                    <div style=""display: flex; padding-top:25px;""><img src=""https://www.sinergia.edu.br/wp-content/uploads/2016/05/sinergia-logo.png"">
                    </div>
                    
                    <div style=""text-align: right;>
                    <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'filtro.php')); ?>
                    </div>

                    <div>

                        <h1 style=""margin-bottom: 25px; text-align:center; font-size:18px !important; font-weight:bold; color:#A9A9A9"">
                            <?= $this->arrDadosGerais->nm_relatorio ?>
                        </h1>

                    </div>

                    <div style=""text-align: left; font-weight:bold; margin-bottom:15px;""> <?= $dados_pagina[0]['nm_curso'] ?> </div>

                    <?php
                    // componente responsavel pela criacao da tabela de dados
                    Table::create(array(
                        ""dataSource"" => $dados_pagina,
                        ""grouping"" => array(
                            ""cd_curso"" => array(
                                ""calculate"" => array(
                                    ""{somaNegoc}"" => array(""sum"", ""negoc"")
                                   
                                ),

                                ""top"" => ""<td align='center' class='fonte p-2 b'>Código</td>
                                    <td align='center' class='fonte p-2 b'>Aluno</td>
                                    <td align='center' class='fonte p-2 b'>Parcela</td>
                                    <td align='center' class='fonte p-2 b'>Vencimento</td>
                                    <td align='center' class='fonte p-2 b'>Anosemestre</td>
                                    <td align='center' class='fonte p-2 b'>Turma</td>
                                    <td align='center' class='fonte p-2 b'>Tipo de Título</td>
                                    <td align='center' class='fonte p-2 b'>Men Negoc</td>

                                    "",
                                ""bottom"" => ""<td  align='center' class='fonte p-2 b font-weight-bold'>Total do Curso:</td>
                                    <td colspan='8' align='right' class='fonte p-2 b'>{somaNegoc}</td>
                 
                                ""
                            ),
                        ),

                        ""showHeader"" => false,
                        ""columns"" => array(
                            ""cd_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""nm_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                                
                            ),
                            ""data_venc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""anosem_parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""cd_turma"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""tp_titulo"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""negoc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            )

                        ),
                        ""cssClass"" => array(
                            ""table"" => ""table table-striped table-hover"",
                            ""tr"" => """",
                            ""th"" => """",
                            ""td"" => ""p-2"",
                            ""tf"" => ""darker"",
                        ),
                        ""sorting"" => array(
                            ""nm_aluno"" => ""asc""

                        )
                    ));

                    ?>

                    <?php

                    if ($key == $count) {

                    ?>

                        <hr>

                        <div style=""text-align: center; font-size:25px; font-weight:bold; padding-top:20px; padding-bottom:20px; color:#A9A9A9""> TOTAL GERAL </div>

                        <table class=""table table-striped table-hover"">
                            <tbody>
                                <tr>
                                    <td style=""text-align:center; font-weight:bold"">Total de Alunos</td>
                                    <td style=""text-align:center; font-weight:bold"">Total de Parcelas</td>
                                    <td style=""text-align:center; font-weight:bold"">Men Negoc</td>
                                </tr>
                                <tr>
                                    <td style=""text-align:center;""><?php echo $tot_alunos ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_parcelas ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_negoc ?></td>
                                </tr>
                            </tbody>
                        </table>

                    <?php

                      }
                    ?>

                </div>
                <div class=""page-break"" style=""page-break-after: always;""></div>
            </div>


    <?php

        }
     }
    ?>

</body>

</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[
{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data inicial"",
		""ds_campo"": ""dt_inicio""
	},
 
	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data final"",
		""ds_campo"": ""dt_fim""
	},

	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data Base"",
		""ds_campo"": ""dt_base""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Inicial"",
		""ds_campo"": ""parc_ini""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Final"",
		""ds_campo"": ""parc_fim""
	},
 
	{
		""tipo"": ""uni-select-coligada-filha"",
		""obrigatorio"": false,
		""label"": ""Unidade"",
		""ds_campo"": ""cd_coligada""
	},
	{
		""tipo"": ""uni-select-departamento"",
		""obrigatorio"": false,
		""label"": ""Departamento"",
		""ds_campo"": ""cd_departamento""
	},
	{
		""tipo"": ""uni-select-curso"",
		""obrigatorio"": false,
		""label"": ""Curso"",
		""ds_campo"": ""id_curso""
	},
	{
		""tipo"": ""uni-busca-turma"",
		""obrigatorio"": false,
		""label"": ""Turma"",
		""ds_campo"": ""cd_turma""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Código aluno"",
		""ds_campo"": ""codigoaluno""
	},
	{
		""tipo"": ""campo-dinamico"",
		""obrigatorio"": false,
		""label"": ""Tipo de Título"",
		""ds_chave"": ""busca-tipo-mensalidade"",
		""ds_campo"": ""cd_tipo_titulo""
	}
]
		",115,"INSERT IGNORE INTO rgo_opcoes_tipos (
								cd_opcao_tipo,
								ds_opcao_tipo,
								ds_tag_opcao,
								dt_base
						)
				VALUES (
								NULL,""Tipo Agrupamento"",""tp_agrup"",""2022-12-10 21:00:11"")","INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,11,1,""5.0 Relação de Parcelas Negociadas"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,2, NULL, NULL,""rel_parc_neg"",""2023-12-13 15:53:40"",0, NULL)","INSERT IGNORE INTO rgo_opcoes (cd_opcao, cd_relatorio,cd_opcao_tipo,sn_padrao,sn_ativo,ds_opcao,me_configuracao,ds_chave,dt_base)
VALUES (NULL,NULL,NULL,1,1,""Agrupamento por Turma"",""agrup_turma"",""rel_parc_negoc_turma"",""2022-12-10 21:02:26""
 ); 
INSERT IGNORE INTO rgo_opcoes (cd_opcao, cd_relatorio,cd_opcao_tipo,sn_padrao,sn_ativo,ds_opcao,me_configuracao,ds_chave,dt_base)
VALUES (NULL,NULL,NULL,0,1,""Agrupamento por Curso"",""agrup_curso"",""rel_parc_negoc_curso"",""2022-12-11 13:04:01""
 )",,487.0,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Gerenciais por Vencimento,6.0 Relação de Parcelas Canceladas,"<?php

   $PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
   require_once( $PARMS['PASTA'] . 'nucleo.php' );
   require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
   header ('Content-type: text/html; charset=UTF-8');

   use \koolreport\processes\ColumnMeta;
   use \koolreport\processes\Group;
   use \koolreport\processes\OnlyColumn;

   // classe padrao do relatorio
   class Relatorio extends \koolreport\KoolReport {
      use \koolreport\bootstrap4\Theme;
      use \koolreport\inputs\Bindable;
      use \koolreport\inputs\POSTBinding;
      // use \koolreport\export\Exportable;
      use \koolreport\cloudexport\Exportable;
  
      const C_SN_CLOUD_EXPORT = true;

      public $path_include;
      public $arrDadosFiltro;
      public $arrDadosGerais;

      public function __construct() {

         try {

            $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
            parent::__construct();

         } catch (Exception $e) {

            echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
            die;

         }

      }

      // inicializacao dos filtros
      function defaultParamValues() {
         return array(
            ""filtros""=>'{}',
            ""gerais""=>'{}'
         );
      }

      // resgate do $_POST para vinculo com os parametros
      function bindParamsToInputs() {
         return array(
            ""filtros"",
            ""gerais""
         );
      }

      // funcao responsavel por realizar a conexao com o banco de dados
      // e resgate dos dados tratamento dos dados do $_POST
      public function settings() {

         Nucleo::import( 'relatorios.RelatoriosConexao' );
         $objRelatoriosConexao = new RelatoriosConexao;

         return $objRelatoriosConexao->settings();

      }

      // funcao responsavel por manter as consultas a serem executadas pelo relatorio
      // e geracao dos array de dados para uso posterior na visualizacao
      public function setup() {

         require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

         if (isset($_POST['filtros'])) {
            $this->arrDadosFiltro = json_decode($_POST['filtros']);
         } else {
            $this->arrDadosFiltro = json_decode($_POST);
         }

         if (isset($_POST['gerais'])) {
            $this->arrDadosGerais = json_decode($_POST['gerais']);
         }

         $arrParametros = [];

         foreach ($this->arrDadosFiltro as $filtro => $valor) {
            if (!empty($valor->ds_valor)) {
                $arrParametros["":"" . $filtro] = $valor->ds_valor;
            }
         }

         $this->src('unimestre')->query(
            ""
         SELECT
               CONCAT('Total Turma - ', me.turma)  as cod_total,
               me.curso AS cd_curso,
               me.turma AS cd_turma,
               me.parcela	AS parc,
               COUNT(me.parcela) AS parcelas,
               me.codigoaluno AS cd_aluno,
               pe.nm_pessoa AS nm_aluno,
               CONCAT(cm.DS_CURSO,'(',cm.CD_CURSO,')') AS nm_curso,
               COUNT(DISTINCT me.codigoaluno) AS alu,
               tp.ds_tipo_titulo AS tp_titulo,
               me.anosemestre AS anosem_parc,
               DATE_FORMAT(me.datavencimento,'%d/%m/%Y') AS data_venc,
            
         ROUND(SUM(
               IF(
                  me.situacao IN(4, 5, 7, 8)
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.datapagamento <= :dt_base,
                     (me.valorbruto + me.valorextra),
                     0
               )
               ), 2
         ) AS canc
			
		FROM
			mensalidades me
			INNER JOIN coligadas AS c ON (c.cd_coligada = me.cd_coligada)
			LEFT JOIN turmas tu ON (
				me.anosemestre = tu.anosemestre
				AND me.turma = tu.codigo
			)
			INNER JOIN pessoas pe ON (me.codigoaluno = pe.cd_pessoa)
			INNER JOIN fin_config_tipos_titulo tp ON (
				me.cd_tipo_titulo = tp.cd_tipo_titulo
				AND tp.cd_coligada_matriz = c.cd_coligada_matriz
			)
			LEFT JOIN cursos_coligadas cc ON (
				tu.curso = cc.CD_CURSO
				AND tu.cd_coligada = cc.CD_COLIGADA
			)
			LEFT JOIN cursos_mestre cm ON (cc.CD_CURSO = cm.CD_CURSO)
			LEFT JOIN departamentos dp ON (cc.CD_DEPTO = dp.codigo)
			LEFT JOIN fin_config_plano_contas pc ON (
				pc.cd_conta = me.cd_plano_conta
				AND pc.cd_coligada_matriz = c.cd_coligada_matriz
			)
			LEFT JOIN fin_config_centro_custos custo ON (
				custo.cd_centro = me.cd_centro_custo
				AND custo.cd_coligada_matriz = c.cd_coligada_matriz
			)
		WHERE
			1 = 1
         AND me.situacao IN(4, 5, 7, 8)
         AND me.datapagamento <= :dt_base
			AND (
				me.datavencimento >= :dt_inicio
				AND me.datavencimento < :dt_fim
			)
			AND (
				me.situacao NOT IN (4, 5, 7, 8)
				OR DATE_FORMAT(me.datavencimento, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m')
				OR me.tipoparcela = 1
			)	
      
            
            "" .
                ((!empty($arrParametros["":cd_coligada""]))
                   ? ""AND me.cd_coligada IN (:cd_coligada)""
                   : NULL
                )
             . ""
            
             "" .
                ((!empty($arrParametros["":cd_departamento""]))
                   ? ""AND me.depto IN (:cd_departamento)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":id_curso""]))
                   ? ""AND cm.id_curso IN (:id_curso)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":cd_tipo_titulo""]))
                   ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":codigoaluno""]))
                   ? ""AND me.codigoaluno IN (:codigoaluno)""
                   : NULL
                )
             . ""
            
       		GROUP BY

			   me.cd_mensalidade
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda
               )
            )
         )
         ->saveTo($consulta);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
        

         if ($this->arrDadosGerais->arrOpcoes->tp_agrup->me_configuracao == ""agrup_turma"") {
            $consulta->pipe($this->dataStore(""dados_consulta""));

         $consulta->pipe(new Group(array(
            ""by""=>array(
               ""cd_curso"",
               ""cd_turma""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_turma"",
            ""nm_curso"",
            ""vl_liq"",
            ""liq_c_desc"",
            ""vl_n_pg_liq"",
            ""cd_aluno"",
            ""nm_aluno"",
            ""cd_turma"",
            ""cod_total"",
            ""cd_curso"",
            ""valorpg"",
            ""vl_bruto"",
            ""data_venc"",
            ""negoc"",
            ""canc"",
            ""anosem_parc"",
            ""acresc"",
            ""desconto"",
            ""tp_titulo"",
            ""parc"",
            ""parcelas"",
            ""desc_extra"",
            

      
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));
         
            } else {
               $consulta->pipe($this->dataStore(""dados_consulta""));

               $consulta->pipe(new Group(array(
                  ""by""=>array(
                     ""cd_curso""
                  )
               )))
               ->pipe(new OnlyColumn(array(
                  ""cd_turma"",
                  ""nm_curso"",
                  ""vl_liq"",
                  ""liq_c_desc"",
                  ""vl_n_pg_liq"",
                  ""cd_aluno"",
                  ""nm_aluno"",
                  ""cd_turma"",
                  ""cod_total"",
                  ""cd_curso"",
                  ""valorpg"",
                  ""vl_bruto"",
                  ""desc_extra"",
                  ""negoc"",
                  ""canc"",
                  ""dsc_ant_pag"",
                  ""acresc"",
                  ""desconto"",
                  ""val_pg_liq"",
                  ""parc"",
                  ""parcelas""
            
               )))
               ->pipe($this->dataStore(""dados_consulta_agrupado""));
               
            }

         #Totalizador Curso ___________________________//________________________________________
         
         $this->src('unimestre')->query(
            ""
            SELECT c.*, 
         IF(ROUND((c.liq_c_desc - c.val_pg_liq + c.acresc),2) <= 0, '-',
         ROUND((c.liq_c_desc - c.val_pg_liq + c.acresc),2))
         AS vl_n_pg_liq
      FROM
      (
      SELECT
         x.*,
         IF(ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc),
            2
         ) <= 0, '-',
         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc),
            2
         )) AS vl_liq,
         
            IF(ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc - x.dsc_ant_pag),
            2
         ) <= 0, '-',
         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc - x.dsc_ant_pag),
            2
         )) AS liq_c_desc
      FROM
         (
            SELECT
               me.turma as cod_total,
               me.curso AS cd_curso,
               me.turma AS cd_turma,
               me.parcela	AS parc,
               me.codigoaluno AS cd_aluno,
               pe.nm_pessoa AS nm_aluno,
               COUNT(DISTINCT me.codigoaluno) AS t_alu,
               COUNT(me.parcela) AS parcelas,
               CONCAT(cm.DS_CURSO,'(',cm.CD_CURSO,')') AS nm_curso,
               COUNT(DISTINCT me.codigoaluno) AS alu,
                        ROUND(
               SUM(
                  IF(
                     me.tipoparcela <> 1
                     AND me.datavencimento >= :dt_inicio
                     AND me.datavencimento <= :dt_fim,
                     (me.valorbruto + me.valorextra),
                     0
                  )
               ),
               2
         ) AS vl_bruto,
      

         ROUND(
            SUM(
               IF(
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao IN(0, 1, 2, 6, 10),
                  (me.descontoextra),
                  0
               )
            ),
            2
         ) AS desc_extra,

         ROUND(SUM(
               IF(
                  me.situacao = 3
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim 
                  AND me.datapagamento <= :dt_base,
                  (me.valorbruto + me.valorextra),
                  0
               )
               ),2
         ) AS negoc,
      

         ROUND(SUM(
               IF(
                  me.situacao IN(4, 5, 7, 8)
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.datapagamento <= :dt_base,
                     (me.valorbruto + me.valorextra),
                     0
               )
               ), 2
         ) AS canc,

         
         ROUND(
            SUM(
               IF (
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao NOT IN (3, 4, 5, 7, 8),
                  (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                  0
               )
            ),
            2
         ) AS dsc_ant_pag,
         
      
         ROUND(SUM(
               IF( me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     GET_ACRESCIMOS(me.cd_mensalidade, NULL),
                     0
               )
            ),2
         ) AS acresc,
      
         
         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                     0
                  )
               ), 2
            ) AS desconto,

         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base, 
                     (me.valorpago), 0
                  )
               ),2
         ) AS val_pg_liq
         
         
      FROM
         mensalidades me
         INNER JOIN coligadas AS c ON (c.cd_coligada = me.cd_coligada)
         LEFT JOIN turmas tu ON (
            me.anosemestre = tu.anosemestre
            AND me.turma = tu.codigo
         )
         INNER JOIN pessoas pe ON (me.codigoaluno = pe.cd_pessoa)
         INNER JOIN fin_config_tipos_titulo tp ON (
            me.cd_tipo_titulo = tp.cd_tipo_titulo
            AND tp.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN cursos_coligadas cc ON (
            tu.curso = cc.CD_CURSO
            AND tu.cd_coligada = cc.CD_COLIGADA
         )
         LEFT JOIN cursos_mestre cm ON (cc.CD_CURSO = cm.CD_CURSO)
         LEFT JOIN departamentos dp ON (cc.CD_DEPTO = dp.codigo)
         LEFT JOIN fin_config_plano_contas pc ON (
            pc.cd_conta = me.cd_plano_conta
            AND pc.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN fin_config_centro_custos custo ON (
            custo.cd_centro = me.cd_centro_custo
            AND custo.cd_coligada_matriz = c.cd_coligada_matriz
         )
      WHERE
         1 = 1
         AND me.situacao IN(4, 5, 7, 8)
         AND me.datapagamento <= :dt_base
         AND (
            me.datavencimento >= :dt_inicio
            AND me.datavencimento <= :dt_fim
         )
         AND me.dataemissao <= :dt_base
         AND (
            me.situacao NOT IN (4, 5, 7, 8)
            OR DATE_FORMAT(me.datavencimento, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m')
            OR me.tipoparcela = 1
            OR me.sn_nfe_gerada = 1
         )			
            
            "" .
                ((!empty($arrParametros["":cd_coligada""]))
                   ? ""AND me.cd_coligada IN (:cd_coligada)""
                   : NULL
                )
             . ""
            
             "" .
                ((!empty($arrParametros["":cd_departamento""]))
                   ? ""AND me.depto IN (:cd_departamento)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":id_curso""]))
                   ? ""AND cm.id_curso IN (:id_curso)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":cd_tipo_titulo""]))
                   ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":codigoaluno""]))
                   ? ""AND me.codigoaluno IN (:codigoaluno)""
                   : NULL
                )
             . ""
            
       		GROUP BY
			   me.curso
	         ) AS x) as c 
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda
                        
               )
            )
         )
         ->saveTo($consulta_tot_curso);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
         $consulta_tot_curso->pipe($this->dataStore(""dados_tot_curso""));

         $consulta_tot_curso->pipe(new Group(array(
            ""by""=>array(
               ""cd_curso""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_turma"",
            ""nm_curso"",
            ""cod_total"",
            ""vl_liq"",
            ""liq_c_desc"",
            ""vl_n_pg_liq"",
            ""cd_aluno"",
            ""cd_turma"",
            ""cod_total"",
            ""cd_curso"",
            ""valorpg"",
            ""vl_bruto"",
            ""desc_extra"",
            ""negoc"",
            ""canc"",
            ""dsc_ant_pag"",
            ""acresc"",
            ""desconto"",
            ""val_pg_liq"",
            ""t_alu"",
            ""parcelas""
      
         )))
         ->pipe($this->dataStore(""dados_consulta_tot_cur_agrupado""));


				require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									

      }

   }
","<?php

use \koolreport\widgets\koolphp\Table;
use \koolreport\processes\Filter;

// path pasta
$path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

// margens
$ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
$ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
$ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
$ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

$sn_geracao = $_POST[""pdf""];

//cabecalho
foreach ($this->dataStore(""dados_cabecalhos"") as $cabecalho) {
    if (
        ($cabecalho[""cd_coligada""] == $this->dataStore(""dados_consulta"")[0][""cd_coligada_cabecalho""]
            && $cabecalho[""cd_relatorio""] == $this->arrDadosGerais->cd_relatorio)
        ||
        ($cabecalho[""cd_coligada""] == 0
            && $cabecalho[""cd_relatorio""] == 0)
    ) {

        $logo = $cabecalho[""ds_link_cdn""];
        break;
    }
}

?>

<html>

<head>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
</head>

<body class=""relatorio"">
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

    <?php
    $tot_alunos = $this->dataStore('dados_tot_curso')->sum(""t_alu"");
    $tot_parcelas = $this->dataStore('dados_tot_curso')->sum(""parcelas"");
    $tot_val_bru = number_format( $this->dataStore('dados_tot_curso')->sum(""vl_bruto""), 2,"","",""."");
    $tot_canc = number_format( $this->dataStore('dados_tot_curso')->sum(""canc""), 2,"","",""."");
    
    $count = $this->dataStore('dados_consulta_agrupado')->count();
    $count = $count - 1;

    if ($this->arrDadosGerais->arrOpcoes->tp_agrup->me_configuracao == ""agrup_turma"") {

        foreach ($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao) {

            $dados_pagina = $this->dataStore(""dados_consulta"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )
                ->filter(
                    ""cd_turma"",
                    ""="",
                    $visualizacao[""cd_turma""]
                );

            $dados_total = $this->dataStore(""dados_tot_curso"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )

            ?>

            <style>
                @page {
                    size: landscape;
                    padding-bottom: 2px !important;
                }

                .custom_size {
                    font-size: 11px;
                    font-weight: bold;
                }
            </style>

            <style>
                .size {
                    font-size: 11px !important;

                }
            </style>

            <style>
                .borda {
                    border: 1px solid !important;
                    text-align: center !important;

                }

                table,
                tr,
                td {
                    border: 1px solid #dee2e6 !important;
                    padding: 1.5px !important;
                    margin: 0px !important;
                }

                div,
                h1 {
                    font-size: 16px !important;
                }
            </style>

            <div class=""container"">
                <div class=""conteudo"" style=""
                  padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
                  padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
                  padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
                  padding-right: <?= $ds_margem_direita . 'cm' ?>;
               "">

                    <div style=""display: flex; padding-top:25px;""><img src=""https://www.sinergia.edu.br/wp-content/uploads/2016/05/sinergia-logo.png"">
                    </div>
                    
                    <div style=""text-align: right;"">
									
                    <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'filtro.php')); ?>
                    </div>

                    <div>

                        <h1 style=""margin-bottom: 25px; text-align:center; font-size:18px !important; font-weight:bold; color:#A9A9A9"">
                            <?= $this->arrDadosGerais->nm_relatorio ?>
                        </h1>

                    </div>

                    <div style=""text-align: left; font-weight:bold; margin-bottom:15px;""> <?= $dados_pagina[0]['nm_curso'] ?> </div>

                    <?php
                    // componente responsavel pela criacao da tabela de dados
                    Table::create(array(
                        ""dataSource"" => $dados_pagina,
                        ""grouping"" => array(
                            ""cod_total"" => array(
                                ""calculate"" => array(
                                    ""{somaCanc}"" => array(""sum"", ""canc"")
                                   
                                ),

                                ""top"" => ""<td align='center' class='fonte p-2 b'>Código</td>
                                    <td align='center' class='fonte p-2 b'>Aluno</td>
                                    <td align='center' class='fonte p-2 b'>Parcela</td>
                                    <td align='center' class='fonte p-2 b'>Vencimento</td>
                                    <td align='center' class='fonte p-2 b'>Anosemestre</td>
                                    <td align='center' class='fonte p-2 b'>Turma</td>
                                    <td align='center' class='fonte p-2 b'>Tipo de Título</td>
                                    <td align='center' class='fonte p-2 b'>Men Canc</td>

                                    "",
                                ""bottom"" => ""<td  align='center' class='fonte p-2 b font-weight-bold'>{cod_total}</td>
                                    <td colspan='8' align='right' class='fonte p-2 b'>{somaCanc}</td>
                 
                                ""
                            ),
                        ),

                        ""showHeader"" => false,
                        ""columns"" => array(
                            ""cd_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""nm_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                                
                            ),
                            ""data_venc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""anosem_parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""cd_turma"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""tp_titulo"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""canc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            )

                        ),
                        ""cssClass"" => array(
                            ""table"" => ""table table-striped table-hover"",
                            ""tr"" => """",
                            ""th"" => """",
                            ""td"" => ""p-2"",
                            ""tf"" => ""darker"",
                        ),
                        ""sorting"" => array(
                            ""nm_aluno"" => ""asc""

                        )
                    ));

                    ?>

                    <?php

                    if ($key == $count) {

                    ?>

                        <hr>

                        <div style=""text-align: center; font-size:25px; font-weight:bold; padding-top:20px; padding-bottom:20px; color:#A9A9A9""> TOTAL GERAL </div>

                        <table class=""table table-striped table-hover"">
                            <tbody>
                                <tr>
                                    <td style=""text-align:center; font-weight:bold"">Total de Alunos</td>
                                    <td style=""text-align:center; font-weight:bold"">Total de Parcelas</td>
                                    <td style=""text-align:center; font-weight:bold"">Men Canc</td>
                                </tr>
                                <tr>
                                    <td style=""text-align:center;""><?php echo $tot_alunos ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_parcelas ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_canc ?></td>
                                </tr>
                            </tbody>
                        </table>

                    <?php

                         }
                    ?>

                </div>
            </div>
            <div class=""page-break"" style=""page-break-after: always;""></div>
            </div>


        <?php

        }
    } else {

        foreach ($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao) {

            $dados_pagina = $this->dataStore(""dados_consulta"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                );

            $dados_total = $this->dataStore(""dados_tot_curso"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )

        ?>

            <style>
                @page {
                    size: landscape;
                    padding-bottom: 2px !important;
                }

                .custom_size {
                    font-size: 11px;
                    font-weight: bold;
                }
            </style>

            <style>
                .size {
                    font-size: 11px !important;

                }
            </style>

            <style>
                .borda {
                    border: 1px solid !important;
                    text-align: center !important;

                }

                table,
                tr,
                td {
                    border: 1px solid #dee2e6 !important;
                    padding: 1.5px !important;
                    margin: 0px !important;
                }

                div,
                h1 {
                    font-size: 16px !important;
                }
            </style>

            <div class=""container"">
                <div class=""conteudo"" style=""
              padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
              padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
              padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
              padding-right: <?= $ds_margem_direita . 'cm' ?>;
           "">


                    <div style=""display: flex; padding-top:25px;""><img src=""https://www.sinergia.edu.br/wp-content/uploads/2016/05/sinergia-logo.png"">
                    </div>
                    
                    <div style=""text-align: right;>
                    <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'filtro.php')); ?>
                    </div>

                    <div>

                        <h1 style=""margin-bottom: 25px; text-align:center; font-size:18px !important; font-weight:bold; color:#A9A9A9"">
                            <?= $this->arrDadosGerais->nm_relatorio ?>
                        </h1>

                    </div>

                    <div style=""text-align: left; font-weight:bold; margin-bottom:15px;""> <?= $dados_pagina[0]['nm_curso'] ?> </div>

                    <?php
                    // componente responsavel pela criacao da tabela de dados
                    Table::create(array(
                        ""dataSource"" => $dados_pagina,
                        ""grouping"" => array(
                            ""cd_curso"" => array(
                                ""calculate"" => array(
                                    ""{somaCanc}"" => array(""sum"", ""canc"")
                                   
                                ),

                                ""top"" => ""<td align='center' class='fonte p-2 b'>Código</td>
                                    <td align='center' class='fonte p-2 b'>Aluno</td>
                                    <td align='center' class='fonte p-2 b'>Parcela</td>
                                    <td align='center' class='fonte p-2 b'>Vencimento</td>
                                    <td align='center' class='fonte p-2 b'>Anosemestre</td>
                                    <td align='center' class='fonte p-2 b'>Turma</td>
                                    <td align='center' class='fonte p-2 b'>Tipo de Título</td>
                                    <td align='center' class='fonte p-2 b'>Men Canc</td>

                                    "",
                                ""bottom"" => ""<td  align='center' class='fonte p-2 b font-weight-bold'>Total do Curso:</td>
                                    <td colspan='8' align='right' class='fonte p-2 b'>{somaCanc}</td>
                 
                                ""
                            ),
                        ),

                        ""showHeader"" => false,
                        ""columns"" => array(
                            ""cd_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""nm_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                                
                            ),
                            ""data_venc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""anosem_parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""cd_turma"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""tp_titulo"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""canc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            )

                        ),
                        ""cssClass"" => array(
                            ""table"" => ""table table-striped table-hover"",
                            ""tr"" => """",
                            ""th"" => """",
                            ""td"" => ""p-2"",
                            ""tf"" => ""darker"",
                        ),
                        ""sorting"" => array(
                            ""nm_aluno"" => ""asc""

                        )
                    ));

                    ?>

                    <?php

                    if ($key == $count) {

                    ?>

                        <hr>

                        <div style=""text-align: center; font-size:25px; font-weight:bold; padding-top:20px; padding-bottom:20px; color:#A9A9A9""> TOTAL GERAL </div>

                        <table class=""table table-striped table-hover"">
                            <tbody>
                                <tr>
                                    <td style=""text-align:center; font-weight:bold"">Total de Alunos</td>
                                    <td style=""text-align:center; font-weight:bold"">Total de Parcelas</td>
                                    <td style=""text-align:center; font-weight:bold"">Men Canc</td>
                                </tr>
                                <tr>
                                    <td style=""text-align:center;""><?php echo $tot_alunos ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_parcelas ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_canc ?></td>
                                </tr>
                            </tbody>
                        </table>

                    <?php

                      }
                    ?>

                </div>
                <div class=""page-break"" style=""page-break-after: always;""></div>
            </div>


    <?php

        }
     }
    ?>

</body>

</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[
{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data inicial"",
		""ds_campo"": ""dt_inicio""
	},
 
	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data final"",
		""ds_campo"": ""dt_fim""
	},

	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data Base"",
		""ds_campo"": ""dt_base""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Inicial"",
		""ds_campo"": ""parc_ini""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Final"",
		""ds_campo"": ""parc_fim""
	},
 
	{
		""tipo"": ""uni-select-coligada-filha"",
		""obrigatorio"": false,
		""label"": ""Unidade"",
		""ds_campo"": ""cd_coligada""
	},
	{
		""tipo"": ""uni-select-departamento"",
		""obrigatorio"": false,
		""label"": ""Departamento"",
		""ds_campo"": ""cd_departamento""
	},
	{
		""tipo"": ""uni-select-curso"",
		""obrigatorio"": false,
		""label"": ""Curso"",
		""ds_campo"": ""id_curso""
	},
	{
		""tipo"": ""uni-busca-turma"",
		""obrigatorio"": false,
		""label"": ""Turma"",
		""ds_campo"": ""cd_turma""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Código aluno"",
		""ds_campo"": ""codigoaluno""
	},
	{
		""tipo"": ""campo-dinamico"",
		""obrigatorio"": false,
		""label"": ""Tipo de Título"",
		""ds_chave"": ""busca-tipo-mensalidade"",
		""ds_campo"": ""cd_tipo_titulo""
	}
]
		",116,"INSERT IGNORE INTO rgo_opcoes_tipos (
								cd_opcao_tipo,
								ds_opcao_tipo,
								ds_tag_opcao,
								dt_base
						)
				VALUES (
								NULL,""Tipo Agrupamento"",""tp_agrup"",""2022-12-10 21:00:11"")","INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,11,1,""6.0 Relação de Parcelas Canceladas"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,2, NULL, NULL,""rel_parc_canc"",""2023-12-13 15:53:40"",0, NULL)","INSERT IGNORE INTO rgo_opcoes (cd_opcao, cd_relatorio,cd_opcao_tipo,sn_padrao,sn_ativo,ds_opcao,me_configuracao,ds_chave,dt_base)
VALUES (NULL,NULL,NULL,0,1,""Agrupamento por Turma"",""agrup_turma"",""rel_parc_canc_turma"",""2023-02-09 21:43:16""
 ); 
INSERT IGNORE INTO rgo_opcoes (cd_opcao, cd_relatorio,cd_opcao_tipo,sn_padrao,sn_ativo,ds_opcao,me_configuracao,ds_chave,dt_base)
VALUES (NULL,NULL,NULL,1,1,""Agrupamento por Curso"",""agrup_curso"",""rel_parc_canc_curso"",""2023-02-09 21:43:18""
 )",,485.0,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Gerenciais por Vencimento,7.0 Recebimento Referente ao Vencimento,"<?php

   $PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
   require_once( $PARMS['PASTA'] . 'nucleo.php' );
   require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
   header ('Content-type: text/html; charset=UTF-8');

   use \koolreport\processes\ColumnMeta;
   use \koolreport\processes\Group;
   use \koolreport\processes\OnlyColumn;

   // classe padrao do relatorio
   class Relatorio extends \koolreport\KoolReport {
      use \koolreport\bootstrap4\Theme;
      use \koolreport\inputs\Bindable;
      use \koolreport\inputs\POSTBinding;
      // use \koolreport\export\Exportable;
      use \koolreport\cloudexport\Exportable;
  
      const C_SN_CLOUD_EXPORT = true;

      public $path_include;
      public $arrDadosFiltro;
      public $arrDadosGerais;

      public function __construct() {

         try {

            $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
            parent::__construct();

         } catch (Exception $e) {

            echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
            die;

         }

      }

      // inicializacao dos filtros
      function defaultParamValues() {
         return array(
            ""filtros""=>'{}',
            ""gerais""=>'{}'
         );
      }

      // resgate do $_POST para vinculo com os parametros
      function bindParamsToInputs() {
         return array(
            ""filtros"",
            ""gerais""
         );
      }

      // funcao responsavel por realizar a conexao com o banco de dados
      // e resgate dos dados tratamento dos dados do $_POST
      public function settings() {

         Nucleo::import( 'relatorios.RelatoriosConexao' );
         $objRelatoriosConexao = new RelatoriosConexao;

         return $objRelatoriosConexao->settings();

      }

      // funcao responsavel por manter as consultas a serem executadas pelo relatorio
      // e geracao dos array de dados para uso posterior na visualizacao
      public function setup() {

         require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

         if (isset($_POST['filtros'])) {
            $this->arrDadosFiltro = json_decode($_POST['filtros']);
         } else {
            $this->arrDadosFiltro = json_decode($_POST);
         }

         if (isset($_POST['gerais'])) {
            $this->arrDadosGerais = json_decode($_POST['gerais']);
         }

         $arrParametros = [];

         foreach ($this->arrDadosFiltro as $filtro => $valor) {
            if (!empty($valor->ds_valor)) {
                $arrParametros["":"" . $filtro] = $valor->ds_valor;
            }
         }

         $this->src('unimestre')->query(
            ""
         SELECT c.*, 
         ROUND((c.liq_c_desc - coalesce(c.val_pg_liq,0) + coalesce(c.acresc,0)),2)
         AS vl_n_pg_liq
      FROM
      (
      SELECT
         x.*,         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc),
            2
         ) AS vl_liq,         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc - x.dsc_ant_pag),
            2
         ) AS liq_c_desc
      FROM
         (
            SELECT
               me.turma as cod_total,
               me.curso AS cd_curso,
               me.turma AS cd_turma,
               me.parcela AS parc,
               me.codigoaluno AS cd_aluno,
               pe.nm_pessoa AS nm_aluno,
               me.anosemestre As anosemestre,
               DATE_FORMAT( me.datavencimento , '%d/%m/%Y') AS data_venc,
               tp.ds_tipo_titulo As tp_titulo,
               COUNT(DISTINCT me.codigoaluno) AS t_alu,
               COUNT(me.parcela) AS parcelas,
               CONCAT(cm.DS_CURSO,'(',cm.CD_CURSO,')') AS nm_curso,
               COUNT(DISTINCT me.codigoaluno) AS alu,
                        ROUND(
               SUM(
                  IF(
                     me.tipoparcela <> 1
                     AND me.datavencimento >= :dt_inicio
                     AND me.datavencimento <= :dt_fim,
                     (me.valorbruto + me.valorextra),
                     0
                  )
               ),
               2
         ) AS vl_bruto,
      

         ROUND(
            SUM(
               IF(
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao IN(0, 1, 2, 6, 10),
                  (me.descontoextra),
                  0
               )
            ),
            2
         ) AS desc_extra,

         ROUND(SUM(
               IF(
                  me.situacao = 3
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim 
                  AND me.datapagamento <= :dt_base,
                  (me.valorbruto + me.valorextra),
                  0
               )
               ),2
         ) AS negoc,
      

         ROUND(SUM(
               IF(
                  me.situacao IN(4, 5, 7, 8)
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.datapagamento <= :dt_base,
                     (me.valorbruto + me.valorextra),
                     0
               )
               ), 2
         ) AS canc,

         
         ROUND(
            SUM(
               IF (
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao NOT IN (3, 4, 5, 7, 8),
                  (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                  0
               )
            ),
            2
         ) AS dsc_ant_pag,
         
      
         ROUND(SUM(
               IF( me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     GET_ACRESCIMOS(me.cd_mensalidade, NULL),
                     0
               )
            ),2
         ) AS acresc,
      
         
         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                     0
                  )
               ), 2
            ) AS desconto,

         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base, 
                     (me.valorpago), 0
                  )
               ),2
         ) AS val_pg_liq
         
         
      FROM
         mensalidades me
         INNER JOIN coligadas AS c ON (c.cd_coligada = me.cd_coligada)
         LEFT JOIN turmas tu ON (
            me.anosemestre = tu.anosemestre
            AND me.turma = tu.codigo
         )
         INNER JOIN pessoas pe ON (me.codigoaluno = pe.cd_pessoa)
         INNER JOIN fin_config_tipos_titulo tp ON (
            me.cd_tipo_titulo = tp.cd_tipo_titulo
            AND tp.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN cursos_coligadas cc ON (
            tu.curso = cc.CD_CURSO
            AND tu.cd_coligada = cc.CD_COLIGADA
         )
         LEFT JOIN cursos_mestre cm ON (cc.CD_CURSO = cm.CD_CURSO)
         LEFT JOIN departamentos dp ON (cc.CD_DEPTO = dp.codigo)
         LEFT JOIN fin_config_plano_contas pc ON (
            pc.cd_conta = me.cd_plano_conta
            AND pc.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN fin_config_centro_custos custo ON (
            custo.cd_centro = me.cd_centro_custo
            AND custo.cd_coligada_matriz = c.cd_coligada_matriz
         )
      WHERE
         1 = 1
         AND me.situacao IN(0,1)
         AND me.datapagamento <= :dt_base
         AND (
            me.datavencimento >= :dt_inicio
            AND me.datavencimento <= :dt_fim
         )
         AND me.dataemissao <= :dt_base
         AND (
            me.situacao NOT IN (4, 5, 7, 8)
            OR DATE_FORMAT(me.datavencimento, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m')
            OR me.tipoparcela = 1
            OR me.sn_nfe_gerada = 1
         )			
            	
      
            
            "" .
                ((!empty($arrParametros["":cd_coligada""]))
                   ? ""AND me.cd_coligada IN (:cd_coligada)""
                   : NULL
                )
             . ""
            
             "" .
                ((!empty($arrParametros["":cd_departamento""]))
                   ? ""AND me.depto IN (:cd_departamento)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":id_curso""]))
                   ? ""AND cm.id_curso IN (:id_curso)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":cd_tipo_titulo""]))
                   ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":codigoaluno""]))
                   ? ""AND me.codigoaluno IN (:codigoaluno)""
                   : NULL
                )
             . ""
            
       		GROUP BY

			   me.cd_mensalidade
                     ) AS x) as c 
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""anosemestre"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda
               )
            )
         )
         ->saveTo($consulta);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
        

         if ($this->arrDadosGerais->arrOpcoes->tp_agrup->me_configuracao == ""agrup_turma"") {
            $consulta->pipe($this->dataStore(""dados_consulta""));

         $consulta->pipe(new Group(array(
            ""by""=>array(
               ""cd_curso"",
               ""cd_turma""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_turma"",
                  ""nm_curso"",
                  ""vl_liq"",
                  ""liq_c_desc"",
                  ""vl_n_pg_liq"",
                  ""cd_aluno"",
                  ""nm_aluno"",
                  ""cd_turma"",
                  ""cod_total"",
                  ""cd_curso"",
                  ""valorpg"",
                  ""vl_bruto"",
                  ""desc_extra"",
                  ""negoc"",
                  ""canc"",
                  ""dsc_ant_pag"",
                  ""acresc"",
                  ""desconto"",
                  ""val_pg_liq"",
                  ""parc"",
                  ""parcelas"",
                  ""data_venc"",
                  ""anosemestre"",
                  ""tp_titulo""
            

      
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));
         
            } else {
               $consulta->pipe($this->dataStore(""dados_consulta""));

               $consulta->pipe(new Group(array(
                  ""by""=>array(
                     ""cd_curso""
                  )
               )))
               ->pipe(new OnlyColumn(array(
                  ""cd_turma"",
                  ""nm_curso"",
                  ""vl_liq"",
                  ""liq_c_desc"",
                  ""vl_n_pg_liq"",
                  ""cd_aluno"",
                  ""nm_aluno"",
                  ""cd_turma"",
                  ""cod_total"",
                  ""cd_curso"",
                  ""valorpg"",
                  ""vl_bruto"",
                  ""desc_extra"",
                  ""negoc"",
                  ""canc"",
                  ""dsc_ant_pag"",
                  ""acresc"",
                  ""desconto"",
                  ""val_pg_liq"",
                  ""parc"",
                  ""parcelas"",
                  ""data_venc"",
                  ""anosemestre"",
                  ""tp_titulo""
            
               )))
               ->pipe($this->dataStore(""dados_consulta_agrupado""));
               
            }

         #Totalizador Curso ___________________________//________________________________________
         
         $this->src('unimestre')->query(
            ""
            SELECT c.*, 
         ROUND((c.liq_c_desc - c.val_pg_liq + c.acresc),2)
         AS vl_n_pg_liq
      FROM
      (
      SELECT
         x.*,         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc),
            2
         ) AS vl_liq,         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc - x.dsc_ant_pag),
            2
         ) AS liq_c_desc
      FROM
         (
            SELECT
               me.turma as cod_total,
               me.curso AS cd_curso,
               me.turma AS cd_turma,
               me.parcela AS parc,
               me.codigoaluno AS cd_aluno,
               pe.nm_pessoa AS nm_aluno,
               me.anosemestre As anosemestre,
               tp.ds_tipo_titulo As tp_titulo,
               DATE_FORMAT( me.datavencimento , '%d/%m/%Y') AS data_venc,
               COUNT(DISTINCT me.codigoaluno) AS t_alu,
               COUNT(me.parcela) AS parcelas,
               CONCAT(cm.DS_CURSO,'(',cm.CD_CURSO,')') AS nm_curso,
               COUNT(DISTINCT me.codigoaluno) AS alu,
                        ROUND(
               SUM(
                  IF(
                     me.tipoparcela <> 1
                     AND me.datavencimento >= :dt_inicio
                     AND me.datavencimento <= :dt_fim,
                     (me.valorbruto + me.valorextra),
                     0
                  )
               ),
               2
         ) AS vl_bruto,
      

         ROUND(
            SUM(
               IF(
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao IN(0, 1, 2, 6, 10),
                  (me.descontoextra),
                  0
               )
            ),
            2
         ) AS desc_extra,

         ROUND(SUM(
               IF(
                  me.situacao = 3
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim 
                  AND me.datapagamento <= :dt_base,
                  (me.valorbruto + me.valorextra),
                  0
               )
               ),2
         ) AS negoc,
      

         ROUND(SUM(
               IF(
                  me.situacao IN(4, 5, 7, 8)
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.datapagamento <= :dt_base,
                     (me.valorbruto + me.valorextra),
                     0
               )
               ), 2
         ) AS canc,

         
         ROUND(
            SUM(
               IF (
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao NOT IN (3, 4, 5, 7, 8),
                  (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                  0
               )
            ),
            2
         ) AS dsc_ant_pag,
         
      
         ROUND(SUM(
               IF( me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     GET_ACRESCIMOS(me.cd_mensalidade, NULL),
                     0
               )
            ),2
         ) AS acresc,
      
         
         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                     0
                  )
               ), 2
            ) AS desconto,

         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base, 
                     (me.valorpago), 0
                  )
               ),2
         ) AS val_pg_liq
         
         
      FROM
         mensalidades me
         INNER JOIN coligadas AS c ON (c.cd_coligada = me.cd_coligada)
         LEFT JOIN turmas tu ON (
            me.anosemestre = tu.anosemestre
            AND me.turma = tu.codigo
         )
         INNER JOIN pessoas pe ON (me.codigoaluno = pe.cd_pessoa)
         INNER JOIN fin_config_tipos_titulo tp ON (
            me.cd_tipo_titulo = tp.cd_tipo_titulo
            AND tp.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN cursos_coligadas cc ON (
            tu.curso = cc.CD_CURSO
            AND tu.cd_coligada = cc.CD_COLIGADA
         )
         LEFT JOIN cursos_mestre cm ON (cc.CD_CURSO = cm.CD_CURSO)
         LEFT JOIN departamentos dp ON (cc.CD_DEPTO = dp.codigo)
         LEFT JOIN fin_config_plano_contas pc ON (
            pc.cd_conta = me.cd_plano_conta
            AND pc.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN fin_config_centro_custos custo ON (
            custo.cd_centro = me.cd_centro_custo
            AND custo.cd_coligada_matriz = c.cd_coligada_matriz
         )
      WHERE
         1 = 1
         AND me.situacao IN(0,1)
         AND me.datapagamento <= :dt_base
         AND (
            me.datavencimento >= :dt_inicio
            AND me.datavencimento <= :dt_fim
         )
         AND me.dataemissao <= :dt_base
         AND (
            me.situacao NOT IN (4, 5, 7, 8)
            OR DATE_FORMAT(me.datavencimento, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m')
            OR me.tipoparcela = 1
            OR me.sn_nfe_gerada = 1
         )			
            
            "" .
                ((!empty($arrParametros["":cd_coligada""]))
                   ? ""AND me.cd_coligada IN (:cd_coligada)""
                   : NULL
                )
             . ""
            
             "" .
                ((!empty($arrParametros["":cd_departamento""]))
                   ? ""AND me.depto IN (:cd_departamento)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":id_curso""]))
                   ? ""AND cm.id_curso IN (:id_curso)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":cd_tipo_titulo""]))
                   ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":codigoaluno""]))
                   ? ""AND me.codigoaluno IN (:codigoaluno)""
                   : NULL
                )
             . ""
            
       		GROUP BY
			   me.curso
	         ) AS x) as c 
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""anosemestre"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda
                        
               )
            )
         )
         ->saveTo($consulta_tot_curso);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
         $consulta_tot_curso->pipe($this->dataStore(""dados_tot_curso""));

         $consulta_tot_curso->pipe(new Group(array(
            ""by""=>array(
               ""cd_curso""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_turma"",
                  ""nm_curso"",
                  ""vl_liq"",
                  ""liq_c_desc"",
                  ""vl_n_pg_liq"",
                  ""cd_aluno"",
                  ""nm_aluno"",
                  ""cd_turma"",
                  ""cod_total"",
                  ""cd_curso"",
                  ""valorpg"",
                  ""vl_bruto"",
                  ""desc_extra"",
                  ""negoc"",
                  ""canc"",
                  ""dsc_ant_pag"",
                  ""acresc"",
                  ""desconto"",
                  ""val_pg_liq"",
                  ""parc"",
                  ""parcelas"",
                  ""data_venc"",
                  ""anosemestre"",
                  ""tp_titulo""
      
         )))
         ->pipe($this->dataStore(""dados_consulta_tot_cur_agrupado""));


				require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									

      }

   }
","<?php

use \koolreport\widgets\koolphp\Table;
use \koolreport\processes\Filter;

// path pasta
$path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

// margens
$ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
$ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
$ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
$ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

$sn_geracao = $_POST[""pdf""];

//cabecalho
foreach ($this->dataStore(""dados_cabecalhos"") as $cabecalho) {
    if (
        ($cabecalho[""cd_coligada""] == $this->dataStore(""dados_consulta"")[0][""cd_coligada_cabecalho""]
            && $cabecalho[""cd_relatorio""] == $this->arrDadosGerais->cd_relatorio)
        ||
        ($cabecalho[""cd_coligada""] == 0
            && $cabecalho[""cd_relatorio""] == 0)
    ) {

        $logo = $cabecalho[""ds_link_cdn""];
        break;
    }
}

?>

<html>

<head>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
</head>

<body class=""relatorio"">
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

    <?php
    $tot_alunos = $this->dataStore('dados_tot_curso')->sum(""t_alu"");
    $tot_parcelas = $this->dataStore('dados_tot_curso')->sum(""parcelas"");
    $tot_val_bru = number_format( $this->dataStore('dados_tot_curso')->sum(""vl_bruto""), 2,"","",""."");
    $tot_val_pg_liq = number_format( $this->dataStore('dados_tot_curso')->sum(""val_pg_liq""), 2,"","",""."");
    $tot_liq_c_desc = number_format( $this->dataStore('dados_tot_curso')->sum(""liq_c_desc""), 2,"","",""."");
    
    $count = $this->dataStore('dados_consulta_agrupado')->count();
    $count = $count - 1;

    if ($this->arrDadosGerais->arrOpcoes->tp_agrup->me_configuracao == ""agrup_turma"") {

        foreach ($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao) {

            $dados_pagina = $this->dataStore(""dados_consulta"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )
                ->filter(
                    ""cd_turma"",
                    ""="",
                    $visualizacao[""cd_turma""]
                );

            $dados_total = $this->dataStore(""dados_tot_curso"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )

            ?>

            <style>
                @page {
                    size: landscape;
                    padding-bottom: 2px !important;
                }

                .custom_size {
                    font-size: 11px;
                    font-weight: bold;
                }
            </style>

            <style>
                .size {
                    font-size: 11px !important;

                }
            </style>

            <style>
                .borda {
                    border: 1px solid !important;
                    text-align: center !important;

                }

                table,
                tr,
                td {
                    border: 1px solid #dee2e6 !important;
                    padding: 1.5px !important;
                    margin: 0px !important;
                }

                div,
                h1 {
                    font-size: 16px !important;
                }
            </style>

            <div class=""container"">
                <div class=""conteudo"" style=""
                  padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
                  padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
                  padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
                  padding-right: <?= $ds_margem_direita . 'cm' ?>;
               "">

                    <div style=""display: flex; padding-top:25px;""><img src=""https://www.sinergia.edu.br/wp-content/uploads/2016/05/sinergia-logo.png"">
                    </div>
                    
                    <div style=""text-align: right;>
                    <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'filtro.php')); ?>
                    </div>

                    <div>

                        <h1 style=""margin-bottom: 25px; text-align:center; font-size:18px !important; font-weight:bold; color:#A9A9A9"">
                            <?= $this->arrDadosGerais->nm_relatorio ?>
                        </h1>

                    </div>

                    <div style=""text-align: left; font-weight:bold; margin-bottom:15px;""> <?= $dados_pagina[0]['nm_curso'] ?> </div>

                    <?php
                    // componente responsavel pela criacao da tabela de dados
                    Table::create(array(
                        ""dataSource"" => $dados_pagina,
                        ""grouping"" => array(
                            ""cod_total"" => array(
                                ""calculate"" => array(
                                    ""{somaVal_pg_liq}"" => array(""sum"", ""val_pg_liq"")
                                   
                                ),

                                ""top"" => ""<td align='center' class='fonte p-2 b'>Código</td>
                                    <td align='center' class='fonte p-2 b'>Aluno</td>
                                    <td align='center' class='fonte p-2 b'>Parcela</td>
                                    <td align='center' class='fonte p-2 b'>Vencimento</td>
                                    <td align='center' class='fonte p-2 b'>Anosemestre</td>
                                    <td align='center' class='fonte p-2 b'>Turma</td>
                                    <td align='center' class='fonte p-2 b'>Tipo de Título</td>
                                    <td align='center' class='fonte p-2 b'>Liq.C/Desc</td>
                                    <td align='center' class='fonte p-2 b'>Acréscimo</td>
                                    <td align='center' class='fonte p-2 b'>Desconto</td>
                                    <td align='center' class='fonte p-2 b'>Vl.Pq.Liq</td>

                                    "",
                                ""bottom"" => ""<td  align='center' class='fonte p-2 b font-weight-bold'>{cod_total}</td>
                                    <td colspan='8' align='right' class='fonte p-2 b'>{somaVal_pg_liq}</td>
                 
                                ""
                            ),
                        ),

                        ""showHeader"" => false,
                        ""columns"" => array(
                            ""cd_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""nm_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                                
                            ),
                            ""data_venc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""anosemestre"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""cd_turma"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""tp_titulo"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""liq_c_desc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""acresc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""dsc_ant_pag"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""val_pg_liq"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            )
                        ),
                        ""cssClass"" => array(
                            ""table"" => ""table table-striped table-hover"",
                            ""tr"" => """",
                            ""th"" => """",
                            ""td"" => ""p-2"",
                            ""tf"" => ""darker"",
                        ),
                        ""sorting"" => array(
                            ""nm_aluno"" => ""asc""

                        )
                    ));

                    ?>

                    <?php

                    if ($key == $count) {

                    ?>

                        <hr>

                        <div style=""text-align: center; font-size:25px; font-weight:bold; padding-top:20px; padding-bottom:20px; color:#A9A9A9""> TOTAL GERAL </div>

                        <table class=""table table-striped table-hover"">
                            <tbody>
                                <tr>
                                    <td style=""text-align:center; font-weight:bold"">Total de Alunos</td>
                                    <td style=""text-align:center; font-weight:bold"">Total de Parcelas</td>
                                    <td style=""text-align:center; font-weight:bold"">Men Pagas</td>
                                </tr>
                                <tr>
                                    <td style=""text-align:center;""><?php echo $tot_alunos ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_parcelas ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_val_pg_liq ?></td>
                                </tr>
                            </tbody>
                        </table>

                    <?php

                         }
                    ?>

                </div>
            </div>
            <div class=""page-break"" style=""page-break-after: always;""></div>
            </div>


        <?php

        }
    } else {

        foreach ($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao) {

            $dados_pagina = $this->dataStore(""dados_consulta"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                );

            $dados_total = $this->dataStore(""dados_tot_curso"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )

        ?>

            <style>
                @page {
                    size: landscape;
                    padding-bottom: 2px !important;
                }

                .custom_size {
                    font-size: 11px;
                    font-weight: bold;
                }
            </style>

            <style>
                .size {
                    font-size: 11px !important;

                }
            </style>

            <style>
                .borda {
                    border: 1px solid !important;
                    text-align: center !important;

                }

                table,
                tr,
                td {
                    border: 1px solid #dee2e6 !important;
                    padding: 1.5px !important;
                    margin: 0px !important;
                }

                div,
                h1 {
                    font-size: 16px !important;
                }
            </style>

            <div class=""container"">
                <div class=""conteudo"" style=""
              padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
              padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
              padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
              padding-right: <?= $ds_margem_direita . 'cm' ?>;
           "">


                    <div style=""display: flex; padding-top:25px;""><img src=""https://www.sinergia.edu.br/wp-content/uploads/2016/05/sinergia-logo.png"">
                    </div>

                    <div>

                        <h1 style=""margin-bottom: 25px; text-align:center; font-size:18px !important; font-weight:bold; color:#A9A9A9"">
                            <?= $this->arrDadosGerais->nm_relatorio ?>
                        </h1>

                    </div>

                    <div style=""text-align: left; font-weight:bold; margin-bottom:15px;""> <?= $dados_pagina[0]['nm_curso'] ?> </div>

                    <?php
                    // componente responsavel pela criacao da tabela de dados
                    Table::create(array(
                        ""dataSource"" => $dados_pagina,
                        ""grouping"" => array(
                            ""cd_curso"" => array(
                                ""calculate"" => array(
                                    ""{somaVal_pg_liq}"" => array(""sum"", ""val_pg_liq"")
                                   
                                ),

                                ""top"" => ""<td align='center' class='fonte p-2 b'>Código</td>
                                    <td align='center' class='fonte p-2 b'>Aluno</td>
                                    <td align='center' class='fonte p-2 b'>Parcela</td>
                                    <td align='center' class='fonte p-2 b'>Vencimento</td>
                                    <td align='center' class='fonte p-2 b'>Anosemestre</td>
                                    <td align='center' class='fonte p-2 b'>Turma</td>
                                    <td align='center' class='fonte p-2 b'>Tipo de Título</td>
                                    <td align='center' class='fonte p-2 b'>Liq.C/Desc</td>
                                    <td align='center' class='fonte p-2 b'>Acréscimo</td>
                                    <td align='center' class='fonte p-2 b'>Desconto</td>
                                    <td align='center' class='fonte p-2 b'>Vl.Pq.Liq</td>

                                    "",
                                ""bottom"" => ""<td  align='center' class='fonte p-2 b font-weight-bold'>Total do Curso:</td>
                                    <td colspan='11' align='right' class='fonte p-2 b'>{somaVal_pg_liq}</td>
                 
                                ""
                            ),
                        ),

                        ""showHeader"" => false,
                        ""columns"" => array(
                            ""cd_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""nm_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                                
                            ),
                            ""data_venc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""anosemestre"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""cd_turma"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""tp_titulo"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""liq_c_desc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""acresc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""dsc_ant_pag"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""val_pg_liq"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            )
                        ),
                        ""cssClass"" => array(
                            ""table"" => ""table table-striped table-hover"",
                            ""tr"" => """",
                            ""th"" => """",
                            ""td"" => ""p-2"",
                            ""tf"" => ""darker"",
                        ),
                        ""sorting"" => array(
                            ""nm_aluno"" => ""asc""

                        )
                    ));

                    ?>

                    <?php

                    if ($key == $count) {

                    ?>

                        <hr>

                        <div style=""text-align: center; font-size:25px; font-weight:bold; padding-top:20px; padding-bottom:20px; color:#A9A9A9""> TOTAL GERAL </div>

                        <table class=""table table-striped table-hover"">
                            <tbody>
                                <tr>
                                    <td style=""text-align:center; font-weight:bold"">Total de Alunos</td>
                                    <td style=""text-align:center; font-weight:bold"">Total de Parcelas</td>
                                    <td style=""text-align:center; font-weight:bold"">Men Pagas</td>
                                </tr>
                                <tr>
                                    <td style=""text-align:center;""><?php echo $tot_alunos ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_parcelas ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_val_pg_liq ?></td>
                                </tr>
                            </tbody>
                        </table>

                    <?php

                      }
                    ?>

                </div>
                <div class=""page-break"" style=""page-break-after: always;""></div>
            </div>


    <?php

        }
     }
    ?>

</body>

</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[
{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data inicial"",
		""ds_campo"": ""dt_inicio""
	},
 
	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data final"",
		""ds_campo"": ""dt_fim""
	},

	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data Base"",
		""ds_campo"": ""dt_base""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Inicial"",
		""ds_campo"": ""parc_ini""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Final"",
		""ds_campo"": ""parc_fim""
	},
 
	{
		""tipo"": ""uni-select-coligada-filha"",
		""obrigatorio"": false,
		""label"": ""Unidade"",
		""ds_campo"": ""cd_coligada""
	},
	{
		""tipo"": ""uni-select-departamento"",
		""obrigatorio"": false,
		""label"": ""Departamento"",
		""ds_campo"": ""cd_departamento""
	},
	{
		""tipo"": ""uni-select-curso"",
		""obrigatorio"": false,
		""label"": ""Curso"",
		""ds_campo"": ""id_curso""
	},
	{
		""tipo"": ""uni-busca-turma"",
		""obrigatorio"": false,
		""label"": ""Turma"",
		""ds_campo"": ""cd_turma""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Código aluno"",
		""ds_campo"": ""codigoaluno""
	},
	{
		""tipo"": ""campo-dinamico"",
		""obrigatorio"": false,
		""label"": ""Tipo de Título"",
		""ds_chave"": ""busca-tipo-mensalidade"",
		""ds_campo"": ""cd_tipo_titulo""
	}
]
		",117,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,11,1,""7.0 Recebimento Referente ao Vencimento"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,2, NULL, NULL,""rel_desc_ref_venc"",""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Gerenciais por Vencimento,8.0 Inadimplência Referente ao Vencimento,"<?php

   $PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
   require_once( $PARMS['PASTA'] . 'nucleo.php' );
   require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
   header ('Content-type: text/html; charset=UTF-8');

   use \koolreport\processes\ColumnMeta;
   use \koolreport\processes\Group;
   use \koolreport\processes\OnlyColumn;

   // classe padrao do relatorio
   class Relatorio extends \koolreport\KoolReport {
      use \koolreport\bootstrap4\Theme;
      use \koolreport\inputs\Bindable;
      use \koolreport\inputs\POSTBinding;
      // use \koolreport\export\Exportable;
      use \koolreport\cloudexport\Exportable;
  
      const C_SN_CLOUD_EXPORT = true;

      public $path_include;
      public $arrDadosFiltro;
      public $arrDadosGerais;

      public function __construct() {

         try {

            $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
            parent::__construct();

         } catch (Exception $e) {

            echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
            die;

         }

      }

      // inicializacao dos filtros
      function defaultParamValues() {
         return array(
            ""filtros""=>'{}',
            ""gerais""=>'{}'
         );
      }

      // resgate do $_POST para vinculo com os parametros
      function bindParamsToInputs() {
         return array(
            ""filtros"",
            ""gerais""
         );
      }

      // funcao responsavel por realizar a conexao com o banco de dados
      // e resgate dos dados tratamento dos dados do $_POST
      public function settings() {

         Nucleo::import( 'relatorios.RelatoriosConexao' );
         $objRelatoriosConexao = new RelatoriosConexao;

         return $objRelatoriosConexao->settings();

      }

      // funcao responsavel por manter as consultas a serem executadas pelo relatorio
      // e geracao dos array de dados para uso posterior na visualizacao
      public function setup() {

         require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

         if (isset($_POST['filtros'])) {
            $this->arrDadosFiltro = json_decode($_POST['filtros']);
         } else {
            $this->arrDadosFiltro = json_decode($_POST);
         }

         if (isset($_POST['gerais'])) {
            $this->arrDadosGerais = json_decode($_POST['gerais']);
         }

         $arrParametros = [];

         foreach ($this->arrDadosFiltro as $filtro => $valor) {
            if (!empty($valor->ds_valor)) {
                $arrParametros["":"" . $filtro] = $valor->ds_valor;
            }
         }

         $this->src('unimestre')->query(
            ""
         SELECT c.*, 
         ROUND((c.liq_c_desc - coalesce(c.val_pg_liq,0) + coalesce(c.acresc,0)),2)
         AS vl_n_pg_liq
      FROM
      (
      SELECT
         x.*,         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc),
            2
         ) AS vl_liq,         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc - x.dsc_ant_pag),
            2
         ) AS liq_c_desc
      FROM
         (
            SELECT
               me.turma as cod_total,
               me.curso AS cd_curso,
               me.turma AS cd_turma,
               me.parcela AS parc,
               me.codigoaluno AS cd_aluno,
               pe.nm_pessoa AS nm_aluno,
               me.anosemestre As anosemestre,
               DATE_FORMAT( me.datavencimento , '%d/%m/%Y') AS data_venc,
               tp.ds_tipo_titulo As tp_titulo,
               COUNT(DISTINCT me.codigoaluno) AS t_alu,
               COUNT(me.parcela) AS parcelas,
               CONCAT(cm.DS_CURSO,'(',cm.CD_CURSO,')') AS nm_curso,
               COUNT(DISTINCT me.codigoaluno) AS alu,
                        ROUND(
               SUM(
                  IF(
                     #me.tipoparcela <> 1 AND 
                     me.datavencimento >= :dt_inicio
                     AND me.datavencimento <= :dt_fim,
                     (me.valorbruto + me.valorextra),
                     0
                  )
               ),
               2
         ) AS vl_bruto,
      

         ROUND(
            SUM(
               IF(
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao IN(0, 1, 2, 6, 10),
                  (me.descontoextra),
                  0
               )
            ),
            2
         ) AS desc_extra,

         ROUND(SUM(
               IF(
                  me.situacao = 3
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim 
                  AND me.datapagamento <= :dt_base,
                  (me.valorbruto + me.valorextra),
                  0
               )
               ),2
         ) AS negoc,
      

         ROUND(SUM(
               IF(
                  me.situacao IN(4, 5, 7, 8)
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.datapagamento <= :dt_base,
                     (me.valorbruto + me.valorextra),
                     0
               )
               ), 2
         ) AS canc,

         
         ROUND(
            SUM(
               IF (
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao NOT IN (3, 4, 5, 7, 8),
                  (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                  0
               )
            ),
            2
         ) AS dsc_ant_pag,
         
      
         ROUND(SUM(
               IF( me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     GET_ACRESCIMOS(me.cd_mensalidade, NULL),
                     0
               )
            ),2
         ) AS acresc,
      
         
         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                     0
                  )
               ), 2
            ) AS desconto,

         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base, 
                     (me.valorpago), 0
                  )
               ),2
         ) AS val_pg_liq
         
         
      FROM
         mensalidades me
         INNER JOIN coligadas AS c ON (c.cd_coligada = me.cd_coligada)
         LEFT JOIN turmas tu ON (
            me.anosemestre = tu.anosemestre
            AND me.turma = tu.codigo
         )
         INNER JOIN pessoas pe ON (me.codigoaluno = pe.cd_pessoa)
         INNER JOIN fin_config_tipos_titulo tp ON (
            me.cd_tipo_titulo = tp.cd_tipo_titulo
            AND tp.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN cursos_coligadas cc ON (
            tu.curso = cc.CD_CURSO
            AND tu.cd_coligada = cc.CD_COLIGADA
         )
         LEFT JOIN cursos_mestre cm ON (cc.CD_CURSO = cm.CD_CURSO)
         LEFT JOIN departamentos dp ON (cc.CD_DEPTO = dp.codigo)
         LEFT JOIN fin_config_plano_contas pc ON (
            pc.cd_conta = me.cd_plano_conta
            AND pc.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN fin_config_centro_custos custo ON (
            custo.cd_centro = me.cd_centro_custo
            AND custo.cd_coligada_matriz = c.cd_coligada_matriz
         )
      WHERE
         1 = 1
         AND (me.situacao IN(2,10) OR me.datapagamento > :dt_base)
         AND (
            me.datavencimento >= :dt_inicio
            AND me.datavencimento <= :dt_fim
         )
         AND me.dataemissao <= :dt_base
         AND (
            me.situacao NOT IN (4, 5, 7, 8)
            OR DATE_FORMAT(me.datavencimento, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m')
            OR me.tipoparcela = 1
            OR me.sn_nfe_gerada = 1
         )			
            
            "" .
                ((!empty($arrParametros["":cd_coligada""]))
                   ? ""AND me.cd_coligada IN (:cd_coligada)""
                   : NULL
                )
             . ""
            
             "" .
                ((!empty($arrParametros["":cd_departamento""]))
                   ? ""AND me.depto IN (:cd_departamento)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":id_curso""]))
                   ? ""AND cm.id_curso IN (:id_curso)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":cd_tipo_titulo""]))
                   ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":codigoaluno""]))
                   ? ""AND me.codigoaluno IN (:codigoaluno)""
                   : NULL
                )
             . ""
            
       		GROUP BY

			   me.cd_mensalidade
                     ) AS x) as c 
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""anosemestre"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda
               )
            )
         )
         ->saveTo($consulta);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
        

         if ($this->arrDadosGerais->arrOpcoes->tp_agrup->me_configuracao == ""agrup_turma"") {
            $consulta->pipe($this->dataStore(""dados_consulta""));

         $consulta->pipe(new Group(array(
            ""by""=>array(
               ""cd_curso"",
               ""cd_turma""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_turma"",
                  ""nm_curso"",
                  ""vl_liq"",
                  ""liq_c_desc"",
                  ""vl_n_pg_liq"",
                  ""cd_aluno"",
                  ""nm_aluno"",
                  ""cd_turma"",
                  ""cod_total"",
                  ""cd_curso"",
                  ""valorpg"",
                  ""vl_bruto"",
                  ""desc_extra"",
                  ""negoc"",
                  ""canc"",
                  ""dsc_ant_pag"",
                  ""acresc"",
                  ""desconto"",
                  ""val_pg_liq"",
                  ""parc"",
                  ""parcelas"",
                  ""data_venc"",
                  ""anosemestre"",
                  ""tp_titulo""
            

      
         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));
         
            } else {
               $consulta->pipe($this->dataStore(""dados_consulta""));

               $consulta->pipe(new Group(array(
                  ""by""=>array(
                     ""cd_curso""
                  )
               )))
               ->pipe(new OnlyColumn(array(
                  ""cd_turma"",
                  ""nm_curso"",
                  ""vl_liq"",
                  ""liq_c_desc"",
                  ""vl_n_pg_liq"",
                  ""cd_aluno"",
                  ""nm_aluno"",
                  ""cd_turma"",
                  ""cod_total"",
                  ""cd_curso"",
                  ""valorpg"",
                  ""vl_bruto"",
                  ""desc_extra"",
                  ""negoc"",
                  ""canc"",
                  ""dsc_ant_pag"",
                  ""acresc"",
                  ""desconto"",
                  ""val_pg_liq"",
                  ""parc"",
                  ""parcelas"",
                  ""data_venc"",
                  ""anosemestre"",
                  ""tp_titulo""
            
               )))
               ->pipe($this->dataStore(""dados_consulta_agrupado""));
               
            }

         #Totalizador Curso ___________________________//________________________________________
         
         $this->src('unimestre')->query(
            ""
            SELECT c.*, 
         ROUND((c.liq_c_desc - c.val_pg_liq + c.acresc),2)
         AS vl_n_pg_liq
      FROM
      (
      SELECT
         x.*,         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc),
            2
         ) AS vl_liq,         
         ROUND(
            (x.vl_bruto - x.desc_extra - x.negoc - x.canc - x.dsc_ant_pag),
            2
         ) AS liq_c_desc
      FROM
         (
            SELECT
               me.turma as cod_total,
               me.curso AS cd_curso,
               me.turma AS cd_turma,
               me.parcela AS parc,
               me.codigoaluno AS cd_aluno,
               pe.nm_pessoa AS nm_aluno,
               me.anosemestre As anosemestre,
               tp.ds_tipo_titulo As tp_titulo,
               DATE_FORMAT( me.datavencimento , '%d/%m/%Y') AS data_venc,
               COUNT(DISTINCT me.codigoaluno) AS t_alu,
               COUNT(me.parcela) AS parcelas,
               CONCAT(cm.DS_CURSO,'(',cm.CD_CURSO,')') AS nm_curso,
               COUNT(DISTINCT me.codigoaluno) AS alu,
                        ROUND(
               SUM(
                  IF(
                     #me.tipoparcela <> 1 AND 
                     me.datavencimento >= :dt_inicio
                     AND me.datavencimento <= :dt_fim,
                     (me.valorbruto + me.valorextra),
                     0
                  )
               ),
               2
         ) AS vl_bruto,
      

         ROUND(
            SUM(
               IF(
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao IN(0, 1, 2, 6, 10),
                  (me.descontoextra),
                  0
               )
            ),
            2
         ) AS desc_extra,

         ROUND(SUM(
               IF(
                  me.situacao = 3
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim 
                  AND me.datapagamento <= :dt_base,
                  (me.valorbruto + me.valorextra),
                  0
               )
               ),2
         ) AS negoc,
      

         ROUND(SUM(
               IF(
                  me.situacao IN(4, 5, 7, 8)
                  AND me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.datapagamento <= :dt_base,
                     (me.valorbruto + me.valorextra),
                     0
               )
               ), 2
         ) AS canc,

         
         ROUND(
            SUM(
               IF (
                  me.datavencimento >= :dt_inicio
                  AND me.datavencimento <= :dt_fim
                  AND me.situacao NOT IN (3, 4, 5, 7, 8),
                  (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                  0
               )
            ),
            2
         ) AS dsc_ant_pag,
         
      
         ROUND(SUM(
               IF( me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     GET_ACRESCIMOS(me.cd_mensalidade, NULL),
                     0
               )
            ),2
         ) AS acresc,
      
         
         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base,
                     (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                     0
                  )
               ), 2
            ) AS desconto,

         ROUND(
               SUM(
                  IF(me.situacao IN(0, 1)
                   AND me.datapagamento <= :dt_base, 
                     (me.valorpago), 0
                  )
               ),2
         ) AS val_pg_liq
         
         
      FROM
         mensalidades me
         INNER JOIN coligadas AS c ON (c.cd_coligada = me.cd_coligada)
         LEFT JOIN turmas tu ON (
            me.anosemestre = tu.anosemestre
            AND me.turma = tu.codigo
         )
         INNER JOIN pessoas pe ON (me.codigoaluno = pe.cd_pessoa)
         INNER JOIN fin_config_tipos_titulo tp ON (
            me.cd_tipo_titulo = tp.cd_tipo_titulo
            AND tp.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN cursos_coligadas cc ON (
            tu.curso = cc.CD_CURSO
            AND tu.cd_coligada = cc.CD_COLIGADA
         )
         LEFT JOIN cursos_mestre cm ON (cc.CD_CURSO = cm.CD_CURSO)
         LEFT JOIN departamentos dp ON (cc.CD_DEPTO = dp.codigo)
         LEFT JOIN fin_config_plano_contas pc ON (
            pc.cd_conta = me.cd_plano_conta
            AND pc.cd_coligada_matriz = c.cd_coligada_matriz
         )
         LEFT JOIN fin_config_centro_custos custo ON (
            custo.cd_centro = me.cd_centro_custo
            AND custo.cd_coligada_matriz = c.cd_coligada_matriz
         )
      WHERE
         1 = 1
         AND (me.situacao IN(2,10) OR me.datapagamento > :dt_base)
         AND (
            me.datavencimento >= :dt_inicio
            AND me.datavencimento <= :dt_fim
         )
         AND me.dataemissao <= :dt_base
         AND (
            me.situacao NOT IN (4, 5, 7, 8)
            OR DATE_FORMAT(me.datavencimento, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m')
            OR me.tipoparcela = 1
            OR me.sn_nfe_gerada = 1
         )			
            
            "" .
                ((!empty($arrParametros["":cd_coligada""]))
                   ? ""AND me.cd_coligada IN (:cd_coligada)""
                   : NULL
                )
             . ""
            
             "" .
                ((!empty($arrParametros["":cd_departamento""]))
                   ? ""AND me.depto IN (:cd_departamento)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":id_curso""]))
                   ? ""AND cm.id_curso IN (:id_curso)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":cd_tipo_titulo""]))
                   ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
                   : NULL
                )
             . ""
           
             "" .
                ((!empty($arrParametros["":codigoaluno""]))
                   ? ""AND me.codigoaluno IN (:codigoaluno)""
                   : NULL
                )
             . ""
            
       		GROUP BY
			   me.curso
	         ) AS x) as c 
            
            ""//Fecha SELECT
         )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""anosemestre"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda
                        
               )
            )
         )
         ->saveTo($consulta_tot_curso);

         // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
         $consulta_tot_curso->pipe($this->dataStore(""dados_tot_curso""));

         $consulta_tot_curso->pipe(new Group(array(
            ""by""=>array(
               ""cd_curso""
            )
         )))
         ->pipe(new OnlyColumn(array(
            ""cd_turma"",
                  ""nm_curso"",
                  ""vl_liq"",
                  ""liq_c_desc"",
                  ""vl_n_pg_liq"",
                  ""cd_aluno"",
                  ""nm_aluno"",
                  ""cd_turma"",
                  ""cod_total"",
                  ""cd_curso"",
                  ""valorpg"",
                  ""vl_bruto"",
                  ""desc_extra"",
                  ""negoc"",
                  ""canc"",
                  ""dsc_ant_pag"",
                  ""acresc"",
                  ""desconto"",
                  ""val_pg_liq"",
                  ""parc"",
                  ""parcelas"",
                  ""data_venc"",
                  ""anosemestre"",
                  ""tp_titulo""
      
         )))
         ->pipe($this->dataStore(""dados_consulta_tot_cur_agrupado""));


				require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));									

      }

   }
","<?php

use \koolreport\widgets\koolphp\Table;
use \koolreport\processes\Filter;

// path pasta
$path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

// margens
$ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
$ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
$ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
$ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

$sn_geracao = $_POST[""pdf""];

//cabecalho
foreach ($this->dataStore(""dados_cabecalhos"") as $cabecalho) {
    if (
        ($cabecalho[""cd_coligada""] == $this->dataStore(""dados_consulta"")[0][""cd_coligada_cabecalho""]
            && $cabecalho[""cd_relatorio""] == $this->arrDadosGerais->cd_relatorio)
        ||
        ($cabecalho[""cd_coligada""] == 0
            && $cabecalho[""cd_relatorio""] == 0)
    ) {

        $logo = $cabecalho[""ds_link_cdn""];
        break;
    }
}

?>

<html>

<head>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
</head>

<body class=""relatorio"">
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

    <?php
    $tot_alunos = $this->dataStore('dados_tot_curso')->sum(""t_alu"");
    $tot_parcelas = $this->dataStore('dados_tot_curso')->sum(""parcelas"");
    $tot_val_bru = number_format( $this->dataStore('dados_tot_curso')->sum(""vl_bruto""), 2,"","",""."");
    $tot_val_pg_liq = number_format( $this->dataStore('dados_tot_curso')->sum(""val_pg_liq""), 2,"","",""."");
    $tot_liq_c_desc = number_format( $this->dataStore('dados_tot_curso')->sum(""liq_c_desc""), 2,"","",""."");
    $tot_vl_n_pg_liq = number_format( $this->dataStore('dados_tot_curso')->sum(""vl_n_pg_liq""), 2,"","",""."");
    
    $count = $this->dataStore('dados_consulta_agrupado')->count();
    $count = $count - 1;

    if ($this->arrDadosGerais->arrOpcoes->tp_agrup->me_configuracao == ""agrup_turma"") {

        foreach ($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao) {

            $dados_pagina = $this->dataStore(""dados_consulta"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )
                ->filter(
                    ""cd_turma"",
                    ""="",
                    $visualizacao[""cd_turma""]
                );

            $dados_total = $this->dataStore(""dados_tot_curso"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )

            ?>

            <style>
                @page {
                    size: landscape;
                    padding-bottom: 2px !important;
                }

                .custom_size {
                    font-size: 11px;
                    font-weight: bold;
                }
            </style>

            <style>
                .size {
                    font-size: 11px !important;

                }
            </style>

            <style>
                .borda {
                    border: 1px solid !important;
                    text-align: center !important;

                }

                table,
                tr,
                td {
                    border: 1px solid #dee2e6 !important;
                    padding: 1.5px !important;
                    margin: 0px !important;
                }

                div,
                h1 {
                    font-size: 16px !important;
                }
            </style>

            <div class=""container"">
                <div class=""conteudo"" style=""
                  padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
                  padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
                  padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
                  padding-right: <?= $ds_margem_direita . 'cm' ?>;
               "">

                    <div style=""display: flex; padding-top:25px;""><img src=""https://www.sinergia.edu.br/wp-content/uploads/2016/05/sinergia-logo.png"">
                    </div>
                    
                    <div style=""text-align: right;>
                    <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'filtro.php')); ?>
                    </div>

                    <div>

                        <h1 style=""margin-bottom: 25px; text-align:center; font-size:18px !important; font-weight:bold; color:#A9A9A9"">
                            <?= $this->arrDadosGerais->nm_relatorio ?>
                        </h1>

                    </div>

                    <div style=""text-align: left; font-weight:bold; margin-bottom:15px;""> <?= $dados_pagina[0]['nm_curso'] ?> </div>

                    <?php
                    // componente responsavel pela criacao da tabela de dados
                    Table::create(array(
                        ""dataSource"" => $dados_pagina,
                        ""grouping"" => array(
                            ""cod_total"" => array(
                                ""calculate"" => array(
                                    ""{somaVl_n_pg_liq}"" => array(""sum"", ""vl_n_pg_liq"")
                                   
                                ),

                                ""top"" => ""<td align='center' class='fonte p-2 b'>Código</td>
                                    <td align='center' class='fonte p-2 b'>Aluno</td>
                                    <td align='center' class='fonte p-2 b'>Parcela</td>
                                    <td align='center' class='fonte p-2 b'>Vencimento</td>
                                    <td align='center' class='fonte p-2 b'>Anosemestre</td>
                                    <td align='center' class='fonte p-2 b'>Turma</td>
                                    <td align='center' class='fonte p-2 b'>Tipo de Título</td>
                                    <td align='center' class='fonte p-2 b'>Liq.C/Desc</td>
                                    <td align='center' class='fonte p-2 b'>Acréscimo</td>
                                    <td align='center' class='fonte p-2 b'>Desconto</td>
                                    <td align='center' class='fonte p-2 b'>Vl não Pago</td>

                                    "",
                                ""bottom"" => ""<td  align='center' class='fonte p-2 b font-weight-bold'>{cod_total}</td>
                                    <td colspan='8' align='right' class='fonte p-2 b'>{somaVl_n_pg_liq}</td>
                 
                                ""
                            ),
                        ),

                        ""showHeader"" => false,
                        ""columns"" => array(
                            ""cd_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""nm_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                                
                            ),
                            ""data_venc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""anosemestre"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""cd_turma"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""tp_titulo"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""liq_c_desc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""acresc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""dsc_ant_pag"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""vl_n_pg_liq"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            )
                        ),
                        ""cssClass"" => array(
                            ""table"" => ""table table-striped table-hover"",
                            ""tr"" => """",
                            ""th"" => """",
                            ""td"" => ""p-2"",
                            ""tf"" => ""darker"",
                        ),
                        ""sorting"" => array(
                            ""nm_aluno"" => ""asc""

                        )
                    ));

                    ?>

                    <?php

                    if ($key == $count) {

                    ?>

                        <hr>

                        <div style=""text-align: center; font-size:25px; font-weight:bold; padding-top:20px; padding-bottom:20px; color:#A9A9A9""> TOTAL GERAL </div>

                        <table class=""table table-striped table-hover"">
                            <tbody>
                                <tr>
                                    <td style=""text-align:center; font-weight:bold"">Total de Alunos</td>
                                    <td style=""text-align:center; font-weight:bold"">Total de Parcelas</td>
                                    <td style=""text-align:center; font-weight:bold"">Men Não Pagas</td>
                                </tr>
                                <tr>
                                    <td style=""text-align:center;""><?php echo $tot_alunos ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_parcelas ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_vl_n_pg_liq ?></td>
                                </tr>
                            </tbody>
                        </table>

                    <?php

                         }
                    ?>

                </div>
            </div>
            <div class=""page-break"" style=""page-break-after: always;""></div>
            </div>


        <?php

        }
    } else {

        foreach ($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao) {

            $dados_pagina = $this->dataStore(""dados_consulta"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                );

            $dados_total = $this->dataStore(""dados_tot_curso"")
                ->filter(
                    ""cd_curso"",
                    ""="",
                    $visualizacao[""cd_curso""]
                )

        ?>

            <style>
                @page {
                    size: landscape;
                    padding-bottom: 2px !important;
                }

                .custom_size {
                    font-size: 11px;
                    font-weight: bold;
                }
            </style>

            <style>
                .size {
                    font-size: 11px !important;

                }
            </style>

            <style>
                .borda {
                    border: 1px solid !important;
                    text-align: center !important;

                }

                table,
                tr,
                td {
                    border: 1px solid #dee2e6 !important;
                    padding: 1.5px !important;
                    margin: 0px !important;
                }

                div,
                h1 {
                    font-size: 16px !important;
                }
            </style>

            <div class=""container"">
                <div class=""conteudo"" style=""
              padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
              padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
              padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
              padding-right: <?= $ds_margem_direita . 'cm' ?>;
           "">


                    <div style=""display: flex; padding-top:25px;""><img src=""https://www.sinergia.edu.br/wp-content/uploads/2016/05/sinergia-logo.png"">
                    </div>

                    <div>

                        <h1 style=""margin-bottom: 25px; text-align:center; font-size:18px !important; font-weight:bold; color:#A9A9A9"">
                            <?= $this->arrDadosGerais->nm_relatorio ?>
                        </h1>

                    </div>

                    <div style=""text-align: left; font-weight:bold; margin-bottom:15px;""> <?= $dados_pagina[0]['nm_curso'] ?> </div>

                    <?php
                    // componente responsavel pela criacao da tabela de dados
                    Table::create(array(
                        ""dataSource"" => $dados_pagina,
                        ""grouping"" => array(
                            ""cd_curso"" => array(
                                ""calculate"" => array(
                                    ""{somaVl_n_pg_liq}"" => array(""sum"", ""vl_n_pg_liq"")
                                   
                                ),

                                ""top"" => ""<td align='center' class='fonte p-2 b'>Código</td>
                                    <td align='center' class='fonte p-2 b'>Aluno</td>
                                    <td align='center' class='fonte p-2 b'>Parcela</td>
                                    <td align='center' class='fonte p-2 b'>Vencimento</td>
                                    <td align='center' class='fonte p-2 b'>Anosemestre</td>
                                    <td align='center' class='fonte p-2 b'>Turma</td>
                                    <td align='center' class='fonte p-2 b'>Tipo de Título</td>
                                    <td align='center' class='fonte p-2 b'>Liq.C/Desc</td>
                                    <td align='center' class='fonte p-2 b'>Acréscimo</td>
                                    <td align='center' class='fonte p-2 b'>Desconto</td>
                                    <td align='center' class='fonte p-2 b'>Vl.Não Pago</td>

                                    "",
                                ""bottom"" => ""<td  align='center' class='fonte p-2 b font-weight-bold'>Total do Curso:</td>
                                    <td colspan='11' align='right' class='fonte p-2 b'>{somaVl_n_pg_liq}</td>
                 
                                ""
                            ),
                        ),

                        ""showHeader"" => false,
                        ""columns"" => array(
                            ""cd_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""nm_aluno"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""parc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                                
                            ),
                            ""data_venc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""anosemestre"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""cd_turma"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                            ),
                            ""tp_titulo"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""liq_c_desc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""acresc"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""dsc_ant_pag"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            ),
                            ""vl_n_pg_liq"" => array(
                                ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                                ""decimals"" => ""2""
                            )
                        ),
                        ""cssClass"" => array(
                            ""table"" => ""table table-striped table-hover"",
                            ""tr"" => """",
                            ""th"" => """",
                            ""td"" => ""p-2"",
                            ""tf"" => ""darker"",
                        ),
                        ""sorting"" => array(
                            ""nm_aluno"" => ""asc""

                        )
                    ));

                    ?>

                    <?php

                    if ($key == $count) {

                    ?>

                        <hr>

                        <div style=""text-align: center; font-size:25px; font-weight:bold; padding-top:20px; padding-bottom:20px; color:#A9A9A9""> TOTAL GERAL </div>

                        <table class=""table table-striped table-hover"">
                            <tbody>
                                <tr>
                                    <td style=""text-align:center; font-weight:bold"">Total de Alunos</td>
                                    <td style=""text-align:center; font-weight:bold"">Total de Parcelas</td>
                                    <td style=""text-align:center; font-weight:bold"">Men Não Pagas</td>
                                </tr>
                                <tr>
                                    <td style=""text-align:center;""><?php echo $tot_alunos ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_parcelas ?></td>
                                    <td style=""text-align:center;""><?php echo $tot_vl_n_pg_liq ?></td>
                                </tr>
                            </tbody>
                        </table>

                    <?php

                      }
                    ?>

                </div>
                <div class=""page-break"" style=""page-break-after: always;""></div>
            </div>


    <?php

        }
     }
    ?>

</body>

</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[
{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data inicial"",
		""ds_campo"": ""dt_inicio""
	},
 
	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data final"",
		""ds_campo"": ""dt_fim""
	},

	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data Base"",
		""ds_campo"": ""dt_base""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Inicial"",
		""ds_campo"": ""parc_ini""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Final"",
		""ds_campo"": ""parc_fim""
	},
 
	{
		""tipo"": ""uni-select-coligada-filha"",
		""obrigatorio"": false,
		""label"": ""Unidade"",
		""ds_campo"": ""cd_coligada""
	},
	{
		""tipo"": ""uni-select-departamento"",
		""obrigatorio"": false,
		""label"": ""Departamento"",
		""ds_campo"": ""cd_departamento""
	},
	{
		""tipo"": ""uni-select-curso"",
		""obrigatorio"": false,
		""label"": ""Curso"",
		""ds_campo"": ""id_curso""
	},
	{
		""tipo"": ""uni-busca-turma"",
		""obrigatorio"": false,
		""label"": ""Turma"",
		""ds_campo"": ""cd_turma""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Código aluno"",
		""ds_campo"": ""codigoaluno""
	},
	{
		""tipo"": ""campo-dinamico"",
		""obrigatorio"": false,
		""label"": ""Tipo de Título"",
		""ds_chave"": ""busca-tipo-mensalidade"",
		""ds_campo"": ""cd_tipo_titulo""
	}
]
		",118,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,11,1,""8.0 Inadimplência Referente ao Vencimento"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,2, NULL, NULL,""rel_ind_ref_venc"",""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
Gerenciais por Vencimento,030 - Inadimplencia,"<?php

$PARMS = array('PASTA' => join(DIRECTORY_SEPARATOR, array('..', '..', '..', '')), 'SEGURO' => false, 'NO-SESSION' => true);
require_once($PARMS['PASTA'] . 'nucleo.php');
require_once join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'vendor', 'koolreport', 'core',  'autoload.php'));
header('Content-type: text/html; charset=UTF-8');

use \koolreport\processes\ColumnMeta;
use \koolreport\processes\Group;
use \koolreport\processes\OnlyColumn;

// classe padrao do relatorio
class Relatorio extends \koolreport\KoolReport
{
   use \koolreport\bootstrap4\Theme;
   use \koolreport\inputs\Bindable;
   use \koolreport\inputs\POSTBinding;
   // use \koolreport\export\Exportable;
   use \koolreport\cloudexport\Exportable;

   const C_SN_CLOUD_EXPORT = true;

   public $path_include;
   public $arrDadosFiltro;
   public $arrDadosGerais;

   public function __construct()
   {

      try {

         $this->path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));
         parent::__construct();
      } catch (Exception $e) {

         echo 'Exceção capturada: ',  $e->getMessage(), ""\n"";
         die;
      }
   }

   // inicializacao dos filtros
   function defaultParamValues()
   {
      return array(
         ""filtros"" => '{}',
         ""gerais"" => '{}'
      );
   }

   // resgate do $_POST para vinculo com os parametros
   function bindParamsToInputs()
   {
      return array(
         ""filtros"",
         ""gerais""
      );
   }

   // funcao responsavel por realizar a conexao com o banco de dados
   // e resgate dos dados tratamento dos dados do $_POST
   public function settings()
   {

      Nucleo::import('relatorios.RelatoriosConexao');
      $objRelatoriosConexao = new RelatoriosConexao;

      return $objRelatoriosConexao->settings();
   }

   // funcao responsavel por manter as consultas a serem executadas pelo relatorio
   // e geracao dos array de dados para uso posterior na visualizacao
   public function setup()
   {

      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'formatos.php'));

      if (isset($_POST['filtros'])) {
         $this->arrDadosFiltro = json_decode($_POST['filtros']);
      } else {
         $this->arrDadosFiltro = json_decode($_POST);
      }

      if (isset($_POST['gerais'])) {
         $this->arrDadosGerais = json_decode($_POST['gerais']);
      }

      $arrParametros = [];

      foreach ($this->arrDadosFiltro as $filtro => $valor) {
         if (!empty($valor->ds_valor)) {
            $arrParametros["":"" . $filtro] = $valor->ds_valor;
         }
      }

      $this->src('unimestre')->query(
         ""
      SELECT
         x.*,
         (x.liq_c_desc - x.pg_liq) AS vl_n_pg_liq,
         x.val_bru AS bruto,
         FORMAT(x.val_perd, 0) AS vl_perdao,
         FORMAT(x.pg_liq, 0) AS pgaliq,
         FORMAT(x.men_desc_extra, 0) AS desc_extra_mens
      FROM
         (
            SELECT
               c.*,
               ROUND(
                  IF(
                     c.dt_venc >= :dt_inicio
                     AND c.dt_venc <= :dt_fim,
                     IF(
                        c.tp_parcela = 0
                        OR c.tp_parcela = 1,
                        (c.val_brut + c.val_extra),
                        IF(c.tp_parcela = 4, c.val_fat, 0)
                     ),
                     0
                  ),
                  2
               ) AS v_brut,
               ROUND(
                  (c.val_brut - c.desc_extra - c.negoc - c.canc),
                  2
               ) AS vl_liq,
               ROUND(
                  (
                     c.val_brut - c.desc_extra - c.perdoado - c.dsc_ant_pag
                  ),
                  2
               ) AS liq_c_desc,
               c.val_brut AS val_bru,
               c.perdoado AS val_perd,
               c.val_pg_liq AS pg_liq,
               c.desc_extra AS men_desc_extra,
               c.acresc AS acrescimos
            FROM
               (
                  SELECT
                     me.codigoaluno AS cd_aluno,
                     al.nm_pessoa AS nm_aluno,
                     (SELECT 
                     GROUP_CONCAT(cp.ds_contato SEPARATOR ' - ')
                     FROM contatos_pessoas cp WHERE cp.cd_pessoa = me.cd_resp AND cp.cd_contato IN(3,4) LIMIT 1) AS ds_contatos,
                     resp_fin.nm_pessoa AS nm_resp,
                     me.turma AS cd_turma,
                     REPLACE(IF(
                        me.datavencimento < :dt_base,
                        DATEDIFF(me.datavencimento, :dt_base),
                        0
                     ),'-','') AS dias_atraso,
                     me.cd_mensalidade AS cod_mensalidade,
                     ROUND(
                        IF(
                           me.datavencimento >= :dt_inicio
                           AND me.datavencimento <= :dt_fim,
                           IF(
                              me.tipoparcela = 0
                              OR me.tipoparcela = 1,
                              (me.valorbruto + me.valorextra),
                              IF(me.tipoparcela = 4, me.vl_faturamento, 0)
                           ),
                           0
                        ),
                        2
                     ) AS val_brut,
                     me.valorpago,
                     me.situacao AS sit,
                    DATE_FORMAT(me.datavencimento, '%d/%m/%Y') AS dt_venc,
                     me.tipoparcela AS tp_parcela,
                     me.datapagamento dt_pag,
                     me.parcela AS nr_parcela,
                     me.valorextra AS val_extra,
                     cm.CD_CURSO AS cod_curso,
                     cm.DS_APELIDO AS nm_curso,
                     me.cd_tipo_titulo,
                     me.cd_coligada,
                     me.dt_competencia,
                     me.vl_faturamento val_fat,
                     me.sn_nfe_gerada,
                     ftt.sn_faturamento,
                     me.valordesconto,
                     me.codigoaluno,
                     resp_fin.nm_pessoa,
                     me.valorjuros,
                     me.cd_resp,
                     ftt.ds_tipo_titulo AS ds_tp_titulo,
                     ROUND(
                        SUM(
                           IF(
                              me.datavencimento >= :dt_inicio
                              AND me.datavencimento <= :dt_fim,
                              (me.descontoextra),
                              0
                           )
                        ),
                        2
                     ) AS desc_extra,
                     ROUND(
                        SUM(
                           IF(
                              me.situacao = 3
                              AND me.datavencimento >= :dt_inicio
                              AND me.datavencimento <= :dt_fim
                              AND me.datapagamento <= :dt_base,
                              (me.valorbruto + me.valorextra),
                              0
                           )
                        ),
                        2
                     ) AS negoc,
                     ROUND(
                        SUM(
                           IF(
                              me.situacao IN(4, 5, 7, 8)
                              AND me.datavencimento >= :dt_inicio
                              AND me.datavencimento <= :dt_fim
                              AND me.datapagamento <= :dt_base,
                              (me.valorbruto + me.valorextra),
                              0
                           )
                        ),
                        2
                     ) AS canc,
                     ROUND(
                        SUM(
                           IF (
                              me.datavencimento >= :dt_inicio
                              AND me.datavencimento <= :dt_fim
                              AND me.situacao NOT IN (3, 4, 5, 7, 8),
                              (me.valordesconto),
                              0
                           )
                        ),
                        2
                     ) AS dsc_ant_pag,
                     ROUND(
                        SUM(
                           IF(
                              me.situacao IN(0, 1)
                              AND me.datapagamento <= :dt_base,
                              GET_ACRESCIMOS(me.cd_mensalidade, NULL),
                              0
                           )
                        ),
                        2
                     ) AS acresc,
                     ROUND(
                        IF(
                           me.situacao IN(3, 4, 5, 7, 8)
                           AND me.datavencimento >= :dt_inicio
                           AND me.datavencimento <= :dt_fim,
                           IF(
                              me.datapagamento >= :dt_inicio
                              AND me.datapagamento <= :dt_fim,
                              (me.valorbruto + me.valorextra),
                              0
                           ),
                           0
                        ),
                        2
                     ) AS perdoado,
                     ROUND(
                        SUM(
                           IF(
                              me.situacao IN(0, 1)
                              AND me.datapagamento <= :dt_base,
                              (GET_DESCONTOS (me.cd_mensalidade, :dt_base)),
                              0
                           )
                        ),
                        2
                     ) AS desconto,
                     ROUND(
                        SUM(
                           IF(
                              me.situacao IN(0, 1)
                              AND me.datapagamento >= :dt_inicio
                              AND me.datapagamento <= :dt_fim,
                              (me.valorpago),
                              0
                           )
                        ),
                        2
                     ) AS val_pg_liq,
                      ROUND(GET_MORA_PROJETADA (
                me.cd_mensalidade, :dt_base, 
                me.datavencimento, me.tipoparcela
              ),2) AS mora_projetada 
                  FROM
                     mensalidades me
                     INNER JOIN turmas tu ON (
                        me.anosemestre = tu.anosemestre
                        AND me.turma = tu.codigo
                     )
                     INNER JOIN pessoas al ON (me.codigoaluno = al.cd_pessoa)
                     INNER JOIN fin_tipos_titulo ftt ON (
                        me.cd_tipo_titulo = ftt.cd_tipo_titulo
                        AND me.cd_coligada = ftt.cd_coligada
                     )
                     INNER JOIN cursos_mestre cm ON (cm.CD_CURSO = tu.curso)
                     LEFT OUTER JOIN pessoas resp_fin ON (me.cd_resp = resp_fin.cd_pessoa)
                            
                  WHERE
                     (
                        me.datavencimento >= :dt_inicio
                        AND me.datavencimento <= :dt_fim
                     )
                     AND(
                        me.situacao NOT IN(4, 5, 7, 8)
                        OR DATE_FORMAT(me.dt_competencia, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m')
                        OR me.sn_nfe_gerada = 1
                        OR me.tipoparcela = 1
                     )
                     AND ftt.sn_faturamento = 1
                     AND me.tipoparcela <> 4
					   "" .
            ((!empty($arrParametros["":parc_ini""]))
               ? ""AND me.parcela IN (:parc_ini)""
               : NULL
            )
            . ""

                  "" .
            ((!empty($arrParametros["":parc_fim""]))
               ? ""AND me.parcela IN (:parc_fim)""
               : NULL
            )
            . ""   
                  
                  "" .
            ((!empty($arrParametros["":cd_coligada""]))
               ? ""AND me.cd_coligada IN (:cd_coligada)""
               : NULL
            )
            . ""
                  
                  "" .
            ((!empty($arrParametros["":cd_departamento""]))
               ? ""AND me.depto IN (:cd_departamento)""
               : NULL
            )
            . ""
               
            "" .
            ((!empty($arrParametros["":cd_turma""]))
               ? ""AND me.turma IN (:cd_turma)""
               : NULL
            )
            . ""
               
            "" .
            ((!empty($arrParametros["":id_curso""]))
               ? ""AND cm.id_curso IN (:id_curso)""
               : NULL
            )
            . ""
                  
                  "" .
            ((!empty($arrParametros["":codigoaluno""]))
               ? ""AND me.codigoaluno IN (:codigoaluno)""
               : NULL
            )
            . ""
                  
                  "" .
            ((!empty($arrParametros["":cd_tipo_titulo""]))
               ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
               : NULL
            )
            . ""
                  
                  GROUP BY
                     me.cd_mensalidade
                  ORDER BY
                     1 ASC
               ) AS c
         ) AS x
      HAVING
         vl_n_pg_liq <> 0

            "" //Fecha SELECT
      )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""nr_parcela"" => $arrFormatoInteiro,
                  ""cod_mensalidade"" => $arrFormatoInteiro,
                  ""anosemestre"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""mora_projetada"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda
               )
            )
         )
         ->saveTo($consulta);

      // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao

      $consulta->pipe($this->dataStore(""dados_consulta""));

      $consulta->pipe(new Group(array(
         ""by"" => array(
            ""cd_curso"",
            ""cd_turma""
         )
      )))
         ->pipe(new OnlyColumn(array(
            ""nm_curso"",
            ""vl_liq"",
            ""liq_c_desc"",
            ""vl_n_pg_liq"",
            ""cd_aluno"",
            ""nm_aluno"",
            ""cd_turma"",
            ""cod_total"",
            ""cd_curso"",
            ""valorpg"",
            ""vl_bruto"",
            ""desc_extra"",
            ""negoc"",
            ""canc"",
            ""dsc_ant_pag"",
            ""acresc"",
            ""desconto"",
            ""val_pg_liq"",
            ""parc"",
            ""data"",
            ""dt_venc"",
            ""anosemestre"",
            ""tp_titulo"",
            ""ds_contatos"",
            ""ds_tp_titulo"",
            ""mora_projetada"",
            ""nm_resp"",
            ""cod_mensalidade"",
            ""dias_atraso"",
            ""mora_projetada"",
            ""nr_parcela""

         )))
         ->pipe($this->dataStore(""dados_consulta_agrupado""));

      #Totalizador Curso ___________________________//________________________________________

      $this->src('unimestre')->query(
         ""
SELECT 
  DISTINCT z.cod_alu_new  AS conta_aluno
FROM 
  (
    SELECT 
      (x.liq_c_desc - x.pg_liq) AS vl_n_pg_liq, 
      x.*, 
      x.val_bru AS bruto, 
      FORMAT(x.val_perd, 0) AS vl_perdao, 
      FORMAT(x.pg_liq, 0) AS pgaliq, 
      FORMAT(x.men_desc_extra, 0) AS desc_extra_mens, 
      x.cod_alu AS cod_alu_new 
    FROM 
      (
        SELECT 
          c.*, 
          ROUND(
            IF (
              c.dt_venc >= :dt_inicio 
              AND c.dt_venc <= :dt_fim, 
              IF (
                c.tp_parcela = 0 
                OR c.tp_parcela = 1, 
                (c.val_brut + c.val_extra), 
                IF (c.tp_parcela = 4, c.val_fat, 0)
              ), 
              0
            ), 
            2
          ) AS v_brut, 
          ROUND(
            (
              c.val_brut - c.desc_extra - c.negoc - c.canc
            ), 
            2
          ) AS vl_liq, 
          ROUND(
            (
              c.val_brut - c.desc_extra - c.perdoado - c.dsc_ant_pag
            ), 
            2
          ) AS liq_c_desc, 
          c.val_brut AS val_bru, 
          c.perdoado AS val_perd, 
          c.val_pg_liq AS pg_liq, 
          c.desc_extra AS men_desc_extra, 
          c.acresc AS acrescimos, 
          c.cd_aluno AS cod_alu 
        FROM 
          (
            SELECT 
              COUNT(
                DISTINCT(me.codigoaluno)
              ) AS teste, 
              me.codigoaluno AS cd_aluno, 
              al.nm_pessoa AS nm_aluno, 
              resp_fin.nm_pessoa AS nm_resp, 
              me.turma AS cd_turma, 
              REPLACE (
                IF (
                  me.datavencimento < :dt_base, 
                  DATEDIFF(me.datavencimento, :dt_base), 
                  0
                ), 
                '-', 
                ''
              ) AS dias_atraso, 
              me.cd_mensalidade AS cod_mensalidade, 
              ROUND(
                IF (
                  me.datavencimento >= :dt_inicio 
                  AND me.datavencimento <= :dt_fim, 
                  IF (
                    me.tipoparcela = 0 
                    OR me.tipoparcela = 1, 
                    (me.valorbruto + me.valorextra), 
                    IF (
                      me.tipoparcela = 4, me.vl_faturamento, 
                      0
                    )
                  ), 
                  0
                ), 
                2
              ) AS val_brut, 
              me.valorpago, 
              me.situacao AS sit, 
              me.datavencimento AS dt_venc, 
              me.tipoparcela AS tp_parcela, 
              me.datapagamento dt_pag, 
              me.parcela AS nr_parcela, 
              me.valorextra AS val_extra, 
              cm.CD_CURSO AS cod_curso, 
              cm.DS_APELIDO AS nm_curso, 
              me.cd_tipo_titulo, 
              me.cd_coligada, 
              me.dt_competencia, 
              me.vl_faturamento val_fat, 
              me.sn_nfe_gerada, 
              ftt.sn_faturamento, 
              me.valordesconto, 
              me.codigoaluno, 
              resp_fin.nm_pessoa, 
              me.valorjuros, 
              me.cd_resp, 
              ftt.ds_tipo_titulo AS ds_tp_titulo, 
              ROUND(
                SUM(
                  IF (
                    me.datavencimento >= :dt_inicio 
                    AND me.datavencimento <= :dt_fim, 
                    (me.descontoextra), 
                    0
                  )
                ), 
                2
              ) AS desc_extra, 
              ROUND(
                SUM(
                  IF (
                    me.situacao = 3 
                    AND me.datavencimento >= :dt_inicio 
                    AND me.datavencimento <= :dt_fim 
                    AND me.datapagamento <= :dt_base, 
                    (me.valorbruto + me.valorextra), 
                    0
                  )
                ), 
                2
              ) AS negoc, 
              ROUND(
                SUM(
                  IF (
                    me.situacao IN (4, 5, 7, 8) 
                    AND me.datavencimento >= :dt_inicio 
                    AND me.datavencimento <= :dt_fim 
                    AND me.datapagamento <= :dt_base, 
                    (me.valorbruto + me.valorextra), 
                    0
                  )
                ), 
                2
              ) AS canc, 
              ROUND(
                SUM(
                  IF (
                    me.datavencimento >= :dt_inicio 
                    AND me.datavencimento <= :dt_fim 
                    AND me.situacao NOT IN (3, 4, 5, 7, 8), 
                    (me.valordesconto), 
                    0
                  )
                ), 
                2
              ) AS dsc_ant_pag, 
              ROUND(
                SUM(
                  IF (
                    me.situacao IN (0, 1) 
                    AND me.datapagamento <= :dt_base, 
                    GET_ACRESCIMOS (me.cd_mensalidade, NULL), 
                    0
                  )
                ), 
                2
              ) AS acresc, 
              ROUND(
                IF (
                  me.situacao IN (3, 4, 5, 7, 8) 
                  AND me.datavencimento >= :dt_inicio 
                  AND me.datavencimento <= :dt_fim, 
                  IF (
                    me.datapagamento >= :dt_inicio 
                    AND me.datapagamento <= :dt_fim, 
                    (me.valorbruto + me.valorextra), 
                    0
                  ), 
                  0
                ), 
                2
              ) AS perdoado, 
              ROUND(
                SUM(
                  IF (
                    me.situacao IN (0, 1) 
                    AND me.datapagamento <= :dt_base, 
                    (
                      GET_DESCONTOS (me.cd_mensalidade, :dt_base)
                    ), 
                    0
                  )
                ), 
                2
              ) AS desconto, 
              ROUND(
                SUM(
                  IF (
                    me.situacao IN (0, 1) 
                    AND me.datapagamento >= :dt_inicio 
                    AND me.datapagamento <= :dt_fim, 
                    (me.valorpago), 
                    0
                  )
                ), 
                2
              ) AS val_pg_liq, 
               ROUND(GET_MORA_PROJETADA (
                me.cd_mensalidade, :dt_base, 
                me.datavencimento, me.tipoparcela
              ),2) AS mora_projetada 
            FROM 
              mensalidades me 
              INNER JOIN turmas tu ON (
                me.anosemestre = tu.anosemestre 
                AND me.turma = tu.codigo
              ) 
              INNER JOIN pessoas al ON (me.codigoaluno = al.cd_pessoa) 
              INNER JOIN fin_tipos_titulo ftt ON (
                me.cd_tipo_titulo = ftt.cd_tipo_titulo 
                AND me.cd_coligada = ftt.cd_coligada
              ) 
              INNER JOIN cursos_mestre cm ON (cm.CD_CURSO = tu.curso) 
              LEFT OUTER JOIN pessoas resp_fin ON (me.cd_resp = resp_fin.cd_pessoa) 
            WHERE 
              (
                me.datavencimento >= :dt_inicio 
                AND me.datavencimento <= :dt_fim
              ) 
              AND (
                me.situacao NOT IN (4, 5, 7, 8) 
                OR DATE_FORMAT(me.dt_competencia, '%Y%m') < DATE_FORMAT(me.datapagamento, '%Y%m') 
                OR me.sn_nfe_gerada = 1 
                OR me.tipoparcela = 1
              ) 
              AND ftt.sn_faturamento = 1 
              AND me.tipoparcela <> 4 
			  
               "" .
                  ((!empty($arrParametros["":parc_ini""]))
                  ? ""AND me.parcela IN (:parc_ini) ""
                  : NULL
                  )
                  . "" 
                     
               "" .
                  ((!empty($arrParametros["":parc_fim""]))
                  ? ""AND me.parcela IN (:parc_fim) ""
                  : NULL
                  )
                  . "" 
                     
               "" .
                  ((!empty($arrParametros["":cd_coligada""]))
                  ? ""AND me.cd_coligada IN (:cd_coligada)""
                  : NULL
                  )
                  . "" 
                     
               "" .
                  ((!empty($arrParametros["":cd_departamento""]))
                  ? ""AND me.depto IN (:cd_departamento) ""
                  : NULL
                  )
                  . "" 
                     
               "" .
                  ((!empty($arrParametros["":id_curso""]))
                  ? ""AND cm.id_curso IN (:id_curso) ""
                  : NULL
                  )
                  . "" 

                  "" .
                  ((!empty($arrParametros["":cd_turma""]))
                  ? ""AND me.turma IN (:cd_turma)""
                  : NULL
                  )
                  . ""	
                  
                  "" .
                  ((!empty($arrParametros["":cd_tipo_titulo""]))
                  ? ""AND me.cd_tipo_titulo IN (:cd_tipo_titulo)""
                  : NULL
                  )
                  . "" 
               "" .
                  ((!empty($arrParametros["":codigoaluno""]))
                  ? ""
                     AND me.codigoaluno IN (:codigoaluno)""
                  : NULL
                  )
                  . ""
            GROUP BY 
              me.cd_mensalidade 
            ORDER BY 
              cd_turma ASC
          ) AS c
      ) AS x 
    HAVING 
      vl_n_pg_liq <> 0
  ) AS z

         "" //Fecha SELECT
      )
         // aplicacao de filtro a consulta
         ->params(
            $arrParametros
         )
         // tratamento dos dados do array, sendo feita a aplicacao de mascaras aos dados
         // para simplificar e melhorar a apresentacao dos dados na visualizacao
         ->pipe(
            new ColumnMeta(
               array(
                  ""cd_aluno"" => $arrFormatoInteiro,
                  ""anosemestre"" => $arrFormatoInteiro,
                  ""vl_bruto"" => $arrFormatoMoeda,
                  ""vl_liq"" => $arrFormatoMoeda,
                  ""liq_c_desc"" => $arrFormatoMoeda,
                  ""vl_n_pg_liq"" => $arrFormatoMoeda,
                  ""valorpg"" => $arrFormatoMoeda,
                  ""desc_extra"" => $arrFormatoMoeda,
                  ""negoc"" => $arrFormatoMoeda,
                  ""canc"" => $arrFormatoMoeda,
                  ""dsc_ant_pag"" => $arrFormatoMoeda,
                  ""acresc"" => $arrFormatoMoeda,
                  ""desconto"" => $arrFormatoMoeda,
                  ""val_pg_liq"" => $arrFormatoMoeda,
                  ""mora_projetada"" => $arrFormatoMoeda

               )
            )
         )
         ->saveTo($consulta_tot_curso);
         
      // criacao do primeiro dataStore para uso com o componente de tabela na visualizacao
      $consulta_tot_curso->pipe($this->dataStore(""dados_tot_curso""))

         ->pipe(new OnlyColumn(array(
            ""cd_turma"",
            ""nm_curso"",
            ""vl_liq"",
            ""liq_c_desc"",
            ""vl_n_pg_liq"",
            ""cd_aluno"",
            ""nm_aluno"",
            ""cd_turma"",
            ""cod_total"",
            ""cod_curso"",
            ""valorpg"",
            ""vl_bruto"",
            ""desc_extra"",
            ""negoc"",
            ""canc"",
            ""dsc_ant_pag"",
            ""acresc"",
            ""desconto"",
            ""val_pg_liq"",
            ""parc"",
            ""parcelas"",
            ""data_venc"",
            ""anosemestre"",
            ""tp_titulo"",
            ""parc"",
            ""mora_projetada"",
            ""cont_alu"",
            ""cod_mensalidade"",
            ""conta_aluno""

         )))
         ->pipe($this->dataStore(""dados_consulta_tot_cur_agrupado""));


      require_once $this->path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'consulta_cabecalho.php'));
   }
}
","<?php

use \koolreport\widgets\koolphp\Table;
use \koolreport\processes\Filter;

// path pasta
$path_include = join(DIRECTORY_SEPARATOR, array('..', '..', '..', 'projetos', 'relatorios', ''));

// margens
$ds_margem_superior = $this->arrDadosGerais->arrFormato->ds_margem_superior;
$ds_margem_inferior = $this->arrDadosGerais->arrFormato->ds_margem_inferior;
$ds_margem_esquerda = $this->arrDadosGerais->arrFormato->ds_margem_esquerda;
$ds_margem_direita = $this->arrDadosGerais->arrFormato->ds_margem_direita;

$sn_geracao = $_POST[""pdf""];

//cabecalho
foreach ($this->dataStore(""dados_cabecalhos"") as $cabecalho) {
    if (
        ($cabecalho[""cd_coligada""] == $this->dataStore(""dados_consulta"")[0][""cd_coligada_cabecalho""]
            && $cabecalho[""cd_relatorio""] == $this->arrDadosGerais->cd_relatorio)
        ||
        ($cabecalho[""cd_coligada""] == 0
            && $cabecalho[""cd_relatorio""] == 0)
    ) {

        $logo = $cabecalho[""ds_link_cdn""];
        break;
    }
}

?>

<html>

<head>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'dados_head.php')); ?>
</head>

<body class=""relatorio"">
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'loader.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'barra_superior.php')); ?>
    <?php require_once $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'css.php')); ?>

    <?php
    $tot_alunos = $this->dataStore('dados_tot_curso')->count(""conta_aluno"");
    $tot_mora = number_format($this->dataStore('dados_consulta')->sum(""mora_projetada""), 2, "","", ""."");
    $tot_vl_n_pg_liq = number_format($this->dataStore('dados_consulta')->sum(""vl_n_pg_liq""), 2, "","", ""."");

    $count = $this->dataStore('dados_consulta_agrupado')->count();
    $count = $count - 1;

    foreach ($this->dataStore(""dados_consulta_agrupado"") as $key => $visualizacao) {

        $dados_pagina = $this->dataStore(""dados_consulta"")
            ->filter(
                ""cd_curso"",
                ""="",
                $visualizacao[""cd_curso""]
            )
            ->filter(
                ""cd_turma"",
                ""="",
                $visualizacao[""cd_turma""]
            );
        ?>

        <style>
            @page {
                size: landscape;
                padding-bottom: 2px !important;
            }

            .custom_size {
                font-size: 11px;
                font-weight: bold;
            }
        </style>

        <style>
            .size {
                font-size: 11px !important;

            }
        </style>

        <style>
            .borda {
                border: 1px solid !important;
                text-align: center !important;

            }

            .color{
                background-color: white !important;
            }

            table,
            tr,
            td {
                border: 1px solid #dee2e6 !important;
                padding: 1.5px !important;
                margin: 0px !important;
            }

            ul, li {
                font-size: 8px !important;
            }

            h5 {
                font-size: 8px !important;
            }

            div,
            h1 {
                font-size: 16px !important;
            }
        </style>

        <div class=""container"">
            <div class=""conteudo"" style=""
                  padding-top: <?= ((!$sn_geracao) ? $ds_margem_superior : 0) . 'cm' ?>;
                  padding-bottom: <?= ((!$sn_geracao) ? $ds_margem_inferior : 0) . 'cm' ?>;
                  padding-left: <?= $ds_margem_esquerda . 'cm' ?>;
                  padding-right: <?= $ds_margem_direita . 'cm' ?>;
               "">

                <div style=""display: flex; padding-top:25px;""><img src=""https://www.sinergia.edu.br/wp-content/uploads/2016/05/sinergia-logo.png"">
                </div>

                <div style=""text-align: right"">
                    <?php require $path_include . join(DIRECTORY_SEPARATOR, array('imports_padroes', 'filtro.php')); ?>
                </div>

                <div>

                    <h1 style=""margin-bottom: 25px; text-align:center; font-size:18px !important; font-weight:bold; color:#A9A9A9"">
                        <?= $this->arrDadosGerais->nm_relatorio ?>
                    </h1>

                </div>

                <div style=""text-align: left; font-weight:bold; margin-bottom:15px;""> <?= $dados_pagina[0]['nm_curso'] ?> </div>

                <?php
                // componente responsavel pela criacao da tabela de dados
                Table::create(array(
                    ""dataSource"" => $dados_pagina,
                    ""grouping"" => array(
                        ""cd_turma"" => array(
                            ""calculate"" => array(
                                ""{somaVl_n_pg_liq}"" => array(""sum"", ""vl_n_pg_liq""),
                                ""{somaVlMora}"" => array(""sum"", ""mora_projetada""),
                                ""{somaVlMora}"" => array(""sum"", ""mora_projetada"")
                            ),
                            ""top"" => ""<td align='center' class='fonte p-2 b'>Turma</td>
                                    <td align='center' class='fonte p-2 b'>Código</td>
                                    <td align='center' class='fonte p-2 b'>Nome do Aluno</td>
                                    <td align='center' class='fonte p-2 b'>Resp.Financeiro</td>
                                    <td align='center' class='fonte p-2 b'>Parcela</td>
                                    <td align='center' class='fonte p-2 b'>Vencimento</td>
                                    <td align='center' class='fonte p-2 b'>Doc.Número</td>
                                    <td align='center' class='fonte p-2 b'>Valor a Receber</td>
                                    <td align='center' class='fonte p-2 b'>Dias de Atraso</td>
                                    <td align='center' class='fonte p-2 b'>Valor da Mora</td>
                                    <td align='center' class='fonte p-2 b'>Email/Celular</td>
                                    <td align='center' class='fonte p-2 b'>Tipo de Título</td>
                                    "",
                            ""bottom"" => ""<td  align='center' class='color fonte p-2 b font-weight-bold'>Total da Turma:</td>
                                    <td colspan='7' align='right' class='color fonte p-2 b'>{somaVl_n_pg_liq}</td>
                                    <td colspan='2' align='right' class='color fonte p-2 b'>{somaVlMora}</td>
                 
                                ""
                         ),
                    ),

                    ""showHeader"" => false,
                    ""columns"" => array(
                        ""cd_turma"" => array(
                            ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                        ),
                        ""cd_aluno"" => array(
                            ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                        ),
                        ""nm_aluno"" => array(
                            ""cssStyle"" => ""text-align: center; font-size: 11px !important;""

                        ),
                        ""nm_resp"" => array(
                            ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                        ),
                        ""nr_parcela"" => array(
                            ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                        ),
                        ""dt_venc"" => array(
                            ""cssStyle"" => ""text-align: center; font-size: 11px !important;""
                        ),
                        ""cod_mensalidade"" => array(
                            ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                            ""decimals"" => ""2""
                        ),
                        ""vl_n_pg_liq"" => array(
                            ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                            ""decimals"" => ""2""
                        ),
                        ""dias_atraso"" => array(
                            ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                            ""decimals"" => ""2""
                        ),
                        ""mora_projetada"" => array(
                            ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                            ""decimals"" => ""2""
                        ),
                        ""ds_contatos"" => array(
                            ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                            ""decimals"" => ""2""
                        ),
                        ""ds_tp_titulo"" => array(
                            ""cssStyle"" => ""text-align: center; font-size: 11px !important;"",
                            ""decimals"" => ""2""
                        )
                    ),
                    ""cssClass"" => array(
                        ""table"" => ""table table-striped table-hover"",
                        ""tr"" => """",
                        ""th"" => """",
                        ""td"" => ""p-2"",
                        ""tf"" => ""darker"",
                    ),
                    ""sorting"" => array(
                        ""nm_aluno"" => ""asc""

                    )
                ));

                ?>

                    <?php

                    if ($key == $count) {

                    ?>

                    <hr>

                    <div style=""text-align: center; font-size:25px; font-weight:bold; padding-top:20px; padding-bottom:20px; color:#A9A9A9""> TOTAL GERAL </div>

                    <table class=""table table-striped table-hover"">
                        <tbody>
                            <tr>
                                <td style=""text-align:center; font-weight:bold"">Total de Alunos</td>
                                <td style=""text-align:center; font-weight:bold"">Total de Mora</td>
                                <td style=""text-align:center; font-weight:bold"">Valor a Receber R$</td>
                            </tr>
                            <tr>
                                <td style=""text-align:center;""><?php echo $tot_alunos ?></td>
                                <td style=""text-align:center;""><?php echo $tot_mora ?></td>
                                <td style=""text-align:center;""><?php echo $tot_vl_n_pg_liq ?></td>
                            </tr>
                        </tbody>
                    </table>

                <?php

                    }
                ?>

            </div>
        </div>
        <div class=""page-break"" style=""page-break-after: always;""></div>
        </div>

    <?php

        }
    ?>

</body>

</html>","<?php

require_once ""Relatorio.php"";

$relatorio = new Relatorio;

$relatorio->run()->render();","[
{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data inicial"",
		""ds_campo"": ""dt_inicio""
	},
 
	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data final"",
		""ds_campo"": ""dt_fim""
	},

	{
		""tipo"": ""campo-data"",
		""obrigatorio"": true,
		""label"": ""Data Base"",
		""ds_campo"": ""dt_base""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Inicial"",
		""ds_campo"": ""parc_ini""
	},
	
	{
		""tipo"": ""campo-inteiro"",
		""obrigatorio"": false,
		""label"": ""Parcela Final"",
		""ds_campo"": ""parc_fim""
	},
 
	{
		""tipo"": ""uni-select-coligada-filha"",
		""obrigatorio"": false,
		""label"": ""Unidade"",
		""ds_campo"": ""cd_coligada""
	},
	{
		""tipo"": ""uni-select-departamento"",
		""obrigatorio"": false,
		""label"": ""Departamento"",
		""ds_campo"": ""cd_departamento""
	},
	{
		""tipo"": ""uni-select-curso"",
		""obrigatorio"": false,
		""label"": ""Curso"",
		""ds_campo"": ""id_curso""
	},
	{
		""tipo"": ""uni-busca-turma"",
		""obrigatorio"": false,
		""label"": ""Turma"",
		""ds_campo"": ""cd_turma""
	},
	{
		""tipo"": ""uni-busca-pessoa"",
		""obrigatorio"": false,
		""label"": ""Código aluno"",
		""ds_campo"": ""codigoaluno""
	},
	{
		""tipo"": ""campo-dinamico"",
		""obrigatorio"": false,
		""label"": ""Tipo de Título"",
		""ds_chave"": ""busca-tipo-mensalidade"",
		""ds_campo"": ""cd_tipo_titulo""
	}
]
		",127,,"INSERT IGNORE INTO rgo_relatorios (
		cd_relatorio,
		cd_tipo,
		cd_agrupamento,
		sn_ativo,
		nm_relatorio,
		sn_padrao,
		ds_filtro,
		nm_arquivo,
		me_relatorio_index,
		me_relatorio_config,
		me_relatorio_view,
		cd_relatorio_template,
		cd_formato,
		me_documentacao_padrao,
		me_documentacao_cliente,
		ds_chave,
		dt_base,
		sn_autentique,
		ds_autentique_config
    )
		VALUES (
		NULL,
		3,11,1,""030 - Inadimplencia"",0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		 NULL,2, NULL, NULL,""rel_ind_geral"",""2023-12-13 15:53:40"",0, NULL)",,,,1425,Sistema de Ensino Sinergia,"SINERGIA, Colégio e Faculdade",Sistema de Ensino Sinergia
